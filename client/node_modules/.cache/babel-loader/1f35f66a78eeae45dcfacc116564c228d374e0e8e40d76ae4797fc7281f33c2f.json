{"ast":null,"code":"'use strict';\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Nexmo Client SDK\n *\n * Copyright (c) Nexmo Inc.\n*/\nconst page_1 = __importDefault(require(\"./page\"));\nconst nxmEvent_1 = __importDefault(require(\"../events/nxmEvent\"));\nconst text_event_1 = __importDefault(require(\"../events/text_event\"));\nconst image_event_1 = __importDefault(require(\"../events/image_event\"));\nconst message_event_1 = __importDefault(require(\"../events/message_event\"));\n/**\n * A Events Page\n *\n * @class EventsPage\n * @param {Map} items map of events fetched in the paginated query\n * @extends Page\n*/\nclass EventsPage extends page_1.default {\n  constructor(params) {\n    super(params);\n    this.items = new Map();\n    this.conversation = params.conversation;\n    // Iterate and create the event objects\n    params.items.forEach(event => {\n      switch (event.type) {\n        // NXMEvent types with corresponding classes\n        case 'text':\n          this.items.set(event.id, new text_event_1.default(this.conversation, event));\n          break;\n        case 'image':\n          this.items.set(event.id, new image_event_1.default(this.conversation, event));\n          break;\n        case 'message':\n          this.items.set(event.id, new message_event_1.default(this.conversation, event));\n          break;\n        default:\n          this.items.set(event.id, new nxmEvent_1.default(this.conversation, event));\n          break;\n      }\n    });\n    // update the events Map on the conversation\n    this.conversation.events = new Map([...this.conversation.events, ...this.items]);\n  }\n  /**\n   * Fetch the previous page if exists\n   * @returns {Promise<Page>}\n   * @example <caption>Fetch the previous page if exists</caption>\n   *  currentEventsPage.getPrev().then((prevEventsPage) => {\n   *    console.log(\"previous events page \", prevEventsPage);\n   *  }).catch((error) => {\n   *    console.error(\"error getting previous events page \", error);\n   *  });\n  */\n  getPrev() {\n    if (!this.hasPrev()) return this._getError();\n    return this.conversation.getEvents(this._getConfig(this.cursor.prev));\n  }\n  /**\n   * Fetch the next page if exists\n   * @returns {Promise<Page>}\n   * @example <caption>Fetch the next page if exists</caption>\n   *  currentEventsPage.getNext().then((nextEventsPage) => {\n   *    console.log(\"next events page \", nextEventsPage);\n   *  }).catch((error) => {\n   *    console.error(\"error getting next events page \", error);\n   *  });\n  */\n  getNext() {\n    if (!this.hasNext()) return this._getError();\n    return this.conversation.getEvents(this._getConfig(this.cursor.next));\n  }\n}\nexports.default = EventsPage;\nmodule.exports = EventsPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","page_1","require","nxmEvent_1","text_event_1","image_event_1","message_event_1","EventsPage","default","constructor","params","items","Map","conversation","forEach","event","type","set","id","events","getPrev","hasPrev","_getError","getEvents","_getConfig","cursor","prev","getNext","hasNext","next","module"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/node_modules/nexmo-client/dist/pages/events_page.js"],"sourcesContent":["'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Nexmo Client SDK\n *\n * Copyright (c) Nexmo Inc.\n*/\nconst page_1 = __importDefault(require(\"./page\"));\nconst nxmEvent_1 = __importDefault(require(\"../events/nxmEvent\"));\nconst text_event_1 = __importDefault(require(\"../events/text_event\"));\nconst image_event_1 = __importDefault(require(\"../events/image_event\"));\nconst message_event_1 = __importDefault(require(\"../events/message_event\"));\n/**\n * A Events Page\n *\n * @class EventsPage\n * @param {Map} items map of events fetched in the paginated query\n * @extends Page\n*/\nclass EventsPage extends page_1.default {\n    constructor(params) {\n        super(params);\n        this.items = new Map();\n        this.conversation = params.conversation;\n        // Iterate and create the event objects\n        params.items.forEach((event) => {\n            switch (event.type) {\n                // NXMEvent types with corresponding classes\n                case 'text':\n                    this.items.set(event.id, new text_event_1.default(this.conversation, event));\n                    break;\n                case 'image':\n                    this.items.set(event.id, new image_event_1.default(this.conversation, event));\n                    break;\n                case 'message':\n                    this.items.set(event.id, new message_event_1.default(this.conversation, event));\n                    break;\n                default:\n                    this.items.set(event.id, new nxmEvent_1.default(this.conversation, event));\n                    break;\n            }\n        });\n        // update the events Map on the conversation\n        this.conversation.events = new Map([...this.conversation.events, ...this.items]);\n    }\n    /**\n     * Fetch the previous page if exists\n     * @returns {Promise<Page>}\n     * @example <caption>Fetch the previous page if exists</caption>\n     *  currentEventsPage.getPrev().then((prevEventsPage) => {\n     *    console.log(\"previous events page \", prevEventsPage);\n     *  }).catch((error) => {\n     *    console.error(\"error getting previous events page \", error);\n     *  });\n    */\n    getPrev() {\n        if (!this.hasPrev())\n            return this._getError();\n        return this.conversation.getEvents(this._getConfig(this.cursor.prev));\n    }\n    /**\n     * Fetch the next page if exists\n     * @returns {Promise<Page>}\n     * @example <caption>Fetch the next page if exists</caption>\n     *  currentEventsPage.getNext().then((nextEventsPage) => {\n     *    console.log(\"next events page \", nextEventsPage);\n     *  }).catch((error) => {\n     *    console.error(\"error getting next events page \", error);\n     *  });\n    */\n    getNext() {\n        if (!this.hasNext())\n            return this._getError();\n        return this.conversation.getEvents(this._getConfig(this.cursor.next));\n    }\n}\nexports.default = EventsPage;\nmodule.exports = EventsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}