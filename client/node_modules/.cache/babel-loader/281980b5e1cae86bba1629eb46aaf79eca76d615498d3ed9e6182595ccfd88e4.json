{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import User from \"./User\";\n// import Conversation from \"./Conversation\";\n// import nexmoClient from \"nexmo-client\";\n\n// const App = () => {\n//   const [userLoginInfo, setUserLoginInfo] = useState({});\n\n//   const login = () => {\n//     let nexmo = new nexmoClient();\n//     nexmo.createSession(userLoginInfo.token).then((app) => {\n//       setUserLoginInfo((prevState) => ({\n//         ...prevState,\n//         app: app,\n//       }));\n//     });\n//   };\n\n//   const getJWT = (username) => {\n//     fetch(\"/getJWT\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ name: username }),\n//     })\n//       .then((results) => results.json())\n//       .then((data) => {\n//         setUserLoginInfo((prevState) => ({\n//           ...prevState,\n//           token: data.jwt,\n//         }));\n//         login();\n//       });\n//   };\n\n//   const userUpdated = (user) => {\n//     if (user.username) {\n//       getJWT(user.username);\n//     }\n//   };\n\n//   useEffect(() => {\n//     // componentDidMount logic can go here\n//   }, []);\n\n//   return (\n//     <div className=\"nexmo\">\n//       <User onUpdate={userUpdated} />\n//       <Conversation app={userLoginInfo.app} loggedIn={!!userLoginInfo.token} />\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React from \"react\";\nimport User from \"./User\";\nimport Conversation from \"./Conversation\";\nimport nexmoClient from \"nexmo-client\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.login = this.login.bind(this);\n    this.getJWT = this.getJWT.bind(this);\n    this.userUpdated = this.userUpdated.bind(this);\n  }\n  login() {}\n  getJWT() {}\n  userUpdated() {}\n  render() {}\n}\nexport default App;","map":{"version":3,"names":["React","User","Conversation","nexmoClient","App","Component","constructor","props","state","login","bind","getJWT","userUpdated","render"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import User from \"./User\";\n// import Conversation from \"./Conversation\";\n// import nexmoClient from \"nexmo-client\";\n\n// const App = () => {\n//   const [userLoginInfo, setUserLoginInfo] = useState({});\n\n//   const login = () => {\n//     let nexmo = new nexmoClient();\n//     nexmo.createSession(userLoginInfo.token).then((app) => {\n//       setUserLoginInfo((prevState) => ({\n//         ...prevState,\n//         app: app,\n//       }));\n//     });\n//   };\n\n//   const getJWT = (username) => {\n//     fetch(\"/getJWT\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ name: username }),\n//     })\n//       .then((results) => results.json())\n//       .then((data) => {\n//         setUserLoginInfo((prevState) => ({\n//           ...prevState,\n//           token: data.jwt,\n//         }));\n//         login();\n//       });\n//   };\n\n//   const userUpdated = (user) => {\n//     if (user.username) {\n//       getJWT(user.username);\n//     }\n//   };\n\n//   useEffect(() => {\n//     // componentDidMount logic can go here\n//   }, []);\n\n//   return (\n//     <div className=\"nexmo\">\n//       <User onUpdate={userUpdated} />\n//       <Conversation app={userLoginInfo.app} loggedIn={!!userLoginInfo.token} />\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React from \"react\";\nimport User from \"./User\";\nimport Conversation from \"./Conversation\";\n\nimport nexmoClient from \"nexmo-client\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.login = this.login.bind(this);\n    this.getJWT = this.getJWT.bind(this);\n    this.userUpdated = this.userUpdated.bind(this);\n  }\n\n  login() {}\n  getJWT() {}\n  userUpdated() {}\n  render() {}\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,OAAOC,WAAW,MAAM,cAAc;AAEtC,MAAMC,GAAG,SAASJ,KAAK,CAACK,SAAS,CAAC;EAChCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IAEf,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACD,IAAI,CAAC,IAAI,CAAC;IACpC,IAAI,CAACE,WAAW,GAAG,IAAI,CAACA,WAAW,CAACF,IAAI,CAAC,IAAI,CAAC;EAChD;EAEAD,KAAKA,CAAA,EAAG,CAAC;EACTE,MAAMA,CAAA,EAAG,CAAC;EACVC,WAAWA,CAAA,EAAG,CAAC;EACfC,MAAMA,CAAA,EAAG,CAAC;AACZ;AAEA,eAAeT,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}