{"ast":null,"code":"'use strict';\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Nexmo Client SDK\n *\n * Copyright (c) Nexmo Inc.\n*/\nconst page_1 = __importDefault(require(\"./page\"));\nconst member_1 = __importDefault(require(\"../member\"));\n/**\n * A Members Page\n *\n * @class MembersPage\n * @param {Map} items map of members fetched in the paginated query\n * @extends Page\n*/\nclass MembersPage extends page_1.default {\n  constructor(params) {\n    super(params);\n    this.conversation = params.conversation;\n    this.items = new Map();\n    // Iterate and create the conversations if not existent\n    params.items.forEach(member => {\n      this.items.set(member.id, new member_1.default(this.conversation, member));\n    });\n  }\n  /**\n   * Fetch the previous page if exists\n   * @returns {Promise<Page>}\n   * @example <caption>Fetch the previous page if exists</caption>\n   *  currentMembersPage.getPrev().then((prevMembersPage) => {\n   *    console.log(\"previous members page \", prevMembersPage);\n   *  }).catch((error) => {\n   *    console.error(\"error getting previous members page \", error);\n   *  });\n  */\n  getPrev() {\n    if (!this.hasPrev()) return this._getError();\n    return this.conversation.getMembers(this._getConfig(this.cursor.prev));\n  }\n  /**\n   * Fetch the next page if exists\n   * @returns {Promise<Page>}\n   * @example <caption>Fetch the next page if exists</caption>\n   *  currentMembersPage.getNext().then((nextMembersPage) => {\n   *    console.log(\"next members page \", nextMembersPage);\n   *  }).catch((error) => {\n   *    console.error(\"error getting next members page \", error);\n   *  });\n  */\n  getNext() {\n    if (!this.hasNext()) return this._getError();\n    return this.conversation.getMembers(this._getConfig(this.cursor.next));\n  }\n}\nexports.default = MembersPage;\nmodule.exports = MembersPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","page_1","require","member_1","MembersPage","default","constructor","params","conversation","items","Map","forEach","member","set","id","getPrev","hasPrev","_getError","getMembers","_getConfig","cursor","prev","getNext","hasNext","next","module"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/node_modules/nexmo-client/dist/pages/members_page.js"],"sourcesContent":["'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Nexmo Client SDK\n *\n * Copyright (c) Nexmo Inc.\n*/\nconst page_1 = __importDefault(require(\"./page\"));\nconst member_1 = __importDefault(require(\"../member\"));\n/**\n * A Members Page\n *\n * @class MembersPage\n * @param {Map} items map of members fetched in the paginated query\n * @extends Page\n*/\nclass MembersPage extends page_1.default {\n    constructor(params) {\n        super(params);\n        this.conversation = params.conversation;\n        this.items = new Map();\n        // Iterate and create the conversations if not existent\n        params.items.forEach((member) => {\n            this.items.set(member.id, new member_1.default(this.conversation, member));\n        });\n    }\n    /**\n     * Fetch the previous page if exists\n     * @returns {Promise<Page>}\n     * @example <caption>Fetch the previous page if exists</caption>\n     *  currentMembersPage.getPrev().then((prevMembersPage) => {\n     *    console.log(\"previous members page \", prevMembersPage);\n     *  }).catch((error) => {\n     *    console.error(\"error getting previous members page \", error);\n     *  });\n    */\n    getPrev() {\n        if (!this.hasPrev())\n            return this._getError();\n        return this.conversation.getMembers(this._getConfig(this.cursor.prev));\n    }\n    /**\n     * Fetch the next page if exists\n     * @returns {Promise<Page>}\n     * @example <caption>Fetch the next page if exists</caption>\n     *  currentMembersPage.getNext().then((nextMembersPage) => {\n     *    console.log(\"next members page \", nextMembersPage);\n     *  }).catch((error) => {\n     *    console.error(\"error getting next members page \", error);\n     *  });\n    */\n    getNext() {\n        if (!this.hasNext())\n            return this._getError();\n        return this.conversation.getMembers(this._getConfig(this.cursor.next));\n    }\n}\nexports.default = MembersPage;\nmodule.exports = MembersPage;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGP,eAAe,CAACQ,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjD,MAAMC,QAAQ,GAAGT,eAAe,CAACQ,OAAO,CAAC,WAAW,CAAC,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,WAAW,SAASH,MAAM,CAACI,OAAO,CAAC;EACrCC,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,CAAC;IACb,IAAI,CAACC,YAAY,GAAGD,MAAM,CAACC,YAAY;IACvC,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;IACtB;IACAH,MAAM,CAACE,KAAK,CAACE,OAAO,CAAEC,MAAM,IAAK;MAC7B,IAAI,CAACH,KAAK,CAACI,GAAG,CAACD,MAAM,CAACE,EAAE,EAAE,IAAIX,QAAQ,CAACE,OAAO,CAAC,IAAI,CAACG,YAAY,EAAEI,MAAM,CAAC,CAAC;IAC9E,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC,CAAC,EACf,OAAO,IAAI,CAACC,SAAS,CAAC,CAAC;IAC3B,OAAO,IAAI,CAACT,YAAY,CAACU,UAAU,CAAC,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,CAAC;EAC1E;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC,CAAC,EACf,OAAO,IAAI,CAACN,SAAS,CAAC,CAAC;IAC3B,OAAO,IAAI,CAACT,YAAY,CAACU,UAAU,CAAC,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,MAAM,CAACI,IAAI,CAAC,CAAC;EAC1E;AACJ;AACAzB,OAAO,CAACM,OAAO,GAAGD,WAAW;AAC7BqB,MAAM,CAAC1B,OAAO,GAAGK,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}