{"ast":null,"code":"var _jsxFileName = \"/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport User from \"./User\";\nimport Conversation from \"./Conversation\";\nimport nexmoClient from \"nexmo-client\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nexmo2 = new Nexmo({\n  apiKey: process.env.API_KEY,\n  apiSecret: process.env.API_SECRET\n});\n\n// Fetch all users\n\nconst App = () => {\n  _s();\n  const [userLoginInfo, setUserLoginInfo] = useState({});\n  const login = async () => {\n    try {\n      let nexmo = new nexmoClient({\n        debug: true,\n        log_reporter: {\n          enabled: true\n        }\n      });\n      const sessionData = await nexmo.createSession(userLoginInfo.token);\n      console.log(\"session\" + sessionData);\n      setUserLoginInfo(prevState => ({\n        ...prevState,\n        sessionData: sessionData\n      }));\n      const usersData = await nexmo2.users.get({}, (error, result) => {\n        if (error) {\n          console.error(\"Error fetching users:\", error);\n        } else {\n          console.log(\"List of users:\", result);\n        }\n      });\n      console.log(\"usersData : \" + usersData);\n    } catch (error) {\n      console.error(\"Error in usersData:\", error);\n    }\n  };\n  const getJWT = async username => {\n    try {\n      const response = await fetch(\"/getJWT\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: username\n        })\n      });\n      const data = await response.json();\n      console.log(\"data\" + data.jwt);\n      setUserLoginInfo(prevState => ({\n        ...prevState,\n        token: data.jwt\n      }));\n    } catch (error) {\n      console.error(\"Error in getJWT:\", error);\n    }\n  };\n  const userUpdated = user => {\n    if (user.username) {\n      getJWT(user.username);\n    }\n  };\n  const getUsers = async () => {\n    try {\n      const response = await fetch(\"/getUsers\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"data\" + response);\n    } catch (error) {\n      console.error(\"Error in :\", error);\n    }\n  };\n  useEffect(() => {\n    //getUsers();\n    if (userLoginInfo.token) {\n      login();\n    }\n  }, [userLoginInfo.token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nexmo\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nexmocontainer\",\n      children: [/*#__PURE__*/_jsxDEV(User, {\n        onUpdate: userUpdated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Conversation, {\n        sessionData: userLoginInfo.sessionData,\n        loggedIn: userLoginInfo.token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NNT3ShtK0PCXmYu+FyxtLaFdvmU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","User","Conversation","nexmoClient","jsxDEV","_jsxDEV","nexmo2","Nexmo","apiKey","process","env","API_KEY","apiSecret","API_SECRET","App","_s","userLoginInfo","setUserLoginInfo","login","nexmo","debug","log_reporter","enabled","sessionData","createSession","token","console","log","prevState","usersData","users","get","error","result","getJWT","username","response","fetch","method","headers","body","JSON","stringify","name","data","json","jwt","userUpdated","user","getUsers","className","children","onUpdate","fileName","_jsxFileName","lineNumber","columnNumber","loggedIn","_c","$RefreshReg$"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport User from \"./User\";\nimport Conversation from \"./Conversation\";\nimport nexmoClient from \"nexmo-client\";\nimport \"./App.css\";\n\nconst nexmo2 = new Nexmo({\n  apiKey: process.env.API_KEY,\n  apiSecret: process.env.API_SECRET,\n});\n\n// Fetch all users\n\nconst App = () => {\n  const [userLoginInfo, setUserLoginInfo] = useState({});\n  const login = async () => {\n    try {\n      let nexmo = new nexmoClient({\n        debug: true,\n        log_reporter: { enabled: true },\n      });\n      const sessionData = await nexmo.createSession(userLoginInfo.token);\n      console.log(\"session\" + sessionData);\n      setUserLoginInfo((prevState) => ({\n        ...prevState,\n        sessionData: sessionData,\n      }));\n      const usersData = await nexmo2.users.get({}, (error, result) => {\n        if (error) {\n          console.error(\"Error fetching users:\", error);\n        } else {\n          console.log(\"List of users:\", result);\n        }\n      });\n      console.log(\"usersData : \" + usersData);\n    } catch (error) {\n      console.error(\"Error in usersData:\", error);\n    }\n  };\n\n  const getJWT = async (username) => {\n    try {\n      const response = await fetch(\"/getJWT\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: username }),\n      });\n      const data = await response.json();\n      console.log(\"data\" + data.jwt);\n      setUserLoginInfo((prevState) => ({\n        ...prevState,\n        token: data.jwt,\n      }));\n    } catch (error) {\n      console.error(\"Error in getJWT:\", error);\n    }\n  };\n\n  const userUpdated = (user) => {\n    if (user.username) {\n      getJWT(user.username);\n    }\n  };\n\n  const getUsers = async () => {\n    try {\n      const response = await fetch(\"/getUsers\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      console.log(\"data\" + response);\n    } catch (error) {\n      console.error(\"Error in :\", error);\n    }\n  };\n\n  useEffect(() => {\n    //getUsers();\n    if (userLoginInfo.token) {\n      login();\n    }\n  }, [userLoginInfo.token]);\n\n  return (\n    <div className=\"nexmo\">\n      <div className=\"nexmocontainer\">\n        <User onUpdate={userUpdated} />\n        <Conversation\n          sessionData={userLoginInfo.sessionData}\n          loggedIn={userLoginInfo.token}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}