{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = _interopRequireDefault(require(\"./index\"));\nvar _Utils = _interopRequireDefault(require(\"./Utils\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nclass App {\n  /**\n   * Provides access to the `applications` version 2 endpoint.\n   */\n  static get PATH() {\n    return \"/v2/applications\";\n  }\n  /**\n   * @param {Credentials} credentials\n   *    credentials to be used when interacting with the API.\n   * @param {Object} options\n   *    Addition App options.\n   */\n\n  constructor(credentials) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.creds = credentials;\n    this.options = options; // Used to facilitate testing of the call to the underlying object\n\n    this._vonage = this.options.vonageOverride || _index.default;\n  }\n  _convertMethodSignature(name, type, answerUrl, eventUrl, options) {\n    var capability = {};\n    switch (type) {\n      case \"voice\":\n        capability = {\n          voice: {\n            webhooks: {\n              answer_url: {\n                address: answerUrl,\n                http_method: \"GET\"\n              },\n              event_url: {\n                address: eventUrl,\n                http_method: \"POST\"\n              }\n            }\n          }\n        };\n        break;\n      case \"messages\":\n        capability = {\n          messages: {\n            webhooks: {\n              inbound_url: {\n                address: options.inbound_url,\n                http_method: \"POST\"\n              },\n              status_url: {\n                address: options.status_url,\n                http_method: \"POST\"\n              }\n            }\n          }\n        };\n        break;\n      case \"rtc\":\n        capability = {\n          rtc: {\n            webhooks: {\n              event_url: {\n                address: eventUrl,\n                http_method: \"POST\"\n              }\n            }\n          }\n        };\n        break;\n    }\n    return {\n      name: name,\n      capabilities: capability\n    };\n  }\n  _convertApplicationResponse(application) {\n    for (var capability in application.capabilities) {\n      application[capability] = {\n        webhooks: []\n      };\n      for (var webhook in application.capabilities[capability].webhooks) {\n        application[capability].webhooks.push({\n          endpoint_type: webhook,\n          endpoint: application.capabilities[capability].webhooks[webhook].address,\n          http_method: application.capabilities[capability].webhooks[webhook].http_method\n        });\n      }\n    }\n    delete application.capabilities;\n    return application;\n  }\n  _convertApplicationListResponse(applicationResponseHandler) {\n    return response => {\n      response.count = response.total_items;\n      response.page_index = response.page;\n      for (var i in response._embedded.applications) {\n        response._embedded.applications[i] = applicationResponseHandler(response._embedded.applications[i]);\n      }\n      return response;\n    };\n  }\n  /**\n   * TODO: document\n   */\n\n  create(name, type, answerUrl, eventUrl, options, callback) {\n    var params = {};\n    var responseParser = null;\n    if (arguments.length > 2) {\n      params = JSON.stringify(this._convertMethodSignature(name, type, answerUrl, eventUrl, options));\n      responseParser = this._convertApplicationResponse;\n    } else {\n      params = JSON.stringify(name);\n      callback = type;\n    }\n    var authorization = \"\".concat(this.creds.apiKey, \":\").concat(this.creds.apiSecret);\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: App.PATH,\n      method: \"POST\",\n      body: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Basic \".concat(Buffer.from(authorization).toString(\"base64\"))\n      }\n    };\n    this.options.httpClient.request(config, callback, callback, false, responseParser);\n  }\n  /**\n   * TODO: document\n   */\n\n  get(params, callback) {\n    var v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var authorization = \"\".concat(this.creds.apiKey, \":\").concat(this.creds.apiSecret);\n    var responseParser = null;\n    if (typeof params !== \"object\") {\n      responseParser = this._convertApplicationResponse;\n    } else {\n      responseParser = this._convertApplicationListResponse(this._convertApplicationResponse);\n    }\n    if (v2) {\n      responseParser = null;\n    }\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: _Utils.default.createPathWithQuery(App.PATH, params),\n      method: \"GET\",\n      body: undefined,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Basic \".concat(Buffer.from(authorization).toString(\"base64\"))\n      }\n    };\n    this.options.httpClient.request(config, callback, callback, false, responseParser);\n  }\n  /**\n   * TODO: document\n   */\n\n  update(appId, name, type, answerUrl, eventUrl, options, callback) {\n    var params = {};\n    var responseParser = null;\n    if (arguments.length > 3) {\n      params = JSON.stringify(this._convertMethodSignature(name, type, answerUrl, eventUrl, options));\n      responseParser = this._convertApplicationResponse;\n    } else {\n      params = JSON.stringify(name);\n      callback = type;\n    }\n    var authorization = \"\".concat(this.creds.apiKey, \":\").concat(this.creds.apiSecret);\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: \"\".concat(App.PATH, \"/\").concat(appId),\n      method: \"PUT\",\n      body: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Basic \".concat(Buffer.from(authorization).toString(\"base64\"))\n      }\n    };\n    this.options.httpClient.request(config, callback, callback, false, responseParser);\n  }\n  /**\n   * TODO: document\n   */\n\n  delete(appId, callback) {\n    var authorization = \"\".concat(this.creds.apiKey, \":\").concat(this.creds.apiSecret);\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: \"\".concat(App.PATH, \"/\").concat(appId),\n      method: \"DELETE\",\n      body: \"{}\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Basic \".concat(Buffer.from(authorization).toString(\"base64\"))\n      }\n    };\n    this.options.httpClient.request(config, callback);\n  }\n}\nvar _default = App;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_index","_interopRequireDefault","require","_Utils","App","PATH","constructor","credentials","options","arguments","length","undefined","creds","_vonage","vonageOverride","default","_convertMethodSignature","name","type","answerUrl","eventUrl","capability","voice","webhooks","answer_url","address","http_method","event_url","messages","inbound_url","status_url","rtc","capabilities","_convertApplicationResponse","application","webhook","push","endpoint_type","endpoint","_convertApplicationListResponse","applicationResponseHandler","response","count","total_items","page_index","page","i","_embedded","applications","create","callback","params","responseParser","JSON","stringify","authorization","concat","apiKey","apiSecret","config","host","apiHost","path","method","body","headers","Authorization","Buffer","from","toString","httpClient","request","get","v2","createPathWithQuery","update","appId","delete"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/@vonage/server-sdk/src/App.js"],"sourcesContent":["\"use strict\";\n\nimport vonage from \"./index\";\nimport Utils from \"./Utils\";\n\nclass App {\n  /**\n   * Provides access to the `applications` version 2 endpoint.\n   */\n  static get PATH() {\n    return \"/v2/applications\";\n  }\n  /**\n   * @param {Credentials} credentials\n   *    credentials to be used when interacting with the API.\n   * @param {Object} options\n   *    Addition App options.\n   */\n  constructor(credentials, options = {}) {\n    this.creds = credentials;\n    this.options = options;\n\n    // Used to facilitate testing of the call to the underlying object\n    this._vonage = this.options.vonageOverride || vonage;\n  }\n\n  _convertMethodSignature(name, type, answerUrl, eventUrl, options) {\n    let capability = {};\n    switch (type) {\n      case \"voice\":\n        capability = {\n          voice: {\n            webhooks: {\n              answer_url: {\n                address: answerUrl,\n                http_method: \"GET\",\n              },\n              event_url: {\n                address: eventUrl,\n                http_method: \"POST\",\n              },\n            },\n          },\n        };\n        break;\n      case \"messages\":\n        capability = {\n          messages: {\n            webhooks: {\n              inbound_url: {\n                address: options.inbound_url,\n                http_method: \"POST\",\n              },\n              status_url: {\n                address: options.status_url,\n                http_method: \"POST\",\n              },\n            },\n          },\n        };\n        break;\n      case \"rtc\":\n        capability = {\n          rtc: {\n            webhooks: {\n              event_url: {\n                address: eventUrl,\n                http_method: \"POST\",\n              },\n            },\n          },\n        };\n        break;\n    }\n\n    return {\n      name: name,\n      capabilities: capability,\n    };\n  }\n\n  _convertApplicationResponse(application) {\n    for (let capability in application.capabilities) {\n      application[capability] = {\n        webhooks: [],\n      };\n      for (let webhook in application.capabilities[capability].webhooks) {\n        application[capability].webhooks.push({\n          endpoint_type: webhook,\n          endpoint:\n            application.capabilities[capability].webhooks[webhook].address,\n          http_method:\n            application.capabilities[capability].webhooks[webhook].http_method,\n        });\n      }\n    }\n\n    delete application.capabilities;\n    return application;\n  }\n\n  _convertApplicationListResponse(applicationResponseHandler) {\n    return (response) => {\n      response.count = response.total_items;\n      response.page_index = response.page;\n      for (let i in response._embedded.applications) {\n        response._embedded.applications[i] = applicationResponseHandler(\n          response._embedded.applications[i]\n        );\n      }\n\n      return response;\n    };\n  }\n\n  /**\n   * TODO: document\n   */\n  create(name, type, answerUrl, eventUrl, options, callback) {\n    let params = {};\n    let responseParser = null;\n\n    if (arguments.length > 2) {\n      params = JSON.stringify(\n        this._convertMethodSignature(name, type, answerUrl, eventUrl, options)\n      );\n      responseParser = this._convertApplicationResponse;\n    } else {\n      params = JSON.stringify(name);\n      callback = type;\n    }\n\n    const authorization = `${this.creds.apiKey}:${this.creds.apiSecret}`;\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: App.PATH,\n      method: \"POST\",\n      body: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${Buffer.from(authorization).toString(\"base64\")}`,\n      },\n    };\n\n    this.options.httpClient.request(\n      config,\n      callback,\n      callback,\n      false,\n      responseParser\n    );\n  }\n\n  /**\n   * TODO: document\n   */\n  get(params, callback, v2 = false) {\n    const authorization = `${this.creds.apiKey}:${this.creds.apiSecret}`;\n    let responseParser = null;\n\n    if (typeof params !== \"object\") {\n      responseParser = this._convertApplicationResponse;\n    } else {\n      responseParser = this._convertApplicationListResponse(\n        this._convertApplicationResponse\n      );\n    }\n\n    if (v2) {\n      responseParser = null;\n    }\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: Utils.createPathWithQuery(App.PATH, params),\n      method: \"GET\",\n      body: undefined,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${Buffer.from(authorization).toString(\"base64\")}`,\n      },\n    };\n\n    this.options.httpClient.request(\n      config,\n      callback,\n      callback,\n      false,\n      responseParser\n    );\n  }\n\n  /**\n   * TODO: document\n   */\n  update(appId, name, type, answerUrl, eventUrl, options, callback) {\n    let params = {};\n    let responseParser = null;\n    if (arguments.length > 3) {\n      params = JSON.stringify(\n        this._convertMethodSignature(name, type, answerUrl, eventUrl, options)\n      );\n      responseParser = this._convertApplicationResponse;\n    } else {\n      params = JSON.stringify(name);\n      callback = type;\n    }\n\n    const authorization = `${this.creds.apiKey}:${this.creds.apiSecret}`;\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: `${App.PATH}/${appId}`,\n      method: \"PUT\",\n      body: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${Buffer.from(authorization).toString(\"base64\")}`,\n      },\n    };\n\n    this.options.httpClient.request(\n      config,\n      callback,\n      callback,\n      false,\n      responseParser\n    );\n  }\n\n  /**\n   * TODO: document\n   */\n  delete(appId, callback) {\n    const authorization = `${this.creds.apiKey}:${this.creds.apiSecret}`;\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: `${App.PATH}/${appId}`,\n      method: \"DELETE\",\n      body: \"{}\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${Buffer.from(authorization).toString(\"base64\")}`,\n      },\n    };\n\n    this.options.httpClient.request(config, callback);\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}