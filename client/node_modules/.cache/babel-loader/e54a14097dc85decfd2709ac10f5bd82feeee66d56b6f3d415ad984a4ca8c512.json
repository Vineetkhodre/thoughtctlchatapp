{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _index = require(\"./index\");\nvar _index2 = _interopRequireDefault(_index);\nvar _Utils = require(\"./Utils\");\nvar _Utils2 = _interopRequireDefault(_Utils);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar App = function () {\n  _createClass(App, null, [{\n    key: \"PATH\",\n    /**\n     * Provides access to the `applications` version 2 endpoint.\n     */\n    get: function get() {\n      return \"/v2/applications\";\n    }\n    /**\n     * @param {Credentials} credentials\n     *    credentials to be used when interacting with the API.\n     * @param {Object} options\n     *    Addition App options.\n     */\n  }]);\n  function App(credentials) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, App);\n    this.creds = credentials;\n    this.options = options;\n\n    // Used to facilitate testing of the call to the underlying object\n    this._nexmo = this.options.nexmoOverride || _index2.default;\n  }\n  _createClass(App, [{\n    key: \"_convertMethodSignature\",\n    value: function _convertMethodSignature(name, type, answerUrl, eventUrl, options) {\n      var capability = {};\n      switch (type) {\n        case \"voice\":\n          capability = {\n            voice: {\n              webhooks: {\n                answer_url: {\n                  address: answerUrl,\n                  http_method: \"GET\"\n                },\n                event_url: {\n                  address: eventUrl,\n                  http_method: \"POST\"\n                }\n              }\n            }\n          };\n          break;\n        case \"messages\":\n          capability = {\n            messages: {\n              webhooks: {\n                inbound_url: {\n                  address: options.inbound_url,\n                  http_method: \"POST\"\n                },\n                status_url: {\n                  address: options.status_url,\n                  http_method: \"POST\"\n                }\n              }\n            }\n          };\n          break;\n        case \"rtc\":\n          capability = {\n            rtc: {\n              webhooks: {\n                event_url: {\n                  address: eventUrl,\n                  http_method: \"POST\"\n                }\n              }\n            }\n          };\n          break;\n      }\n      return {\n        name: name,\n        capabilities: capability\n      };\n    }\n  }, {\n    key: \"_convertApplicationResponse\",\n    value: function _convertApplicationResponse(application) {\n      for (var capability in application.capabilities) {\n        application[capability] = {\n          webhooks: []\n        };\n        for (var webhook in application.capabilities[capability].webhooks) {\n          application[capability].webhooks.push({\n            endpoint_type: webhook,\n            endpoint: application.capabilities[capability].webhooks[webhook].address,\n            http_method: application.capabilities[capability].webhooks[webhook].http_method\n          });\n        }\n      }\n      delete application.capabilities;\n      return application;\n    }\n  }, {\n    key: \"_convertApplicationListResponse\",\n    value: function _convertApplicationListResponse(applicationResponseHandler) {\n      return function (response) {\n        response.count = response.total_items;\n        response.page_index = response.page;\n        for (var i in response._embedded.applications) {\n          response._embedded.applications[i] = applicationResponseHandler(response._embedded.applications[i]);\n        }\n        return response;\n      };\n    }\n\n    /**\n     * TODO: document\n     */\n  }, {\n    key: \"create\",\n    value: function create(name, type, answerUrl, eventUrl, options, callback) {\n      var params = {};\n      var responseParser = null;\n      if (arguments.length > 2) {\n        params = JSON.stringify(this._convertMethodSignature(name, type, answerUrl, eventUrl, options));\n        responseParser = this._convertApplicationResponse;\n      } else {\n        params = JSON.stringify(name);\n        callback = type;\n      }\n      var authorization = this.creds.apiKey + \":\" + this.creds.apiSecret;\n      var config = {\n        host: this.options.apiHost || \"api.nexmo.com\",\n        path: App.PATH,\n        method: \"POST\",\n        body: params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Basic \" + Buffer.from(authorization).toString(\"base64\")\n        }\n      };\n      this.options.httpClient.request(config, callback, callback, false, responseParser);\n    }\n\n    /**\n     * TODO: document\n     */\n  }, {\n    key: \"get\",\n    value: function get(params, callback) {\n      var v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var authorization = this.creds.apiKey + \":\" + this.creds.apiSecret;\n      var responseParser = null;\n      if ((typeof params === \"undefined\" ? \"undefined\" : _typeof(params)) !== \"object\") {\n        responseParser = this._convertApplicationResponse;\n      } else {\n        responseParser = this._convertApplicationListResponse(this._convertApplicationResponse);\n      }\n      if (v2) {\n        responseParser = null;\n      }\n      var config = {\n        host: this.options.apiHost || \"api.nexmo.com\",\n        path: _Utils2.default.createPathWithQuery(App.PATH, params),\n        method: \"GET\",\n        body: undefined,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Basic \" + Buffer.from(authorization).toString(\"base64\")\n        }\n      };\n      this.options.httpClient.request(config, callback, callback, false, responseParser);\n    }\n\n    /**\n     * TODO: document\n     */\n  }, {\n    key: \"update\",\n    value: function update(appId, name, type, answerUrl, eventUrl, options, callback) {\n      var params = {};\n      var responseParser = null;\n      if (arguments.length > 3) {\n        params = JSON.stringify(this._convertMethodSignature(name, type, answerUrl, eventUrl, options));\n        responseParser = this._convertApplicationResponse;\n      } else {\n        params = JSON.stringify(name);\n        callback = type;\n      }\n      var authorization = this.creds.apiKey + \":\" + this.creds.apiSecret;\n      var config = {\n        host: this.options.apiHost || \"api.nexmo.com\",\n        path: App.PATH + \"/\" + appId,\n        method: \"PUT\",\n        body: params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Basic \" + Buffer.from(authorization).toString(\"base64\")\n        }\n      };\n      this.options.httpClient.request(config, callback, callback, false, responseParser);\n    }\n\n    /**\n     * TODO: document\n     */\n  }, {\n    key: \"delete\",\n    value: function _delete(appId, callback) {\n      var authorization = this.creds.apiKey + \":\" + this.creds.apiSecret;\n      var config = {\n        host: this.options.apiHost || \"api.nexmo.com\",\n        path: App.PATH + \"/\" + appId,\n        method: \"DELETE\",\n        body: \"{}\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Basic \" + Buffer.from(authorization).toString(\"base64\")\n        }\n      };\n      this.options.httpClient.request(config, callback);\n    }\n  }]);\n  return App;\n}();\nexports.default = App;\nmodule.exports = exports[\"default\"];","map":{"version":3,"names":["_index","require","_Utils","App","credentials","options","arguments","length","undefined","_classCallCheck","creds","_nexmo","nexmoOverride","_index2","default","name","type","answerUrl","eventUrl","capability","voice","webhooks","answer_url","address","http_method","event_url","messages","inbound_url","status_url","rtc","capabilities","application","webhook","push","endpoint_type","endpoint","applicationResponseHandler","response","count","total_items","page_index","page","i","_embedded","applications","callback","params","responseParser","JSON","stringify","_convertMethodSignature","_convertApplicationResponse","authorization","apiKey","apiSecret","config","host","apiHost","path","PATH","method","body","headers","Authorization","Buffer","from","toString","httpClient","request","v2","_typeof","_convertApplicationListResponse","_Utils2","createPathWithQuery","appId"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/nexmo/src/App.js"],"sourcesContent":["\"use strict\";\n\nimport nexmo from \"./index\";\nimport Utils from \"./Utils\";\n\nclass App {\n  /**\n   * Provides access to the `applications` version 2 endpoint.\n   */\n  static get PATH() {\n    return \"/v2/applications\";\n  }\n  /**\n   * @param {Credentials} credentials\n   *    credentials to be used when interacting with the API.\n   * @param {Object} options\n   *    Addition App options.\n   */\n  constructor(credentials, options = {}) {\n    this.creds = credentials;\n    this.options = options;\n\n    // Used to facilitate testing of the call to the underlying object\n    this._nexmo = this.options.nexmoOverride || nexmo;\n  }\n\n  _convertMethodSignature(name, type, answerUrl, eventUrl, options) {\n    let capability = {};\n    switch (type) {\n      case \"voice\":\n        capability = {\n          voice: {\n            webhooks: {\n              answer_url: {\n                address: answerUrl,\n                http_method: \"GET\"\n              },\n              event_url: {\n                address: eventUrl,\n                http_method: \"POST\"\n              }\n            }\n          }\n        };\n        break;\n      case \"messages\":\n        capability = {\n          messages: {\n            webhooks: {\n              inbound_url: {\n                address: options.inbound_url,\n                http_method: \"POST\"\n              },\n              status_url: {\n                address: options.status_url,\n                http_method: \"POST\"\n              }\n            }\n          }\n        };\n        break;\n      case \"rtc\":\n        capability = {\n          rtc: {\n            webhooks: {\n              event_url: {\n                address: eventUrl,\n                http_method: \"POST\"\n              }\n            }\n          }\n        };\n        break;\n    }\n\n    return {\n      name: name,\n      capabilities: capability\n    };\n  }\n\n  _convertApplicationResponse(application) {\n    for (let capability in application.capabilities) {\n      application[capability] = {\n        webhooks: []\n      };\n      for (let webhook in application.capabilities[capability].webhooks) {\n        application[capability].webhooks.push({\n          endpoint_type: webhook,\n          endpoint:\n            application.capabilities[capability].webhooks[webhook].address,\n          http_method:\n            application.capabilities[capability].webhooks[webhook].http_method\n        });\n      }\n    }\n\n    delete application.capabilities;\n    return application;\n  }\n\n  _convertApplicationListResponse(applicationResponseHandler) {\n    return response => {\n      response.count = response.total_items;\n      response.page_index = response.page;\n      for (let i in response._embedded.applications) {\n        response._embedded.applications[i] = applicationResponseHandler(\n          response._embedded.applications[i]\n        );\n      }\n\n      return response;\n    };\n  }\n\n  /**\n   * TODO: document\n   */\n  create(name, type, answerUrl, eventUrl, options, callback) {\n    let params = {};\n    let responseParser = null;\n\n    if (arguments.length > 2) {\n      params = JSON.stringify(\n        this._convertMethodSignature(name, type, answerUrl, eventUrl, options)\n      );\n      responseParser = this._convertApplicationResponse;\n    } else {\n      params = JSON.stringify(name);\n      callback = type;\n    }\n\n    const authorization = `${this.creds.apiKey}:${this.creds.apiSecret}`;\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: App.PATH,\n      method: \"POST\",\n      body: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${Buffer.from(authorization).toString(\"base64\")}`\n      }\n    };\n\n    this.options.httpClient.request(\n      config,\n      callback,\n      callback,\n      false,\n      responseParser\n    );\n  }\n\n  /**\n   * TODO: document\n   */\n  get(params, callback, v2 = false) {\n    const authorization = `${this.creds.apiKey}:${this.creds.apiSecret}`;\n    let responseParser = null;\n\n    if (typeof params !== \"object\") {\n      responseParser = this._convertApplicationResponse;\n    } else {\n      responseParser = this._convertApplicationListResponse(\n        this._convertApplicationResponse\n      );\n    }\n\n    if (v2) {\n      responseParser = null;\n    }\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: Utils.createPathWithQuery(App.PATH, params),\n      method: \"GET\",\n      body: undefined,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${Buffer.from(authorization).toString(\"base64\")}`\n      }\n    };\n\n    this.options.httpClient.request(\n      config,\n      callback,\n      callback,\n      false,\n      responseParser\n    );\n  }\n\n  /**\n   * TODO: document\n   */\n  update(appId, name, type, answerUrl, eventUrl, options, callback) {\n    let params = {};\n    let responseParser = null;\n    if (arguments.length > 3) {\n      params = JSON.stringify(\n        this._convertMethodSignature(name, type, answerUrl, eventUrl, options)\n      );\n      responseParser = this._convertApplicationResponse;\n    } else {\n      params = JSON.stringify(name);\n      callback = type;\n    }\n\n    const authorization = `${this.creds.apiKey}:${this.creds.apiSecret}`;\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: `${App.PATH}/${appId}`,\n      method: \"PUT\",\n      body: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${Buffer.from(authorization).toString(\"base64\")}`\n      }\n    };\n\n    this.options.httpClient.request(\n      config,\n      callback,\n      callback,\n      false,\n      responseParser\n    );\n  }\n\n  /**\n   * TODO: document\n   */\n  delete(appId, callback) {\n    const authorization = `${this.creds.apiKey}:${this.creds.apiSecret}`;\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: `${App.PATH}/${appId}`,\n      method: \"DELETE\",\n      body: \"{}\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${Buffer.from(authorization).toString(\"base64\")}`\n      }\n    };\n\n    this.options.httpClient.request(config, callback);\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}