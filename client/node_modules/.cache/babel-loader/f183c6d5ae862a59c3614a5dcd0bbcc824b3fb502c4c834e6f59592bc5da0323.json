{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _Utils = _interopRequireDefault(require(\"./Utils\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nclass Voice {\n  static get ERROR_MESSAGES() {\n    return {\n      to: \"Invalid to address\",\n      msg: \"Invalid Text Message\",\n      maxDigits: \"Invalid max digits for TTS prompt\",\n      byeText: \"Invalid bye text for TTS prompt\",\n      pinCode: \"Invalid pin code for TTS confirm\",\n      failedText: \"Invalid failed text for TTS confirm\",\n      answerUrl: \"Invalid answer URL for call\"\n    };\n  }\n  /**\n   * @param {Credentials} credentials\n   *    credentials to be used when interacting with the API.\n   * @param {Object} options\n   *    Addition  options.\n   */\n\n  constructor(credentials) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.creds = credentials;\n    this.options = options;\n  }\n  _sendVoiceMessage(endpoint, data, callback) {\n    if (!data.to) {\n      _Utils.default.sendError(callback, new Error(Voice.ERROR_MESSAGES.to));\n    } else {\n      data[\"api_key\"] = this.creds.apiKey;\n      data[\"api_secret\"] = this.creds.apiSecret;\n      this.options.logger.info(\"sending TTS message to \" + data.to + \" with message \" + data.text);\n      this.options.httpClient.request({\n        host: endpoint.host,\n        path: _Utils.default.createPathWithQuery(endpoint.path, data)\n      }, \"POST\", (err, apiResponse) => {\n        if (!err && apiResponse.status && apiResponse.status > 0) {\n          _Utils.default.sendError(callback, new Error(apiResponse[\"error-text\"]), apiResponse);\n        } else {\n          if (callback) callback(err, apiResponse);\n        }\n      });\n    }\n  }\n  /**\n   * TODO: document\n   */\n\n  sendTTSMessage(recipient, message, opts, callback) {\n    if (!message) {\n      _Utils.default.sendError(callback, new Error(Voice.ERROR_MESSAGES.msg));\n    } else {\n      if (!opts) {\n        opts = {};\n      }\n      opts[\"to\"] = recipient;\n      opts[\"text\"] = message;\n      this._sendVoiceMessage({\n        host: this.options.apiHost || \"api.nexmo.com\",\n        path: \"/tts/json\"\n      }, opts, callback);\n    }\n  }\n  /**\n   * TODO: remove with next major version, API is 404\n   */\n\n  sendTTSPromptWithCapture(recipient, message, maxDigits, byeText, opts, callback) {\n    if (!message) {\n      _Utils.default.sendError(callback, new Error(Voice.ERROR_MESSAGES.msg));\n    } else if (!maxDigits || isNaN(maxDigits) || maxDigits.length > 16) {\n      _Utils.default.sendError(callback, new Error(Voice.ERROR_MESSAGES.maxDigits));\n    } else if (!byeText) {\n      _Utils.default.sendError(callback, new Error(Voice.ERROR_MESSAGES.byeText));\n    } else {\n      if (!opts) {\n        opts = {};\n      }\n      opts[\"to\"] = recipient;\n      opts[\"text\"] = message;\n      opts[\"max_digits\"] = maxDigits;\n      opts[\"bye_text\"] = byeText;\n      this._sendVoiceMessage({\n        host: this.options.apiHost || \"api.nexmo.com\",\n        path: \"/tts-prompt/json\"\n      }, opts, callback);\n    }\n  }\n  /**\n   * TODO: remove with next major version, API is 404\n   */\n\n  sendTTSPromptWithConfirm(recipient, message, maxDigits, pinCode, byeText, failedText, opts, callback) {\n    if (!message) {\n      _Utils.default.sendError(callback, new Error(Voice.ERROR_MESSAGES.msg));\n    } else if (!maxDigits || isNaN(maxDigits) || maxDigits.length > 16) {\n      _Utils.default.sendError(callback, new Error(Voice.ERROR_MESSAGES.maxDigits));\n    } else if (!pinCode || pinCode.length !== maxDigits) {\n      _Utils.default.sendError(callback, new Error(Voice.ERROR_MESSAGES.pinCode));\n    } else if (!byeText) {\n      _Utils.default.sendError(callback, new Error(Voice.ERROR_MESSAGES.byeText));\n    } else if (!failedText) {\n      _Utils.default.sendError(callback, new Error(Voice.ERROR_MESSAGES.failedText));\n    } else {\n      if (!opts) {\n        opts = {};\n      }\n      opts[\"to\"] = recipient;\n      opts[\"text\"] = message;\n      opts[\"max_digits\"] = maxDigits;\n      opts[\"pin_code\"] = pinCode;\n      opts[\"bye_text\"] = byeText;\n      opts[\"failed_text\"] = failedText;\n      this._sendVoiceMessage({\n        host: this.options.apiHost || \"api.nexmo.com\",\n        path: \"/tts-prompt/json\"\n      }, opts, callback);\n    }\n  }\n  /**\n   * TODO: remove with next major version, API is 404\n   */\n\n  call(recipient, answerUrl, opts, callback) {\n    if (!answerUrl) {\n      _Utils.default.sendError(callback, new Error(Voice.ERROR_MESSAGES.answerUrl));\n    } else {\n      if (!opts) {\n        opts = {};\n      }\n      opts[\"to\"] = recipient;\n      opts[\"answer_url\"] = answerUrl;\n      this._sendVoiceMessage({\n        host: this.options.restHost || \"rest.nexmo.com\",\n        path: \"/call/json\"\n      }, opts, callback);\n    }\n  }\n}\nvar _default = Voice;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_Utils","_interopRequireDefault","require","Voice","ERROR_MESSAGES","to","msg","maxDigits","byeText","pinCode","failedText","answerUrl","constructor","credentials","options","arguments","length","undefined","creds","_sendVoiceMessage","endpoint","data","callback","default","sendError","Error","apiKey","apiSecret","logger","info","text","httpClient","request","host","path","createPathWithQuery","err","apiResponse","status","sendTTSMessage","recipient","message","opts","apiHost","sendTTSPromptWithCapture","isNaN","sendTTSPromptWithConfirm","call","restHost"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/@vonage/server-sdk/src/Voice.js"],"sourcesContent":["\"use strict\";\n\nimport Utils from \"./Utils\";\n\nclass Voice {\n  static get ERROR_MESSAGES() {\n    return {\n      to: \"Invalid to address\",\n      msg: \"Invalid Text Message\",\n      maxDigits: \"Invalid max digits for TTS prompt\",\n      byeText: \"Invalid bye text for TTS prompt\",\n      pinCode: \"Invalid pin code for TTS confirm\",\n      failedText: \"Invalid failed text for TTS confirm\",\n      answerUrl: \"Invalid answer URL for call\",\n    };\n  }\n  /**\n   * @param {Credentials} credentials\n   *    credentials to be used when interacting with the API.\n   * @param {Object} options\n   *    Addition  options.\n   */\n  constructor(credentials, options = {}) {\n    this.creds = credentials;\n    this.options = options;\n  }\n\n  _sendVoiceMessage(endpoint, data, callback) {\n    if (!data.to) {\n      Utils.sendError(callback, new Error(Voice.ERROR_MESSAGES.to));\n    } else {\n      data[\"api_key\"] = this.creds.apiKey;\n      data[\"api_secret\"] = this.creds.apiSecret;\n      this.options.logger.info(\n        \"sending TTS message to \" + data.to + \" with message \" + data.text\n      );\n      this.options.httpClient.request(\n        {\n          host: endpoint.host,\n          path: Utils.createPathWithQuery(endpoint.path, data),\n        },\n        \"POST\",\n        (err, apiResponse) => {\n          if (!err && apiResponse.status && apiResponse.status > 0) {\n            Utils.sendError(\n              callback,\n              new Error(apiResponse[\"error-text\"]),\n              apiResponse\n            );\n          } else {\n            if (callback) callback(err, apiResponse);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * TODO: document\n   */\n  sendTTSMessage(recipient, message, opts, callback) {\n    if (!message) {\n      Utils.sendError(callback, new Error(Voice.ERROR_MESSAGES.msg));\n    } else {\n      if (!opts) {\n        opts = {};\n      }\n      opts[\"to\"] = recipient;\n      opts[\"text\"] = message;\n      this._sendVoiceMessage(\n        {\n          host: this.options.apiHost || \"api.nexmo.com\",\n          path: \"/tts/json\",\n        },\n        opts,\n        callback\n      );\n    }\n  }\n\n  /**\n   * TODO: remove with next major version, API is 404\n   */\n  sendTTSPromptWithCapture(\n    recipient,\n    message,\n    maxDigits,\n    byeText,\n    opts,\n    callback\n  ) {\n    if (!message) {\n      Utils.sendError(callback, new Error(Voice.ERROR_MESSAGES.msg));\n    } else if (!maxDigits || isNaN(maxDigits) || maxDigits.length > 16) {\n      Utils.sendError(callback, new Error(Voice.ERROR_MESSAGES.maxDigits));\n    } else if (!byeText) {\n      Utils.sendError(callback, new Error(Voice.ERROR_MESSAGES.byeText));\n    } else {\n      if (!opts) {\n        opts = {};\n      }\n      opts[\"to\"] = recipient;\n      opts[\"text\"] = message;\n      opts[\"max_digits\"] = maxDigits;\n      opts[\"bye_text\"] = byeText;\n      this._sendVoiceMessage(\n        {\n          host: this.options.apiHost || \"api.nexmo.com\",\n          path: \"/tts-prompt/json\",\n        },\n        opts,\n        callback\n      );\n    }\n  }\n\n  /**\n   * TODO: remove with next major version, API is 404\n   */\n  sendTTSPromptWithConfirm(\n    recipient,\n    message,\n    maxDigits,\n    pinCode,\n    byeText,\n    failedText,\n    opts,\n    callback\n  ) {\n    if (!message) {\n      Utils.sendError(callback, new Error(Voice.ERROR_MESSAGES.msg));\n    } else if (!maxDigits || isNaN(maxDigits) || maxDigits.length > 16) {\n      Utils.sendError(callback, new Error(Voice.ERROR_MESSAGES.maxDigits));\n    } else if (!pinCode || pinCode.length !== maxDigits) {\n      Utils.sendError(callback, new Error(Voice.ERROR_MESSAGES.pinCode));\n    } else if (!byeText) {\n      Utils.sendError(callback, new Error(Voice.ERROR_MESSAGES.byeText));\n    } else if (!failedText) {\n      Utils.sendError(callback, new Error(Voice.ERROR_MESSAGES.failedText));\n    } else {\n      if (!opts) {\n        opts = {};\n      }\n      opts[\"to\"] = recipient;\n      opts[\"text\"] = message;\n      opts[\"max_digits\"] = maxDigits;\n      opts[\"pin_code\"] = pinCode;\n      opts[\"bye_text\"] = byeText;\n      opts[\"failed_text\"] = failedText;\n      this._sendVoiceMessage(\n        {\n          host: this.options.apiHost || \"api.nexmo.com\",\n          path: \"/tts-prompt/json\",\n        },\n        opts,\n        callback\n      );\n    }\n  }\n\n  /**\n   * TODO: remove with next major version, API is 404\n   */\n  call(recipient, answerUrl, opts, callback) {\n    if (!answerUrl) {\n      Utils.sendError(callback, new Error(Voice.ERROR_MESSAGES.answerUrl));\n    } else {\n      if (!opts) {\n        opts = {};\n      }\n      opts[\"to\"] = recipient;\n      opts[\"answer_url\"] = answerUrl;\n      this._sendVoiceMessage(\n        {\n          host: this.options.restHost || \"rest.nexmo.com\",\n          path: \"/call/json\",\n        },\n        opts,\n        callback\n      );\n    }\n  }\n}\n\nexport default Voice;\n"],"mappings":"AAAA;;;;;;AAEA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;;;;;;AAEA,MAAMC,KAAN,CAAY;EACe,WAAdC,cAAcA,CAAA,EAAG;IAC1B,OAAO;MACLC,EAAE,EAAE,oBADC;MAELC,GAAG,EAAE,sBAFA;MAGLC,SAAS,EAAE,mCAHN;MAILC,OAAO,EAAE,iCAJJ;MAKLC,OAAO,EAAE,kCALJ;MAMLC,UAAU,EAAE,qCANP;MAOLC,SAAS,EAAE;IAPN,CAAP;EASD;EACD;AACF;AACA;AACA;AACA;AACA;;EACEC,WAAWA,CAACC,WAAD,EAA4B;IAAA,IAAdC,OAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAJ,EAAI;IACrC,KAAKG,KAAL,GAAaL,WAAb;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;EAEDK,iBAAiBA,CAACC,QAAD,EAAWC,IAAX,EAAiBC,QAAjB,EAA2B;IAC1C,IAAI,CAACD,IAAI,CAAChB,EAAV,EAAc;MACZL,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CAAgBF,QAAhB,EAA0B,IAAIG,KAAJ,CAAUtB,KAAK,CAACC,cAAN,CAAqBC,EAA/B,CAA1B;IACD,CAFD,MAEO;MACLgB,IAAI,CAAC,SAAD,CAAJ,GAAkB,KAAKH,KAAL,CAAWQ,MAA7B;MACAL,IAAI,CAAC,YAAD,CAAJ,GAAqB,KAAKH,KAAL,CAAWS,SAAhC;MACA,KAAKb,OAAL,CAAac,MAAb,CAAoBC,IAApB,CACE,4BAA4BR,IAAI,CAAChB,EAAjC,GAAsC,gBAAtC,GAAyDgB,IAAI,CAACS,IADhE;MAGA,KAAKhB,OAAL,CAAaiB,UAAb,CAAwBC,OAAxB,CACE;QACEC,IAAI,EAAEb,QAAQ,CAACa,IADjB;QAEEC,IAAI,EAAElC,MAAA,CAAAuB,OAAA,CAAMY,mBAAN,CAA0Bf,QAAQ,CAACc,IAAnC,EAAyCb,IAAzC;MAFR,CADF,EAKE,MALF,EAME,CAACe,GAAD,EAAMC,WAAN,KAAsB;QACpB,IAAI,CAACD,GAAD,IAAQC,WAAW,CAACC,MAApB,IAA8BD,WAAW,CAACC,MAAZ,GAAqB,CAAvD,EAA0D;UACxDtC,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CACEF,QADF,EAEE,IAAIG,KAAJ,CAAUY,WAAW,CAAC,YAAD,CAArB,CAFF,EAGEA,WAHF;QAKD,CAND,MAMO;UACL,IAAIf,QAAJ,EAAcA,QAAQ,CAACc,GAAD,EAAMC,WAAN,CAAR;QACf;MACF,CAhBH;IAkBD;EACF;EAED;AACF;AACA;;EACEE,cAAcA,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,IAArB,EAA2BpB,QAA3B,EAAqC;IACjD,IAAI,CAACmB,OAAL,EAAc;MACZzC,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CAAgBF,QAAhB,EAA0B,IAAIG,KAAJ,CAAUtB,KAAK,CAACC,cAAN,CAAqBE,GAA/B,CAA1B;IACD,CAFD,MAEO;MACL,IAAI,CAACoC,IAAL,EAAW;QACTA,IAAI,GAAG,EAAP;MACD;MACDA,IAAI,CAAC,IAAD,CAAJ,GAAaF,SAAb;MACAE,IAAI,CAAC,MAAD,CAAJ,GAAeD,OAAf;MACA,KAAKtB,iBAAL,CACE;QACEc,IAAI,EAAE,KAAKnB,OAAL,CAAa6B,OAAb,IAAwB,eADhC;QAEET,IAAI,EAAE;MAFR,CADF,EAKEQ,IALF,EAMEpB,QANF;IAQD;EACF;EAED;AACF;AACA;;EACEsB,wBAAwBA,CACtBJ,SADsB,EAEtBC,OAFsB,EAGtBlC,SAHsB,EAItBC,OAJsB,EAKtBkC,IALsB,EAMtBpB,QANsB,EAOtB;IACA,IAAI,CAACmB,OAAL,EAAc;MACZzC,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CAAgBF,QAAhB,EAA0B,IAAIG,KAAJ,CAAUtB,KAAK,CAACC,cAAN,CAAqBE,GAA/B,CAA1B;IACD,CAFD,MAEO,IAAI,CAACC,SAAD,IAAcsC,KAAK,CAACtC,SAAD,CAAnB,IAAkCA,SAAS,CAACS,MAAV,GAAmB,EAAzD,EAA6D;MAClEhB,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CAAgBF,QAAhB,EAA0B,IAAIG,KAAJ,CAAUtB,KAAK,CAACC,cAAN,CAAqBG,SAA/B,CAA1B;IACD,CAFM,MAEA,IAAI,CAACC,OAAL,EAAc;MACnBR,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CAAgBF,QAAhB,EAA0B,IAAIG,KAAJ,CAAUtB,KAAK,CAACC,cAAN,CAAqBI,OAA/B,CAA1B;IACD,CAFM,MAEA;MACL,IAAI,CAACkC,IAAL,EAAW;QACTA,IAAI,GAAG,EAAP;MACD;MACDA,IAAI,CAAC,IAAD,CAAJ,GAAaF,SAAb;MACAE,IAAI,CAAC,MAAD,CAAJ,GAAeD,OAAf;MACAC,IAAI,CAAC,YAAD,CAAJ,GAAqBnC,SAArB;MACAmC,IAAI,CAAC,UAAD,CAAJ,GAAmBlC,OAAnB;MACA,KAAKW,iBAAL,CACE;QACEc,IAAI,EAAE,KAAKnB,OAAL,CAAa6B,OAAb,IAAwB,eADhC;QAEET,IAAI,EAAE;MAFR,CADF,EAKEQ,IALF,EAMEpB,QANF;IAQD;EACF;EAED;AACF;AACA;;EACEwB,wBAAwBA,CACtBN,SADsB,EAEtBC,OAFsB,EAGtBlC,SAHsB,EAItBE,OAJsB,EAKtBD,OALsB,EAMtBE,UANsB,EAOtBgC,IAPsB,EAQtBpB,QARsB,EAStB;IACA,IAAI,CAACmB,OAAL,EAAc;MACZzC,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CAAgBF,QAAhB,EAA0B,IAAIG,KAAJ,CAAUtB,KAAK,CAACC,cAAN,CAAqBE,GAA/B,CAA1B;IACD,CAFD,MAEO,IAAI,CAACC,SAAD,IAAcsC,KAAK,CAACtC,SAAD,CAAnB,IAAkCA,SAAS,CAACS,MAAV,GAAmB,EAAzD,EAA6D;MAClEhB,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CAAgBF,QAAhB,EAA0B,IAAIG,KAAJ,CAAUtB,KAAK,CAACC,cAAN,CAAqBG,SAA/B,CAA1B;IACD,CAFM,MAEA,IAAI,CAACE,OAAD,IAAYA,OAAO,CAACO,MAAR,KAAmBT,SAAnC,EAA8C;MACnDP,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CAAgBF,QAAhB,EAA0B,IAAIG,KAAJ,CAAUtB,KAAK,CAACC,cAAN,CAAqBK,OAA/B,CAA1B;IACD,CAFM,MAEA,IAAI,CAACD,OAAL,EAAc;MACnBR,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CAAgBF,QAAhB,EAA0B,IAAIG,KAAJ,CAAUtB,KAAK,CAACC,cAAN,CAAqBI,OAA/B,CAA1B;IACD,CAFM,MAEA,IAAI,CAACE,UAAL,EAAiB;MACtBV,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CAAgBF,QAAhB,EAA0B,IAAIG,KAAJ,CAAUtB,KAAK,CAACC,cAAN,CAAqBM,UAA/B,CAA1B;IACD,CAFM,MAEA;MACL,IAAI,CAACgC,IAAL,EAAW;QACTA,IAAI,GAAG,EAAP;MACD;MACDA,IAAI,CAAC,IAAD,CAAJ,GAAaF,SAAb;MACAE,IAAI,CAAC,MAAD,CAAJ,GAAeD,OAAf;MACAC,IAAI,CAAC,YAAD,CAAJ,GAAqBnC,SAArB;MACAmC,IAAI,CAAC,UAAD,CAAJ,GAAmBjC,OAAnB;MACAiC,IAAI,CAAC,UAAD,CAAJ,GAAmBlC,OAAnB;MACAkC,IAAI,CAAC,aAAD,CAAJ,GAAsBhC,UAAtB;MACA,KAAKS,iBAAL,CACE;QACEc,IAAI,EAAE,KAAKnB,OAAL,CAAa6B,OAAb,IAAwB,eADhC;QAEET,IAAI,EAAE;MAFR,CADF,EAKEQ,IALF,EAMEpB,QANF;IAQD;EACF;EAED;AACF;AACA;;EACEyB,IAAIA,CAACP,SAAD,EAAY7B,SAAZ,EAAuB+B,IAAvB,EAA6BpB,QAA7B,EAAuC;IACzC,IAAI,CAACX,SAAL,EAAgB;MACdX,MAAA,CAAAuB,OAAA,CAAMC,SAAN,CAAgBF,QAAhB,EAA0B,IAAIG,KAAJ,CAAUtB,KAAK,CAACC,cAAN,CAAqBO,SAA/B,CAA1B;IACD,CAFD,MAEO;MACL,IAAI,CAAC+B,IAAL,EAAW;QACTA,IAAI,GAAG,EAAP;MACD;MACDA,IAAI,CAAC,IAAD,CAAJ,GAAaF,SAAb;MACAE,IAAI,CAAC,YAAD,CAAJ,GAAqB/B,SAArB;MACA,KAAKQ,iBAAL,CACE;QACEc,IAAI,EAAE,KAAKnB,OAAL,CAAakC,QAAb,IAAyB,gBADjC;QAEEd,IAAI,EAAE;MAFR,CADF,EAKEQ,IALF,EAMEpB,QANF;IAQD;EACF;AAjLS;eAoLGnB,K"},"metadata":{},"sourceType":"script","externalDependencies":[]}