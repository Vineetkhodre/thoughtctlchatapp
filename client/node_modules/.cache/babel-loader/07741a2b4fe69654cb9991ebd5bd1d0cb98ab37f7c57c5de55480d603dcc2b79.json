{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar https = require(\"https\");\nvar http = require(\"http\");\nvar request = require(\"request\");\nvar querystring = require(\"querystring\");\nvar HttpClient = function () {\n  function HttpClient(options, credentials) {\n    _classCallCheck(this, HttpClient);\n    this.credentials = credentials;\n    this.host = options.host || \"rest.nexmo.com\";\n    this.port = options.port || 443;\n    this.https = options.https || https;\n    this.http = options.http || http;\n    this.headers = {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Accept: \"application/json\"\n    };\n    this.logger = options.logger;\n    this.timeout = options.timeout;\n    this.requestLib = request;\n    if (options.userAgent) {\n      this.headers[\"User-Agent\"] = options.userAgent;\n    }\n  }\n  _createClass(HttpClient, [{\n    key: \"request\",\n    value: function request(endpoint, method, callback) {\n      var _this = this;\n      var skipJsonParsing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var customResponseParser = arguments[4];\n      if (typeof method === \"function\") {\n        callback = method;\n        endpoint.method = endpoint.method || \"GET\";\n      } else if (typeof method !== \"undefined\") {\n        endpoint.method = method;\n      }\n      if (endpoint.method === \"POST\" || endpoint.method === \"DELETE\") {\n        // TODO: verify the following fix is required\n        // Fix broken due ot 411 Content-Length error now sent by Nexmo API\n        // PL 2016-Sept-6 - commented out Content-Length 0\n        // headers['Content-Length'] = 0;\n      }\n      var options = {\n        host: endpoint.host ? endpoint.host : this.host,\n        port: this.port,\n        path: endpoint.path,\n        method: endpoint.method,\n        headers: Object.assign({}, this.headers)\n      };\n      if (this.timeout !== undefined) {\n        options.timeout = this.timeout;\n      }\n\n      // Allow existing headers to be overridden\n      // Allow new headers to be added\n      if (endpoint.headers) {\n        Object.keys(endpoint.headers).forEach(function (key) {\n          options.headers[key] = endpoint.headers[key];\n        });\n      }\n      if (this.credentials.signatureSecret && this.credentials.signatureMethod) {\n        var splitPath = options.path.split(/\\?(.+)/);\n        var path = splitPath[0];\n        var params = querystring.decode(splitPath[1]);\n\n        // add timestamp if not already present\n        if (!params.timestamp) {\n          params.timestamp = new Date().getTime() / 1000 | 0; // floor to seconds\n          params.timestamp = params.timestamp.toString();\n        }\n\n        // strip API Secret\n        delete params.api_secret;\n        var hash = this.credentials.generateSignature(params);\n        var query = \"\";\n\n        // rebuild query\n        Object.keys(params).sort().forEach(function (key) {\n          query += \"&\" + key + \"=\" + encodeURI(params[key]);\n        });\n\n        // replace the first & with ?\n        query = query.replace(/&/i, \"?\");\n        options.path = \"\" + path + query + \"&sig=\" + hash;\n      }\n      this.logger.info(\"Request:\", options, \"\\nBody:\", endpoint.body);\n      var request;\n      if (options.port === 443) {\n        request = this.https.request(options);\n      } else {\n        request = this.http.request(options);\n      }\n      request.end(endpoint.body);\n\n      // Keep an array of String or Buffers,\n      // depending on content type (binary or JSON) of response\n      var responseData = [];\n      request.on(\"response\", function (response) {\n        var isBinary = response.headers[\"content-type\"] === \"application/octet-stream\";\n        if (!isBinary) {\n          response.setEncoding(\"utf8\");\n        }\n        response.on(\"data\", function (chunk) {\n          responseData.push(chunk);\n        });\n        response.on(\"end\", function () {\n          _this.logger.info(\"response ended:\", response.statusCode);\n          if (callback) {\n            if (isBinary) {\n              responseData = Buffer.concat(responseData);\n            }\n            _this.__parseResponse(response, responseData, endpoint.method, callback, skipJsonParsing, customResponseParser);\n          }\n        });\n        response.on(\"close\", function (e) {\n          if (e) {\n            _this.logger.error(\"problem with API request detailed stacktrace below \");\n            _this.logger.error(e);\n            callback(e);\n          }\n        });\n      });\n      request.on(\"error\", function (e) {\n        _this.logger.error(\"problem with API request detailed stacktrace below \");\n        _this.logger.error(e);\n        callback(e);\n      });\n    }\n  }, {\n    key: \"__parseResponse\",\n    value: function __parseResponse(httpResponse, data, method, callback, skipJsonParsing, customResponseParser) {\n      var isArrayOrBuffer = data instanceof Array || data instanceof Buffer;\n      if (!isArrayOrBuffer) {\n        throw new Error(\"data should be of type Array or Buffer\");\n      }\n      var status = httpResponse.statusCode;\n      var headers = httpResponse.headers;\n      var response = null;\n      var error = null;\n      try {\n        if (status >= 500) {\n          error = {\n            message: \"Server Error\",\n            statusCode: status\n          };\n        } else if (httpResponse.headers[\"content-type\"] === \"application/octet-stream\") {\n          response = data;\n        } else if (status === 429) {\n          // 429 does not return a parsable body\n          if (!headers[\"retry-after\"]) {\n            // retry based on allowed per second\n            var retryAfterMillis = method === \"POST\" ? 1000 / 2 : 1000 / 5;\n            headers[\"retry-after\"] = retryAfterMillis;\n          }\n          error = {\n            body: data.join(\"\")\n          };\n        } else if (status === 204) {\n          response = null;\n        } else if (status >= 400 || status < 200) {\n          error = {\n            body: JSON.parse(data.join(\"\")),\n            headers: headers\n          };\n        } else if (method !== \"DELETE\") {\n          if (!!skipJsonParsing) {\n            response = data.join(\"\");\n          } else {\n            response = JSON.parse(data.join(\"\"));\n          }\n        } else {\n          response = data;\n        }\n      } catch (parseError) {\n        this.logger.error(parseError);\n        this.logger.error(\"could not convert API response to JSON, above error is ignored and raw API response is returned to client\");\n        this.logger.error(\"Raw Error message from API \");\n        this.logger.error(\"\\\"\" + data + \"\\\"\");\n        error = {\n          status: status,\n          message: \"The API response could not be parsed.\",\n          body: data.join(\"\"),\n          parseError: parseError\n        };\n      }\n      if (error) {\n        error.statusCode = status;\n        error.headers = headers;\n      }\n      if (typeof callback === \"function\") {\n        if (typeof customResponseParser === \"function\") {\n          // don't try to parse the response on errors\n          if (response) {\n            response = customResponseParser(response);\n          }\n        }\n        callback(error, response);\n      }\n    }\n  }, {\n    key: \"_addLimitedAccessMessageToErrors\",\n    value: function _addLimitedAccessMessageToErrors(callback, limitedAccessStatus) {\n      return function (err, data) {\n        if (err && err.status == limitedAccessStatus) {\n          err._INFO_ = \"This endpoint may need activating on your account. Please email support@nexmo.com for more information\";\n        }\n        return callback(err, data);\n      };\n    }\n  }, {\n    key: \"get\",\n    value: function get(path, params, callback) {\n      var useJwt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var useBasicAuth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      if (!callback) {\n        if (typeof params == \"function\") {\n          callback = params;\n          params = {};\n        }\n      }\n      params = params || {};\n      if (!useJwt && !useBasicAuth) {\n        params[\"api_key\"] = this.credentials.apiKey;\n        params[\"api_secret\"] = this.credentials.apiSecret;\n      }\n      path = path + \"?\" + querystring.stringify(params);\n      var headers = {\n        \"Content-Type\": \"application/json\"\n      };\n      if (useJwt) {\n        headers[\"Authorization\"] = \"Bearer \" + this.credentials.generateJwt();\n      }\n      if (useBasicAuth) {\n        headers[\"Authorization\"] = \"Basic \" + Buffer.from(this.credentials.apiKey + \":\" + this.credentials.apiSecret).toString(\"base64\");\n      }\n      this.request({\n        path: path,\n        headers: headers\n      }, \"GET\", callback);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(path, callback, useJwt, useBasicAuth) {\n      var params = {};\n      if (!useJwt && !useBasicAuth) {\n        params[\"api_key\"] = this.credentials.apiKey;\n        params[\"api_secret\"] = this.credentials.apiSecret;\n      }\n      var headers = {};\n      if (useBasicAuth) {\n        headers[\"Authorization\"] = \"Basic \" + Buffer.from(this.credentials.apiKey + \":\" + this.credentials.apiSecret).toString(\"base64\");\n      }\n      path = path + \"?\" + querystring.stringify(params);\n      this.request({\n        path: path,\n        headers: headers\n      }, \"DELETE\", callback);\n    }\n  }, {\n    key: \"postFile\",\n    value: function postFile(path, options, callback, useJwt) {\n      var qs = {};\n      if (!useJwt) {\n        qs[\"api_key\"] = this.credentials.apiKey;\n        qs[\"api_secret\"] = this.credentials.apiSecret;\n      }\n      if (Object.keys(qs).length) {\n        var joinChar = \"?\";\n        if (path.indexOf(joinChar) !== -1) {\n          joinChar = \"&\";\n        }\n        path = path + joinChar + querystring.stringify(qs);\n      }\n      var file = options.file;\n      delete options.file; // We don't send this as metadata\n\n      var formData = {};\n      if (file) {\n        formData[\"filedata\"] = {\n          value: file,\n          options: {\n            filename: options.filename || null\n          }\n        };\n      }\n      if (options.info) {\n        formData.info = JSON.stringify(options.info);\n      }\n      if (options.url) {\n        formData.url = options.url;\n      }\n      this.requestLib.post({\n        url: \"https://\" + this.host + path,\n        formData: formData,\n        headers: {\n          Authorization: \"Bearer \" + this.credentials.generateJwt()\n        }\n      }, callback);\n    }\n  }, {\n    key: \"post\",\n    value: function post(path, params, callback, useJwt, headers) {\n      var qs = {};\n      if (!useJwt) {\n        qs[\"api_key\"] = this.credentials.apiKey;\n        qs[\"api_secret\"] = this.credentials.apiSecret;\n      }\n      var joinChar = \"?\";\n      if (path.indexOf(joinChar) !== -1) {\n        joinChar = \"&\";\n      }\n      path = path + joinChar + querystring.stringify(qs);\n      headers = headers || {};\n      if (useJwt) {\n        headers[\"Authorization\"] = \"Bearer \" + this.credentials.generateJwt();\n      }\n      var encodedParams = void 0;\n      if (headers[\"Content-Type\"] == \"application/json\") {\n        encodedParams = JSON.stringify(params);\n      } else {\n        encodedParams = querystring.stringify(params);\n      }\n      this.request({\n        path: path,\n        body: encodedParams,\n        headers: headers\n      }, \"POST\", callback);\n    }\n  }, {\n    key: \"postJson\",\n    value: function postJson(path, params, callback, useJwt, useBasicAuth) {\n      var qs = {};\n      if (!useJwt && !useBasicAuth) {\n        qs[\"api_key\"] = this.credentials.apiKey;\n        qs[\"api_secret\"] = this.credentials.apiSecret;\n      }\n      var joinChar = \"?\";\n      if (path.indexOf(joinChar) !== -1) {\n        joinChar = \"&\";\n      }\n      path = path + joinChar + querystring.stringify(qs);\n      var headers = {\n        \"Content-Type\": \"application/json\"\n      };\n      if (useBasicAuth) {\n        headers[\"Authorization\"] = \"Basic \" + Buffer.from(this.credentials.apiKey + \":\" + this.credentials.apiSecret).toString(\"base64\");\n      }\n      this.request({\n        path: path,\n        body: JSON.stringify(params),\n        headers: headers\n      }, \"POST\", callback);\n    }\n  }, {\n    key: \"postUseQueryString\",\n    value: function postUseQueryString(path, params, callback, useJwt) {\n      params = params || {};\n      if (!useJwt) {\n        params[\"api_key\"] = this.credentials.apiKey;\n        params[\"api_secret\"] = this.credentials.apiSecret;\n      }\n      path = path + \"?\" + querystring.stringify(params);\n      this.request({\n        path: path\n      }, \"POST\", callback);\n    }\n  }]);\n  return HttpClient;\n}();\nexports.default = HttpClient;\nmodule.exports = exports[\"default\"];","map":{"version":3,"names":["https","require","http","request","querystring","HttpClient","options","credentials","_classCallCheck","host","port","headers","Accept","logger","timeout","requestLib","userAgent","endpoint","method","callback","_this","skipJsonParsing","arguments","length","undefined","customResponseParser","path","Object","assign","keys","forEach","key","signatureSecret","signatureMethod","splitPath","split","params","decode","timestamp","Date","getTime","toString","api_secret","hash","generateSignature","query","sort","encodeURI","replace","info","body","end","responseData","on","response","isBinary","setEncoding","chunk","push","statusCode","Buffer","concat","__parseResponse","e","error","httpResponse","data","isArrayOrBuffer","Array","Error","status","message","retryAfterMillis","join","JSON","parse","parseError","limitedAccessStatus","err","_INFO_","useJwt","useBasicAuth","apiKey","apiSecret","stringify","generateJwt","from","qs","joinChar","indexOf","file","formData","value","filename","url","post","Authorization","encodedParams"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/nexmo/src/HttpClient.js"],"sourcesContent":["var https = require(\"https\");\nvar http = require(\"http\");\nvar request = require(\"request\");\nvar querystring = require(\"querystring\");\n\nclass HttpClient {\n  constructor(options, credentials) {\n    this.credentials = credentials;\n    this.host = options.host || \"rest.nexmo.com\";\n    this.port = options.port || 443;\n    this.https = options.https || https;\n    this.http = options.http || http;\n    this.headers = {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Accept: \"application/json\"\n    };\n    this.logger = options.logger;\n    this.timeout = options.timeout;\n    this.requestLib = request;\n\n    if (options.userAgent) {\n      this.headers[\"User-Agent\"] = options.userAgent;\n    }\n  }\n\n  request(\n    endpoint,\n    method,\n    callback,\n    skipJsonParsing = false,\n    customResponseParser\n  ) {\n    if (typeof method === \"function\") {\n      callback = method;\n      endpoint.method = endpoint.method || \"GET\";\n    } else if (typeof method !== \"undefined\") {\n      endpoint.method = method;\n    }\n\n    if (endpoint.method === \"POST\" || endpoint.method === \"DELETE\") {\n      // TODO: verify the following fix is required\n      // Fix broken due ot 411 Content-Length error now sent by Nexmo API\n      // PL 2016-Sept-6 - commented out Content-Length 0\n      // headers['Content-Length'] = 0;\n    }\n    var options = {\n      host: endpoint.host ? endpoint.host : this.host,\n      port: this.port,\n      path: endpoint.path,\n      method: endpoint.method,\n      headers: Object.assign({}, this.headers)\n    };\n\n    if (this.timeout !== undefined) {\n      options.timeout = this.timeout;\n    }\n\n    // Allow existing headers to be overridden\n    // Allow new headers to be added\n    if (endpoint.headers) {\n      Object.keys(endpoint.headers).forEach(function(key) {\n        options.headers[key] = endpoint.headers[key];\n      });\n    }\n\n    if (this.credentials.signatureSecret && this.credentials.signatureMethod) {\n      const splitPath = options.path.split(/\\?(.+)/);\n      const path = splitPath[0];\n\n      var params = querystring.decode(splitPath[1]);\n\n      // add timestamp if not already present\n      if (!params.timestamp) {\n        params.timestamp = (new Date().getTime() / 1000) | 0; // floor to seconds\n        params.timestamp = params.timestamp.toString();\n      }\n\n      // strip API Secret\n      delete params.api_secret;\n\n      const hash = this.credentials.generateSignature(params);\n\n      var query = \"\";\n\n      // rebuild query\n      Object.keys(params)\n        .sort()\n        .forEach(key => {\n          query += \"&\" + key + \"=\" + encodeURI(params[key]);\n        });\n\n      // replace the first & with ?\n      query = query.replace(/&/i, \"?\");\n\n      options.path = `${path}${query}&sig=${hash}`;\n    }\n\n    this.logger.info(\"Request:\", options, \"\\nBody:\", endpoint.body);\n    var request;\n\n    if (options.port === 443) {\n      request = this.https.request(options);\n    } else {\n      request = this.http.request(options);\n    }\n\n    request.end(endpoint.body);\n\n    // Keep an array of String or Buffers,\n    // depending on content type (binary or JSON) of response\n    var responseData = [];\n\n    request.on(\"response\", response => {\n      var isBinary =\n        response.headers[\"content-type\"] === \"application/octet-stream\";\n      if (!isBinary) {\n        response.setEncoding(\"utf8\");\n      }\n\n      response.on(\"data\", chunk => {\n        responseData.push(chunk);\n      });\n\n      response.on(\"end\", () => {\n        this.logger.info(\"response ended:\", response.statusCode);\n        if (callback) {\n          if (isBinary) {\n            responseData = Buffer.concat(responseData);\n          }\n\n          this.__parseResponse(\n            response,\n            responseData,\n            endpoint.method,\n            callback,\n            skipJsonParsing,\n            customResponseParser\n          );\n        }\n      });\n      response.on(\"close\", e => {\n        if (e) {\n          this.logger.error(\n            \"problem with API request detailed stacktrace below \"\n          );\n          this.logger.error(e);\n          callback(e);\n        }\n      });\n    });\n    request.on(\"error\", e => {\n      this.logger.error(\"problem with API request detailed stacktrace below \");\n      this.logger.error(e);\n      callback(e);\n    });\n  }\n\n  __parseResponse(\n    httpResponse,\n    data,\n    method,\n    callback,\n    skipJsonParsing,\n    customResponseParser\n  ) {\n    const isArrayOrBuffer = data instanceof Array || data instanceof Buffer;\n    if (!isArrayOrBuffer) {\n      throw new Error(\"data should be of type Array or Buffer\");\n    }\n\n    const status = httpResponse.statusCode;\n    const headers = httpResponse.headers;\n\n    let response = null;\n    var error = null;\n\n    try {\n      if (status >= 500) {\n        error = {\n          message: \"Server Error\",\n          statusCode: status\n        };\n      } else if (\n        httpResponse.headers[\"content-type\"] === \"application/octet-stream\"\n      ) {\n        response = data;\n      } else if (status === 429) {\n        // 429 does not return a parsable body\n        if (!headers[\"retry-after\"]) {\n          // retry based on allowed per second\n          const retryAfterMillis = method === \"POST\" ? 1000 / 2 : 1000 / 5;\n          headers[\"retry-after\"] = retryAfterMillis;\n        }\n        error = {\n          body: data.join(\"\")\n        };\n      } else if (status === 204) {\n        response = null;\n      } else if (status >= 400 || status < 200) {\n        error = {\n          body: JSON.parse(data.join(\"\")),\n          headers\n        };\n      } else if (method !== \"DELETE\") {\n        if (!!skipJsonParsing) {\n          response = data.join(\"\");\n        } else {\n          response = JSON.parse(data.join(\"\"));\n        }\n      } else {\n        response = data;\n      }\n    } catch (parseError) {\n      this.logger.error(parseError);\n      this.logger.error(\n        \"could not convert API response to JSON, above error is ignored and raw API response is returned to client\"\n      );\n      this.logger.error(\"Raw Error message from API \");\n      this.logger.error(`\"${data}\"`);\n\n      error = {\n        status: status,\n        message: \"The API response could not be parsed.\",\n        body: data.join(\"\"),\n        parseError: parseError\n      };\n    }\n\n    if (error) {\n      error.statusCode = status;\n      error.headers = headers;\n    }\n\n    if (typeof callback === \"function\") {\n      if (typeof customResponseParser === \"function\") {\n        // don't try to parse the response on errors\n        if (response) {\n          response = customResponseParser(response);\n        }\n      }\n      callback(error, response);\n    }\n  }\n\n  _addLimitedAccessMessageToErrors(callback, limitedAccessStatus) {\n    return function(err, data) {\n      if (err && err.status == limitedAccessStatus) {\n        err._INFO_ =\n          \"This endpoint may need activating on your account. Please email support@nexmo.com for more information\";\n      }\n\n      return callback(err, data);\n    };\n  }\n\n  get(path, params, callback, useJwt = false, useBasicAuth = false) {\n    if (!callback) {\n      if (typeof params == \"function\") {\n        callback = params;\n        params = {};\n      }\n    }\n\n    params = params || {};\n    if (!useJwt && !useBasicAuth) {\n      params[\"api_key\"] = this.credentials.apiKey;\n      params[\"api_secret\"] = this.credentials.apiSecret;\n    }\n\n    path = path + \"?\" + querystring.stringify(params);\n\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    if (useJwt) {\n      headers[\"Authorization\"] = `Bearer ${this.credentials.generateJwt()}`;\n    }\n    if (useBasicAuth) {\n      headers[\"Authorization\"] = `Basic ${Buffer.from(\n        this.credentials.apiKey + \":\" + this.credentials.apiSecret\n      ).toString(\"base64\")}`;\n    }\n\n    this.request(\n      {\n        path: path,\n        headers\n      },\n      \"GET\",\n      callback\n    );\n  }\n\n  delete(path, callback, useJwt, useBasicAuth) {\n    let params = {};\n    if (!useJwt && !useBasicAuth) {\n      params[\"api_key\"] = this.credentials.apiKey;\n      params[\"api_secret\"] = this.credentials.apiSecret;\n    }\n\n    let headers = {};\n\n    if (useBasicAuth) {\n      headers[\"Authorization\"] = `Basic ${Buffer.from(\n        this.credentials.apiKey + \":\" + this.credentials.apiSecret\n      ).toString(\"base64\")}`;\n    }\n    path = path + \"?\" + querystring.stringify(params);\n\n    this.request(\n      {\n        path: path,\n        headers\n      },\n      \"DELETE\",\n      callback\n    );\n  }\n\n  postFile(path, options, callback, useJwt) {\n    let qs = {};\n    if (!useJwt) {\n      qs[\"api_key\"] = this.credentials.apiKey;\n      qs[\"api_secret\"] = this.credentials.apiSecret;\n    }\n\n    if (Object.keys(qs).length) {\n      let joinChar = \"?\";\n      if (path.indexOf(joinChar) !== -1) {\n        joinChar = \"&\";\n      }\n      path = path + joinChar + querystring.stringify(qs);\n    }\n\n    const file = options.file;\n    delete options.file; // We don't send this as metadata\n\n    const formData = {};\n\n    if (file) {\n      formData[\"filedata\"] = {\n        value: file,\n        options: {\n          filename: options.filename || null\n        }\n      };\n    }\n\n    if (options.info) {\n      formData.info = JSON.stringify(options.info);\n    }\n\n    if (options.url) {\n      formData.url = options.url;\n    }\n\n    this.requestLib.post(\n      {\n        url: \"https://\" + this.host + path,\n        formData: formData,\n        headers: {\n          Authorization: `Bearer ${this.credentials.generateJwt()}`\n        }\n      },\n      callback\n    );\n  }\n\n  post(path, params, callback, useJwt, headers) {\n    let qs = {};\n    if (!useJwt) {\n      qs[\"api_key\"] = this.credentials.apiKey;\n      qs[\"api_secret\"] = this.credentials.apiSecret;\n    }\n\n    let joinChar = \"?\";\n    if (path.indexOf(joinChar) !== -1) {\n      joinChar = \"&\";\n    }\n\n    path = path + joinChar + querystring.stringify(qs);\n\n    headers = headers || {};\n    if (useJwt) {\n      headers[\"Authorization\"] = `Bearer ${this.credentials.generateJwt()}`;\n    }\n\n    let encodedParams;\n    if (headers[\"Content-Type\"] == \"application/json\") {\n      encodedParams = JSON.stringify(params);\n    } else {\n      encodedParams = querystring.stringify(params);\n    }\n\n    this.request({ path, body: encodedParams, headers }, \"POST\", callback);\n  }\n\n  postJson(path, params, callback, useJwt, useBasicAuth) {\n    let qs = {};\n    if (!useJwt && !useBasicAuth) {\n      qs[\"api_key\"] = this.credentials.apiKey;\n      qs[\"api_secret\"] = this.credentials.apiSecret;\n    }\n\n    let joinChar = \"?\";\n    if (path.indexOf(joinChar) !== -1) {\n      joinChar = \"&\";\n    }\n\n    path = path + joinChar + querystring.stringify(qs);\n\n    let headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    if (useBasicAuth) {\n      headers[\"Authorization\"] = `Basic ${Buffer.from(\n        this.credentials.apiKey + \":\" + this.credentials.apiSecret\n      ).toString(\"base64\")}`;\n    }\n\n    this.request(\n      {\n        path: path,\n        body: JSON.stringify(params),\n        headers\n      },\n      \"POST\",\n      callback\n    );\n  }\n\n  postUseQueryString(path, params, callback, useJwt) {\n    params = params || {};\n    if (!useJwt) {\n      params[\"api_key\"] = this.credentials.apiKey;\n      params[\"api_secret\"] = this.credentials.apiSecret;\n    }\n\n    path = path + \"?\" + querystring.stringify(params);\n\n    this.request(\n      {\n        path: path\n      },\n      \"POST\",\n      callback\n    );\n  }\n}\n\nexport default HttpClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}