{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _index = require(\"./index\");\nvar _index2 = _interopRequireDefault(_index);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar Account = function () {\n  /**\n   * @param {Credentials} credentials\n   *    credentials to be used when interacting with the API.\n   * @param {Object} options\n   *    Addition Account options.\n   */\n  function Account(credentials) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Account);\n    this.creds = credentials;\n    this.options = options;\n\n    // Used to facilitate testing of the call to the underlying object\n    this._nexmo = this.options.nexmoOverride || _index2.default;\n    this._nexmo.initialize(this.creds.apiKey, this.creds.apiSecret, this.options);\n  }\n\n  /**\n   * TODO: document\n   */\n\n  _createClass(Account, [{\n    key: \"checkBalance\",\n    value: function checkBalance(callback) {\n      return this.options.rest.get(\"/account/get-balance\", callback);\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(newSecret, callback) {\n      return this.options.rest.postUseQueryString(\"/account/settings\", {\n        newSecret: newSecret\n      }, callback);\n    }\n  }, {\n    key: \"updateSMSCallback\",\n    value: function updateSMSCallback(moCallBackUrl, callback) {\n      return this.options.rest.postUseQueryString(\"/account/settings\", {\n        moCallBackUrl: moCallBackUrl\n      }, callback);\n    }\n  }, {\n    key: \"updateDeliveryReceiptCallback\",\n    value: function updateDeliveryReceiptCallback(drCallBackUrl, callback) {\n      return this.options.rest.postUseQueryString(\"/account/settings\", {\n        drCallBackUrl: drCallBackUrl\n      }, callback);\n    }\n  }, {\n    key: \"topUp\",\n    value: function topUp(trx, callback) {\n      return this.options.rest.postUseQueryString(\"/account/top-up\", {\n        trx: trx\n      }, callback);\n    }\n  }, {\n    key: \"listSecrets\",\n    value: function listSecrets(apiKey, callback) {\n      return this.options.api.get(\"/accounts/\" + apiKey + \"/secrets\", {}, callback, false, true);\n    }\n  }, {\n    key: \"getSecret\",\n    value: function getSecret(apiKey, id, callback) {\n      return this.options.api.get(\"/accounts/\" + apiKey + \"/secrets/\" + id, {}, callback, false, true);\n    }\n  }, {\n    key: \"createSecret\",\n    value: function createSecret(apiKey, secret, callback) {\n      return this.options.api.postJson(\"/accounts/\" + apiKey + \"/secrets/\", {\n        secret: secret\n      }, callback, false, true);\n    }\n  }, {\n    key: \"deleteSecret\",\n    value: function deleteSecret(apiKey, id, callback) {\n      return this.options.api.delete(\"/accounts/\" + apiKey + \"/secrets/\" + id, callback, false, true);\n    }\n  }]);\n  return Account;\n}();\nexports.default = Account;\nmodule.exports = exports[\"default\"];","map":{"version":3,"names":["_index","require","Account","credentials","options","arguments","length","undefined","_classCallCheck","creds","_nexmo","nexmoOverride","_index2","default","initialize","apiKey","apiSecret","callback","rest","get","newSecret","postUseQueryString","moCallBackUrl","drCallBackUrl","trx","api","id","secret","postJson","delete"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/nexmo/src/Account.js"],"sourcesContent":["\"use strict\";\n\nimport nexmo from \"./index\";\n\nclass Account {\n  /**\n   * @param {Credentials} credentials\n   *    credentials to be used when interacting with the API.\n   * @param {Object} options\n   *    Addition Account options.\n   */\n  constructor(credentials, options = {}) {\n    this.creds = credentials;\n    this.options = options;\n\n    // Used to facilitate testing of the call to the underlying object\n    this._nexmo = this.options.nexmoOverride || nexmo;\n\n    this._nexmo.initialize(\n      this.creds.apiKey,\n      this.creds.apiSecret,\n      this.options\n    );\n  }\n\n  /**\n   * TODO: document\n   */\n  checkBalance(callback) {\n    return this.options.rest.get(\"/account/get-balance\", callback);\n  }\n\n  updatePassword(newSecret, callback) {\n    return this.options.rest.postUseQueryString(\n      \"/account/settings\",\n      { newSecret },\n      callback\n    );\n  }\n\n  updateSMSCallback(moCallBackUrl, callback) {\n    return this.options.rest.postUseQueryString(\n      \"/account/settings\",\n      { moCallBackUrl },\n      callback\n    );\n  }\n\n  updateDeliveryReceiptCallback(drCallBackUrl, callback) {\n    return this.options.rest.postUseQueryString(\n      \"/account/settings\",\n      { drCallBackUrl },\n      callback\n    );\n  }\n\n  topUp(trx, callback) {\n    return this.options.rest.postUseQueryString(\n      \"/account/top-up\",\n      { trx },\n      callback\n    );\n  }\n\n  listSecrets(apiKey, callback) {\n    return this.options.api.get(\n      \"/accounts/\" + apiKey + \"/secrets\",\n      {},\n      callback,\n      false,\n      true\n    );\n  }\n\n  getSecret(apiKey, id, callback) {\n    return this.options.api.get(\n      \"/accounts/\" + apiKey + \"/secrets/\" + id,\n      {},\n      callback,\n      false,\n      true\n    );\n  }\n\n  createSecret(apiKey, secret, callback) {\n    return this.options.api.postJson(\n      \"/accounts/\" + apiKey + \"/secrets/\",\n      { secret: secret },\n      callback,\n      false,\n      true\n    );\n  }\n\n  deleteSecret(apiKey, id, callback) {\n    return this.options.api.delete(\n      \"/accounts/\" + apiKey + \"/secrets/\" + id,\n      callback,\n      false,\n      true\n    );\n  }\n}\n\nexport default Account;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAEA,IAAAA,MAAA,GAAAC,OAAA;;;;;;;;;;;;IAEMC,O;EACJ;;;;;;EAMA,SAAAA,QAAYC,WAAZ,EAAuC;IAAA,IAAdC,OAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAJ,EAAI;IAAAG,eAAA,OAAAN,OAAA;IACrC,KAAKO,KAAL,GAAaN,WAAb;IACA,KAAKC,OAAL,GAAeA,OAAf;;IAEA;IACA,KAAKM,MAAL,GAAc,KAAKN,OAAL,CAAaO,aAAb,IAAAC,OAAA,CAAAC,OAAd;IAEA,KAAKH,MAAL,CAAYI,UAAZ,CACE,KAAKL,KAAL,CAAWM,MADb,EAEE,KAAKN,KAAL,CAAWO,SAFb,EAGE,KAAKZ,OAHP;EAKD;;EAED;;;;;;iCAGaa,Q,EAAU;MACrB,OAAO,KAAKb,OAAL,CAAac,IAAb,CAAkBC,GAAlB,CAAsB,sBAAtB,EAA8CF,QAA9C,CAAP;IACD;;;mCAEcG,S,EAAWH,Q,EAAU;MAClC,OAAO,KAAKb,OAAL,CAAac,IAAb,CAAkBG,kBAAlB,CACL,mBADK,EAEL;QAAED,SAAA,EAAAA;MAAF,CAFK,EAGLH,QAHK,CAAP;IAKD;;;sCAEiBK,a,EAAeL,Q,EAAU;MACzC,OAAO,KAAKb,OAAL,CAAac,IAAb,CAAkBG,kBAAlB,CACL,mBADK,EAEL;QAAEC,aAAA,EAAAA;MAAF,CAFK,EAGLL,QAHK,CAAP;IAKD;;;kDAE6BM,a,EAAeN,Q,EAAU;MACrD,OAAO,KAAKb,OAAL,CAAac,IAAb,CAAkBG,kBAAlB,CACL,mBADK,EAEL;QAAEE,aAAA,EAAAA;MAAF,CAFK,EAGLN,QAHK,CAAP;IAKD;;;0BAEKO,G,EAAKP,Q,EAAU;MACnB,OAAO,KAAKb,OAAL,CAAac,IAAb,CAAkBG,kBAAlB,CACL,iBADK,EAEL;QAAEG,GAAA,EAAAA;MAAF,CAFK,EAGLP,QAHK,CAAP;IAKD;;;gCAEWF,M,EAAQE,Q,EAAU;MAC5B,OAAO,KAAKb,OAAL,CAAaqB,GAAb,CAAiBN,GAAjB,CACL,eAAeJ,MAAf,GAAwB,UADnB,EAEL,EAFK,EAGLE,QAHK,EAIL,KAJK,EAKL,IALK,CAAP;IAOD;;;8BAESF,M,EAAQW,E,EAAIT,Q,EAAU;MAC9B,OAAO,KAAKb,OAAL,CAAaqB,GAAb,CAAiBN,GAAjB,CACL,eAAeJ,MAAf,GAAwB,WAAxB,GAAsCW,EADjC,EAEL,EAFK,EAGLT,QAHK,EAIL,KAJK,EAKL,IALK,CAAP;IAOD;;;iCAEYF,M,EAAQY,M,EAAQV,Q,EAAU;MACrC,OAAO,KAAKb,OAAL,CAAaqB,GAAb,CAAiBG,QAAjB,CACL,eAAeb,MAAf,GAAwB,WADnB,EAEL;QAAEY,MAAA,EAAQA;MAAV,CAFK,EAGLV,QAHK,EAIL,KAJK,EAKL,IALK,CAAP;IAOD;;;iCAEYF,M,EAAQW,E,EAAIT,Q,EAAU;MACjC,OAAO,KAAKb,OAAL,CAAaqB,GAAb,CAAiBI,MAAjB,CACL,eAAed,MAAf,GAAwB,WAAxB,GAAsCW,EADjC,EAELT,QAFK,EAGL,KAHK,EAIL,IAJK,CAAP;IAMD;;;;kBAGYf,O"},"metadata":{},"sourceType":"script","externalDependencies":[]}