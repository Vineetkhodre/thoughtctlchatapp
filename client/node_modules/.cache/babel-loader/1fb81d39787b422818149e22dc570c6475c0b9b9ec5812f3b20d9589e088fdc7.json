{"ast":null,"code":"var _jsxFileName = \"/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/User.js\";\n// import React, { useState } from \"react\";\n\n// const User = ({ onUpdate }) => {\n//   const [user, setUser] = useState({});\n\n//   const createUser = () => {\n//     fetch(\"/createUser\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ name: user.username }),\n//     })\n//       .then((results) => results.json())\n//       .then((data) => {\n//         setUser({ userId: data.id });\n//         onUpdate(user);\n//         console.log(\"ooobhgencho\" + user.userId);\n//       });\n//   };\n\n//   const setUsername = (evt) => {\n//     setUser({\n//       username: evt.target.value,\n//     });\n//   };\n\n//   if (user.userId) {\n//     return (\n//       <div className=\"userinfo userconnected\">\n//         Connected as <span className=\"username\">{user.username}</span>\n//       </div>\n//     );\n//   } else {\n//     return (\n//       <div className=\"userinfo\">\n//         <input type=\"text\" onChange={(evt) => setUsername(evt)} />\n//         <button onClick={createUser}>Create user</button>\n//       </div>\n//     );\n//   }\n// };\n\n// export default User;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.createUser = this.createUser.bind(this);\n    this.setUsername = this.setUsername.bind(this);\n  }\n  createUser() {\n    fetch(\"/createUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: this.state.username\n      })\n    }).then(results => results.json()).then(data => {\n      this.setState({\n        userId: data.id\n      }, () => this.props.onUpdate(this.state));\n    });\n  }\n  setUsername(evt) {\n    this.setState({\n      username: evt.target.value\n    });\n  }\n  render() {\n    if (this.state.userId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userinfo userconnected\",\n        children: [\"Connected as \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"username\",\n          children: this.state.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userinfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: evt => this.setUsername(evt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.createUser,\n          children: \"Create user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\nexport default User;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","User","Component","constructor","props","state","createUser","bind","setUsername","fetch","method","headers","body","JSON","stringify","name","username","then","results","json","data","setState","userId","id","onUpdate","evt","target","value","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/User.js"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// const User = ({ onUpdate }) => {\n//   const [user, setUser] = useState({});\n\n//   const createUser = () => {\n//     fetch(\"/createUser\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ name: user.username }),\n//     })\n//       .then((results) => results.json())\n//       .then((data) => {\n//         setUser({ userId: data.id });\n//         onUpdate(user);\n//         console.log(\"ooobhgencho\" + user.userId);\n//       });\n//   };\n\n//   const setUsername = (evt) => {\n//     setUser({\n//       username: evt.target.value,\n//     });\n//   };\n\n//   if (user.userId) {\n//     return (\n//       <div className=\"userinfo userconnected\">\n//         Connected as <span className=\"username\">{user.username}</span>\n//       </div>\n//     );\n//   } else {\n//     return (\n//       <div className=\"userinfo\">\n//         <input type=\"text\" onChange={(evt) => setUsername(evt)} />\n//         <button onClick={createUser}>Create user</button>\n//       </div>\n//     );\n//   }\n// };\n\n// export default User;\n\nimport React from \"react\";\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.createUser = this.createUser.bind(this);\n    this.setUsername = this.setUsername.bind(this);\n  }\n\n  createUser() {\n    fetch(\"/createUser\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: this.state.username }),\n    })\n      .then((results) => results.json())\n      .then((data) => {\n        this.setState(\n          {\n            userId: data.id,\n          },\n          () => this.props.onUpdate(this.state)\n        );\n      });\n  }\n\n  setUsername(evt) {\n    this.setState({\n      username: evt.target.value,\n    });\n  }\n\n  render() {\n    if (this.state.userId) {\n      return (\n        <div className=\"userinfo userconnected\">\n          Connected as <span className=\"username\">{this.state.username}</span>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"userinfo\">\n          <input type=\"text\" onChange={(evt) => this.setUsername(evt)} />\n          <button onClick={this.createUser}>Create user</button>\n        </div>\n      );\n    }\n  }\n}\n\nexport default User;\n"],"mappings":";AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,SAASH,KAAK,CAACI,SAAS,CAAC;EACjCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IAEf,IAAI,CAACC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACD,IAAI,CAAC,IAAI,CAAC;EAChD;EAEAD,UAAUA,CAAA,EAAG;IACXG,KAAK,CAAC,aAAa,EAAE;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAE,IAAI,CAACV,KAAK,CAACW;MAAS,CAAC;IACpD,CAAC,CAAC,CACCC,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAI,CAACC,QAAQ,CACX;QACEC,MAAM,EAAEF,IAAI,CAACG;MACf,CAAC,EACD,MAAM,IAAI,CAACnB,KAAK,CAACoB,QAAQ,CAAC,IAAI,CAACnB,KAAK,CACtC,CAAC;IACH,CAAC,CAAC;EACN;EAEAG,WAAWA,CAACiB,GAAG,EAAE;IACf,IAAI,CAACJ,QAAQ,CAAC;MACZL,QAAQ,EAAES,GAAG,CAACC,MAAM,CAACC;IACvB,CAAC,CAAC;EACJ;EAEAC,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAACvB,KAAK,CAACiB,MAAM,EAAE;MACrB,oBACEtB,OAAA;QAAK6B,SAAS,EAAC,wBAAwB;QAAAC,QAAA,GAAC,eACzB,eAAA9B,OAAA;UAAM6B,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAE,IAAI,CAACzB,KAAK,CAACW;QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC;IAEV,CAAC,MAAM;MACL,oBACElC,OAAA;QAAK6B,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvB9B,OAAA;UAAOmC,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAGX,GAAG,IAAK,IAAI,CAACjB,WAAW,CAACiB,GAAG;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/DlC,OAAA;UAAQqC,OAAO,EAAE,IAAI,CAAC/B,UAAW;UAAAwB,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC;IAEV;EACF;AACF;AAEA,eAAejC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}