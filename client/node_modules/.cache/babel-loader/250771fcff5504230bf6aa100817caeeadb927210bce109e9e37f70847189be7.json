{"ast":null,"code":"var _jsxFileName = \"/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/components/User.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = ({\n  onUpdate,\n  openChatUpdate\n}) => {\n  _s();\n  const [user, setUser] = useState({});\n  const [err, setErr] = useState(false);\n  const [openChat, setOpenChat] = useState(false);\n  const createUser = async user => {\n    try {\n      await fetch(\"/createUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: user\n        })\n      }).then(results => results.json()).then(data => {\n        setUser(prevUser => ({\n          ...prevUser,\n          userId: data.id\n        }));\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = e.target[0].value;\n    setUser(() => ({\n      username: user\n    }));\n    createUser(user);\n  };\n  if (user.userId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnnamecontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username\",\n        children: `User : ${user.username}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn2\",\n        className: \"button\",\n        onClick: openChatUpdate(user.username),\n        children: \"Create conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userinfo\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          className: \"userinput\",\n          placeholder: \"Enter your username\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"btn\",\n          className: \"button\",\n          children: \"Create user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), err && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(User, \"ARNQLRcxgPkWEsCtkOphQOlH/5w=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","User","onUpdate","openChatUpdate","_s","user","setUser","err","setErr","openChat","setOpenChat","createUser","fetch","method","headers","body","JSON","stringify","name","then","results","json","data","prevUser","userId","id","handleSubmit","e","preventDefault","target","value","username","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/components/User.js"],"sourcesContent":["import React, { useState } from \"react\";\nconst User = ({ onUpdate, openChatUpdate }) => {\n  const [user, setUser] = useState({});\n  const [err, setErr] = useState(false);\n  const [openChat, setOpenChat] = useState(false);\n\n  const createUser = async (user) => {\n    try {\n      await fetch(\"/createUser\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: user }),\n      })\n        .then((results) => results.json())\n        .then((data) => {\n          setUser((prevUser) => ({\n            ...prevUser,\n            userId: data.id,\n          }));\n        });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const user = e.target[0].value;\n    setUser(() => ({\n      username: user,\n    }));\n    createUser(user);\n  };\n\n  if (user.userId) {\n    return (\n      <div className=\"btnnamecontainer\">\n        <div className=\"username\">{`User : ${user.username}`}</div>\n        <button\n          id=\"btn2\"\n          className=\"button\"\n          onClick={openChatUpdate(user.username)}\n        >\n          Create conversation\n        </button>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"userinfo\">\n        <form onSubmit={handleSubmit}>\n          <input\n            id=\"username\"\n            className=\"userinput\"\n            placeholder=\"Enter your username\"\n            type=\"text\"\n          />\n          <button id=\"btn\" className=\"button\">\n            Create user\n          </button>\n          {err && <div className=\"error\">Something went wrong</div>}\n        </form>\n      </div>\n    );\n  }\n};\n\nexport default User;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}