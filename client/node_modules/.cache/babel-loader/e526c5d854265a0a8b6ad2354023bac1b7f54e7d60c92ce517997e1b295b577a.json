{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\nvar _StreamResource = _interopRequireDefault(require(\"./StreamResource\"));\nvar _TalkResource = _interopRequireDefault(require(\"./TalkResource\"));\nvar _DtmfResource = _interopRequireDefault(require(\"./DtmfResource\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * Provides access to the `calls` resource.\n */\nclass CallsResource {\n  /**\n   * The path to the `calls` resource.\n   */\n  static get PATH() {\n    return \"/v1/calls\";\n  }\n  /**\n   * Creates a new CallsResource.\n   *\n   * @param {Credentials} creds - Credentials used when interacting with the Vonage API.\n   * @param {Object} options - additional options for the class.\n   */\n\n  constructor(creds, options) {\n    this.creds = creds;\n    this.options = options;\n    /**\n     * @type StreamController\n     */\n\n    this.stream = new _StreamResource.default(this.creds, this.options);\n    /**\n     * @type TalkResource\n     */\n\n    this.talk = new _TalkResource.default(this.creds, this.options);\n    /**\n     * @type DtmfResource\n     */\n\n    this.dtmf = new _DtmfResource.default(this.creds, this.options);\n  }\n  /**\n   * Create a new call.\n   *\n   * @param {Object} params - Parameters used when creating the call. See https://developer.nexmo.com/api/voice#create-an-outbound-call for more information.\n   * @param {function} callback - function to be called when the request completes.\n   */\n\n  create(params, callback) {\n    params = JSON.stringify(params);\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: CallsResource.PATH,\n      method: \"POST\",\n      body: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": Buffer.byteLength(params),\n        Authorization: \"Bearer \".concat(this.creds.generateJwt())\n      }\n    };\n    this.options.httpClient.request(config, callback);\n  }\n  /**\n   * Get an existing call.\n   *\n   * @param {string|object} query - The unique identifier for the call to retrieve\n   *               or a set of filter parameters for the query. For more information\n   *               see https://docs.nexmo.com/voice/voice-api/api-reference#call_retrieve\n   * @param {function} callback - function to be called when the request completes.\n   */\n\n  get(query, callback) {\n    if (!query) {\n      throw new Error('\"query\" is a required parameter');\n    }\n    var pathExt = \"\";\n    if (typeof query === \"string\") {\n      // single call Id\n      pathExt = \"/\".concat(query);\n    } else if (typeof query === \"object\" && Object.keys(query).length > 0) {\n      // filter\n      pathExt = \"?\".concat(_querystring.default.stringify(query));\n    }\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: \"\".concat(CallsResource.PATH).concat(pathExt),\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \".concat(this.creds.generateJwt())\n      }\n    };\n    this.options.httpClient.request(config, callback);\n  }\n  /**\n   * Update an existing call.\n   *\n   * @param {string} [callId] - The unique identifier for the call to update.\n   * @param {Object} params - Parameters used when updating the call. See https://developer.nexmo.com/api/voice#modify-an-existing-call for more information.\n   * @param {function} callback - function to be called when the request completes.\n   */\n\n  update(callId, params, callback) {\n    params = JSON.stringify(params);\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: \"\".concat(CallsResource.PATH, \"/\").concat(callId),\n      method: \"PUT\",\n      body: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": Buffer.byteLength(params),\n        Authorization: \"Bearer \".concat(this.creds.generateJwt())\n      }\n    };\n    this.options.httpClient.request(config, callback);\n  }\n}\nvar _default = CallsResource;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_querystring","_interopRequireDefault","require","_StreamResource","_TalkResource","_DtmfResource","CallsResource","PATH","constructor","creds","options","stream","default","talk","dtmf","create","params","callback","JSON","stringify","config","host","apiHost","path","method","body","headers","Buffer","byteLength","Authorization","concat","generateJwt","httpClient","request","get","query","Error","pathExt","Object","keys","length","update","callId"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/@vonage/server-sdk/src/CallsResource.js"],"sourcesContent":["import querystring from \"querystring\";\n\nimport StreamResource from \"./StreamResource\";\nimport TalkResource from \"./TalkResource\";\nimport DtmfResource from \"./DtmfResource\";\n\n/**\n * Provides access to the `calls` resource.\n */\nclass CallsResource {\n  /**\n   * The path to the `calls` resource.\n   */\n  static get PATH() {\n    return \"/v1/calls\";\n  }\n\n  /**\n   * Creates a new CallsResource.\n   *\n   * @param {Credentials} creds - Credentials used when interacting with the Vonage API.\n   * @param {Object} options - additional options for the class.\n   */\n  constructor(creds, options) {\n    this.creds = creds;\n    this.options = options;\n\n    /**\n     * @type StreamController\n     */\n    this.stream = new StreamResource(this.creds, this.options);\n\n    /**\n     * @type TalkResource\n     */\n    this.talk = new TalkResource(this.creds, this.options);\n\n    /**\n     * @type DtmfResource\n     */\n    this.dtmf = new DtmfResource(this.creds, this.options);\n  }\n\n  /**\n   * Create a new call.\n   *\n   * @param {Object} params - Parameters used when creating the call. See https://developer.nexmo.com/api/voice#create-an-outbound-call for more information.\n   * @param {function} callback - function to be called when the request completes.\n   */\n  create(params, callback) {\n    params = JSON.stringify(params);\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: CallsResource.PATH,\n      method: \"POST\",\n      body: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": Buffer.byteLength(params),\n        Authorization: `Bearer ${this.creds.generateJwt()}`,\n      },\n    };\n    this.options.httpClient.request(config, callback);\n  }\n\n  /**\n   * Get an existing call.\n   *\n   * @param {string|object} query - The unique identifier for the call to retrieve\n   *               or a set of filter parameters for the query. For more information\n   *               see https://docs.nexmo.com/voice/voice-api/api-reference#call_retrieve\n   * @param {function} callback - function to be called when the request completes.\n   */\n  get(query, callback) {\n    if (!query) {\n      throw new Error('\"query\" is a required parameter');\n    }\n\n    var pathExt = \"\";\n    if (typeof query === \"string\") {\n      // single call Id\n      pathExt = `/${query}`;\n    } else if (typeof query === \"object\" && Object.keys(query).length > 0) {\n      // filter\n      pathExt = `?${querystring.stringify(query)}`;\n    }\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: `${CallsResource.PATH}${pathExt}`,\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${this.creds.generateJwt()}`,\n      },\n    };\n    this.options.httpClient.request(config, callback);\n  }\n\n  /**\n   * Update an existing call.\n   *\n   * @param {string} [callId] - The unique identifier for the call to update.\n   * @param {Object} params - Parameters used when updating the call. See https://developer.nexmo.com/api/voice#modify-an-existing-call for more information.\n   * @param {function} callback - function to be called when the request completes.\n   */\n  update(callId, params, callback) {\n    params = JSON.stringify(params);\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: `${CallsResource.PATH}/${callId}`,\n      method: \"PUT\",\n      body: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": Buffer.byteLength(params),\n        Authorization: `Bearer ${this.creds.generateJwt()}`,\n      },\n    };\n    this.options.httpClient.request(config, callback);\n  }\n}\n\nexport default CallsResource;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}