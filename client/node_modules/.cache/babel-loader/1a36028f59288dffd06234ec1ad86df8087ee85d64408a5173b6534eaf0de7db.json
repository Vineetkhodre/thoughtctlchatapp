{"ast":null,"code":"var _jsxFileName = \"/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/components/Chatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport nexmoClient from \"nexmo-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatroom({\n  logdinUser,\n  jwttoken\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [member, setMember] = useState();\n  const [userLoginInfo, setUserLoginInfo] = useState({});\n  const login = async token => {\n    try {\n      let nexmo = new nexmoClient({\n        debug: true,\n        log_reporter: {\n          enabled: true\n        }\n      });\n      const sessionData = await nexmo.createSession(token);\n      console.log(\"session\" + sessionData);\n      setUserLoginInfo(prevState => ({\n        ...prevState,\n        token: jwttoken,\n        sessionData: sessionData\n      }));\n    } catch (error) {\n      console.error(\"Error in usersData:\", error);\n    }\n  };\n  useEffect(() => {\n    if (userLoginInfo.token) {\n      login();\n    }\n  }, []);\n  const ncard = val => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      username: val.name,\n      onClick: () => {\n        setMember(val);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await fetch(\"/getUsers\", {\n        method: \"GET\"\n      }).then(results => results.json()).then(data => {\n        setUsers(data.users._embedded.data.users);\n      });\n    } catch (error) {\n      console.error(\"Error in :\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftroom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: logdinUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftcontainer\",\n        children: users.map(ncard)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightcontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: member === null || member === void 0 ? void 0 : member.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatcontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messagecontainer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputcontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"messageinput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"messagesendbutton\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatroom, \"P9n8B7wMIhU3zNI8xGGzr6HuxxA=\");\n_c = Chatroom;\nexport default Chatroom;\n\n// import React, { useState } from \"react\";\n// //import styles from \"./Chatroom.css\";\n\n// const Chatroom = (props) => {\n//   const [messages, setMessages] = useState([]);\n//   const [conversation, setConversation] = useState(null);\n//   const [input, setInput] = useState(null);\n\n//   const joinConversation = (evt) => {\n//     let select = evt.target;\n//     props.app.getConversation(select.value).then((conv) => {\n//       conv.on(\"text\", onMessage);\n//       conv.join();\n//       setConversation(conv);\n//     });\n//   };\n\n//   const onMessage = (sender, message) => {\n//     let newMessages = messages.concat({\n//       key: message.id,\n//       sender: sender.display_name,\n//       text: message.body.text,\n//     });\n//     setMessages(newMessages);\n//   };\n\n//   const sendInput = (evt) => {\n//     conversation.sendText(input).then(() => {\n//       setInput(null);\n//     });\n//     evt.target.previousSibling.value = \"\";\n//   };\n\n//   return (\n//     <div className=\"conversation\">\n//       {conversation && (\n//         <>\n//           <div className=\"messages\">\n//             {messages.map((msg) => (\n//               <p key={msg.key} className=\"message\">\n//                 <b>{msg.sender}:</b>\n//                 {msg.text}\n//               </p>\n//             ))}\n//           </div>\n//           <div className=\"input\">\n//             <textarea onBlur={(evt) => setInput(evt.target.value)} />\n//             <button onClick={(evt) => sendInput(evt)}>Chat</button>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useEffect","useState","Card","nexmoClient","jsxDEV","_jsxDEV","Chatroom","logdinUser","jwttoken","_s","users","setUsers","member","setMember","userLoginInfo","setUserLoginInfo","login","token","nexmo","debug","log_reporter","enabled","sessionData","createSession","console","log","prevState","error","ncard","val","username","name","onClick","fileName","_jsxFileName","lineNumber","columnNumber","getUsers","response","fetch","method","then","results","json","data","_embedded","className","children","map","_c","$RefreshReg$"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/components/Chatroom.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport nexmoClient from \"nexmo-client\";\n\nfunction Chatroom({ logdinUser, jwttoken }) {\n  const [users, setUsers] = useState([]);\n  const [member, setMember] = useState();\n  const [userLoginInfo, setUserLoginInfo] = useState({});\n\n  const login = async (token) => {\n    try {\n      let nexmo = new nexmoClient({\n        debug: true,\n        log_reporter: { enabled: true },\n      });\n      const sessionData = await nexmo.createSession(token);\n      console.log(\"session\" + sessionData);\n      setUserLoginInfo((prevState) => ({\n        ...prevState,\n        token: jwttoken,\n        sessionData: sessionData,\n      }));\n    } catch (error) {\n      console.error(\"Error in usersData:\", error);\n    }\n  };\n  useEffect(() => {\n    if (userLoginInfo.token) {\n      login();\n    }\n  }, []);\n  const ncard = (val) => {\n    return (\n      <Card\n        username={val.name}\n        onClick={() => {\n          setMember(val);\n        }}\n      />\n    );\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await fetch(\"/getUsers\", {\n        method: \"GET\",\n      })\n        .then((results) => results.json())\n        .then((data) => {\n          setUsers(data.users._embedded.data.users);\n        });\n    } catch (error) {\n      console.error(\"Error in :\", error);\n    }\n  };\n  return (\n    <div className=\"chatroom\">\n      <div className=\"leftroom\">\n        <div className=\"header\">{logdinUser}</div>\n        <div className=\"leftcontainer\">{users.map(ncard)}</div>\n      </div>\n      <div className=\"rightcontainer\">\n        <div className=\"header\">{member?.name}</div>\n        <div className=\"chatcontainer\">\n          <div className=\"messagecontainer\"></div>\n          <div className=\"inputcontainer\">\n            <input className=\"messageinput\" />\n            <button className=\"messagesendbutton\">Send</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatroom;\n\n// import React, { useState } from \"react\";\n// //import styles from \"./Chatroom.css\";\n\n// const Chatroom = (props) => {\n//   const [messages, setMessages] = useState([]);\n//   const [conversation, setConversation] = useState(null);\n//   const [input, setInput] = useState(null);\n\n//   const joinConversation = (evt) => {\n//     let select = evt.target;\n//     props.app.getConversation(select.value).then((conv) => {\n//       conv.on(\"text\", onMessage);\n//       conv.join();\n//       setConversation(conv);\n//     });\n//   };\n\n//   const onMessage = (sender, message) => {\n//     let newMessages = messages.concat({\n//       key: message.id,\n//       sender: sender.display_name,\n//       text: message.body.text,\n//     });\n//     setMessages(newMessages);\n//   };\n\n//   const sendInput = (evt) => {\n//     conversation.sendText(input).then(() => {\n//       setInput(null);\n//     });\n//     evt.target.previousSibling.value = \"\";\n//   };\n\n//   return (\n//     <div className=\"conversation\">\n//       {conversation && (\n//         <>\n//           <div className=\"messages\">\n//             {messages.map((msg) => (\n//               <p key={msg.key} className=\"message\">\n//                 <b>{msg.sender}:</b>\n//                 {msg.text}\n//               </p>\n//             ))}\n//           </div>\n//           <div className=\"input\">\n//             <textarea onBlur={(evt) => setInput(evt.target.value)} />\n//             <button onClick={(evt) => sendInput(evt)}>Chat</button>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Chatroom;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}