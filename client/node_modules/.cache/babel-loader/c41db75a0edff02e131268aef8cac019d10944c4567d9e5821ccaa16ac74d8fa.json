{"ast":null,"code":"var _jsxFileName = \"/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/User.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = ({\n  onUpdate\n}) => {\n  _s();\n  const [user, setUser] = useState({});\n  const createUser = () => {\n    fetch(\"/createUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: user.username\n      })\n    }).then(results => results.json()).then(data => {\n      setUser({\n        userId: data.id,\n        username: data.username\n      });\n      onUpdate(user);\n    });\n  };\n  const setUsername = evt => {\n    setUser({\n      username: evt.target.value\n    });\n  };\n  if (user.userId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userinfo userconnected\",\n      children: [\"Connected as \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"username\",\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userinfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: evt => setUsername(evt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createUser,\n        children: \"Create user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(User, \"cCRtNmj6gRKVA5wOmLEmdl385z4=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","User","onUpdate","_s","user","setUser","createUser","fetch","method","headers","body","JSON","stringify","name","username","then","results","json","data","userId","id","setUsername","evt","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/User.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst User = ({ onUpdate }) => {\n  const [user, setUser] = useState({});\n\n  const createUser = () => {\n    fetch(\"/createUser\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: user.username }),\n    })\n      .then((results) => results.json())\n      .then((data) => {\n        setUser({ userId: data.id, username: data.username });\n        onUpdate(user);\n      });\n  };\n\n  const setUsername = (evt) => {\n    setUser({\n      username: evt.target.value,\n    });\n  };\n\n  if (user.userId) {\n    return (\n      <div className=\"userinfo userconnected\">\n        Connected as <span className=\"username\">{user.username}</span>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"userinfo\">\n        <input type=\"text\" onChange={(evt) => setUsername(evt)} />\n        <button onClick={createUser}>Create user</button>\n      </div>\n    );\n  }\n};\n\nexport default User;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAAC,aAAa,EAAE;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAET,IAAI,CAACU;MAAS,CAAC;IAC9C,CAAC,CAAC,CACCC,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,IAAI,IAAK;MACdb,OAAO,CAAC;QAAEc,MAAM,EAAED,IAAI,CAACE,EAAE;QAAEN,QAAQ,EAAEI,IAAI,CAACJ;MAAS,CAAC,CAAC;MACrDZ,QAAQ,CAACE,IAAI,CAAC;IAChB,CAAC,CAAC;EACN,CAAC;EAED,MAAMiB,WAAW,GAAIC,GAAG,IAAK;IAC3BjB,OAAO,CAAC;MACNS,QAAQ,EAAEQ,GAAG,CAACC,MAAM,CAACC;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,IAAIpB,IAAI,CAACe,MAAM,EAAE;IACf,oBACEnB,OAAA;MAAKyB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,GAAC,eACzB,eAAA1B,OAAA;QAAMyB,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAEtB,IAAI,CAACU;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAEV,CAAC,MAAM;IACL,oBACE9B,OAAA;MAAKyB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvB1B,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAGV,GAAG,IAAKD,WAAW,CAACC,GAAG;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1D9B,OAAA;QAAQiC,OAAO,EAAE3B,UAAW;QAAAoB,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAEV;AACF,CAAC;AAAC3B,EAAA,CApCIF,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}