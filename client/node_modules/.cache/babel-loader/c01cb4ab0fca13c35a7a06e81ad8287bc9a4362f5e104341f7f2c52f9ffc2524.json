{"ast":null,"code":"'use strict';\n\nvar resolve = require('resolve'),\n  path = require('path');\n\n/**\n * Requires file relative to @see root or process.cwd() if root is not supplied.\n * \n * @name requireModule\n * @function\n * @param {String} module name of an installed module or path to a module to be required.\n * @param {String=} root defaults to current working directory \n * @return {Object} the result of requiring the module\n */\nmodule.exports = function requireModule(module, root) {\n  root = root || process.cwd();\n  return /^[.\\/]/.test(module) ? require(path.resolve(root, module)) : require(resolve.sync(module, {\n    basedir: root\n  }));\n};","map":{"version":3,"names":["resolve","require","path","module","exports","requireModule","root","process","cwd","test","sync","basedir"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/require-module/index.js"],"sourcesContent":["'use strict';\n\nvar resolve = require('resolve')\n  , path = require('path')\n\n/**\n * Requires file relative to @see root or process.cwd() if root is not supplied.\n * \n * @name requireModule\n * @function\n * @param {String} module name of an installed module or path to a module to be required.\n * @param {String=} root defaults to current working directory \n * @return {Object} the result of requiring the module\n */\nmodule.exports = function requireModule(module, root) {\n  root = root || process.cwd(); \n  return (/^[.\\/]/).test(module)\n    ? require(path.resolve(root, module))\n    : require(resolve.sync(module, { basedir: root }));\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;EAC5BC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAG,SAASC,aAAaA,CAACF,MAAM,EAAEG,IAAI,EAAE;EACpDA,IAAI,GAAGA,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,CAAC;EAC5B,OAAQ,QAAQ,CAAEC,IAAI,CAACN,MAAM,CAAC,GAC1BF,OAAO,CAACC,IAAI,CAACF,OAAO,CAACM,IAAI,EAAEH,MAAM,CAAC,CAAC,GACnCF,OAAO,CAACD,OAAO,CAACU,IAAI,CAACP,MAAM,EAAE;IAAEQ,OAAO,EAAEL;EAAK,CAAC,CAAC,CAAC;AACtD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}