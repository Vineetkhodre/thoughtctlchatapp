{"ast":null,"code":"\"use strict\";\n\nvar querystring = require(\"query-string\");\nexports.createPathWithQuery = function (path, query) {\n  if (!query) {\n    throw new Error('\"query\" is a required parameter');\n  }\n  var pathExt = \"\";\n  if (typeof query === \"string\") {\n    // single call Id\n    pathExt = \"/\".concat(query);\n  } else if (typeof query === \"object\" && Object.keys(query).length > 0) {\n    // filter\n    pathExt = \"?\".concat(querystring.stringify(query));\n  }\n  return \"\".concat(path).concat(pathExt);\n};\nexports.getQuery = function (path) {\n  return querystring.parse(path.split(\"?\")[1]);\n};\nexports.sendError = function (callback, err, returnData) {\n  // Throw the error in case if there is no callback passed\n  if (callback) {\n    callback(err, returnData);\n  } else {\n    throw err;\n  }\n};\nexports.clone = function (a) {\n  return JSON.parse(JSON.stringify(a));\n};","map":{"version":3,"names":["querystring","require","exports","createPathWithQuery","path","query","Error","pathExt","concat","Object","keys","length","stringify","getQuery","parse","split","sendError","callback","err","returnData","clone","a","JSON"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/@vonage/server-sdk/src/Utils.js"],"sourcesContent":["var querystring = require(\"query-string\");\n\nexports.createPathWithQuery = function (path, query) {\n  if (!query) {\n    throw new Error('\"query\" is a required parameter');\n  }\n\n  var pathExt = \"\";\n  if (typeof query === \"string\") {\n    // single call Id\n    pathExt = `/${query}`;\n  } else if (typeof query === \"object\" && Object.keys(query).length > 0) {\n    // filter\n    pathExt = `?${querystring.stringify(query)}`;\n  }\n\n  return `${path}${pathExt}`;\n};\n\nexports.getQuery = function (path) {\n  return querystring.parse(path.split(\"?\")[1]);\n};\n\nexports.sendError = function (callback, err, returnData) {\n  // Throw the error in case if there is no callback passed\n  if (callback) {\n    callback(err, returnData);\n  } else {\n    throw err;\n  }\n};\n\nexports.clone = function (a) {\n  return JSON.parse(JSON.stringify(a));\n};\n"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB;AAEAC,OAAO,CAACC,mBAAR,GAA8B,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;EACnD,IAAI,CAACA,KAAL,EAAY;IACV,MAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;EACD;EAED,IAAIC,OAAO,GAAG,EAAd;EACA,IAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;IAC7B;IACAE,OAAO,OAAAC,MAAA,CAAOH,KAAP,CAAP;EACD,CAHD,MAGO,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BI,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,MAAnB,GAA4B,CAA7D,EAAgE;IACrE;IACAJ,OAAO,OAAAC,MAAA,CAAOR,WAAW,CAACY,SAAZ,CAAsBP,KAAtB,CAAP,CAAP;EACD;EAED,UAAAG,MAAA,CAAUJ,IAAV,EAAAI,MAAA,CAAiBD,OAAjB;AACD,CAfD;AAiBAL,OAAO,CAACW,QAAR,GAAmB,UAAUT,IAAV,EAAgB;EACjC,OAAOJ,WAAW,CAACc,KAAZ,CAAkBV,IAAI,CAACW,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAlB,CAAP;AACD,CAFD;AAIAb,OAAO,CAACc,SAAR,GAAoB,UAAUC,QAAV,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqC;EACvD;EACA,IAAIF,QAAJ,EAAc;IACZA,QAAQ,CAACC,GAAD,EAAMC,UAAN,CAAR;EACD,CAFD,MAEO;IACL,MAAMD,GAAN;EACD;AACF,CAPD;AASAhB,OAAO,CAACkB,KAAR,GAAgB,UAAUC,CAAV,EAAa;EAC3B,OAAOC,IAAI,CAACR,KAAL,CAAWQ,IAAI,CAACV,SAAL,CAAeS,CAAf,CAAX,CAAP;AACD,CAFD"},"metadata":{},"sourceType":"script","externalDependencies":[]}