{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nclass Media {\n  static get PATH() {\n    return \"/v3/media\";\n  }\n  constructor(credentials, options) {\n    this.creds = credentials;\n    this.options = options;\n  }\n  upload(opts, callback) {\n    opts = opts || {};\n    if (!opts.file && !opts.url) {\n      throw new Error(\"You must provide either 'file' or 'url' to upload a file\");\n    }\n    if (opts.file) {\n      opts.file = _fs.default.createReadStream(opts.file);\n    }\n    return this.options.api.postFile(Media.PATH, opts, function (err, response, body) {\n      if (err) {\n        return callback(err);\n      }\n      var location = \"\";\n      if (response && response.headers) {\n        location = response.headers.location;\n      }\n      return callback(null, location);\n    }, true);\n  }\n  search(options, callback) {\n    if (typeof options == \"function\" && !callback) {\n      callback = options;\n      options = {};\n    }\n    options = options || {};\n    return this._makeRequest(\"GET\", Media.PATH, options, {}, callback);\n  } // If If-Modified-Since header is provided and the data hasn't changed, the\n  // user will receive an empty body in the callback, NOT an error\n\n  download(id, headers, callback) {\n    if (!callback && typeof headers == \"function\") {\n      callback = headers;\n      headers = {};\n    }\n    return this._makeRequest(\"GET\", \"\".concat(Media.PATH, \"/\").concat(id), {}, headers, callback, true);\n  }\n  delete(id, callback) {\n    return this._makeRequest(\"DELETE\", \"\".concat(Media.PATH, \"/\").concat(id), {}, {}, callback);\n  }\n  get(id, callback) {\n    return this._makeRequest(\"GET\", \"\".concat(Media.PATH, \"/\").concat(id, \"/info\"), {}, {}, callback);\n  }\n  update(id, opts, callback) {\n    return this._makeRequest(\"PUT\", \"\".concat(Media.PATH, \"/\").concat(id, \"/info\"), opts, {}, callback);\n  }\n  _makeRequest(verb, path, options, headers, callback, skipJsonParsing) {\n    headers = Object.assign({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(this.creds.generateJwt())\n    }, headers);\n    var req = {};\n    if (verb.toUpperCase() === \"GET\") {\n      if (Object.keys(options).length) {\n        path = path + \"?\" + _querystring.default.stringify(options);\n      }\n    } else {\n      req[\"body\"] = JSON.stringify(options);\n    }\n    req[\"path\"] = path;\n    req[\"headers\"] = headers;\n    return this.options.api.request(req, verb, callback, skipJsonParsing);\n  }\n}\nvar _default = Media;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_fs","_interopRequireDefault","require","_querystring","Media","PATH","constructor","credentials","options","creds","upload","opts","callback","file","url","Error","default","createReadStream","api","postFile","err","response","body","location","headers","search","_makeRequest","download","id","concat","delete","get","update","verb","path","skipJsonParsing","Object","assign","Authorization","generateJwt","req","toUpperCase","keys","length","stringify","JSON","request"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/@vonage/server-sdk/src/Media.js"],"sourcesContent":["\"use strict\";\n\nimport fs from \"fs\";\nimport querystring from \"querystring\";\n\nclass Media {\n  static get PATH() {\n    return \"/v3/media\";\n  }\n\n  constructor(credentials, options) {\n    this.creds = credentials;\n    this.options = options;\n  }\n\n  upload(opts, callback) {\n    opts = opts || {};\n    if (!opts.file && !opts.url) {\n      throw new Error(\n        \"You must provide either 'file' or 'url' to upload a file\"\n      );\n    }\n\n    if (opts.file) {\n      opts.file = fs.createReadStream(opts.file);\n    }\n    return this.options.api.postFile(\n      Media.PATH,\n      opts,\n      function (err, response, body) {\n        if (err) {\n          return callback(err);\n        }\n\n        let location = \"\";\n        if (response && response.headers) {\n          location = response.headers.location;\n        }\n\n        return callback(null, location);\n      },\n      true\n    );\n  }\n\n  search(options, callback) {\n    if (typeof options == \"function\" && !callback) {\n      callback = options;\n      options = {};\n    }\n\n    options = options || {};\n\n    return this._makeRequest(\"GET\", Media.PATH, options, {}, callback);\n  }\n\n  // If If-Modified-Since header is provided and the data hasn't changed, the\n  // user will receive an empty body in the callback, NOT an error\n  download(id, headers, callback) {\n    if (!callback && typeof headers == \"function\") {\n      callback = headers;\n      headers = {};\n    }\n\n    return this._makeRequest(\n      \"GET\",\n      `${Media.PATH}/${id}`,\n      {},\n      headers,\n      callback,\n      true\n    );\n  }\n\n  delete(id, callback) {\n    return this._makeRequest(\"DELETE\", `${Media.PATH}/${id}`, {}, {}, callback);\n  }\n\n  get(id, callback) {\n    return this._makeRequest(\n      \"GET\",\n      `${Media.PATH}/${id}/info`,\n      {},\n      {},\n      callback\n    );\n  }\n\n  update(id, opts, callback) {\n    return this._makeRequest(\n      \"PUT\",\n      `${Media.PATH}/${id}/info`,\n      opts,\n      {},\n      callback\n    );\n  }\n\n  _makeRequest(verb, path, options, headers, callback, skipJsonParsing) {\n    headers = Object.assign(\n      {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${this.creds.generateJwt()}`,\n      },\n      headers\n    );\n\n    let req = {};\n    if (verb.toUpperCase() === \"GET\") {\n      if (Object.keys(options).length) {\n        path = path + \"?\" + querystring.stringify(options);\n      }\n    } else {\n      req[\"body\"] = JSON.stringify(options);\n    }\n\n    req[\"path\"] = path;\n    req[\"headers\"] = headers;\n\n    return this.options.api.request(req, verb, callback, skipJsonParsing);\n  }\n}\n\nexport default Media;\n"],"mappings":"AAAA;;;;;;AAEA,IAAAA,GAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAF,sBAAA,CAAAC,OAAA;;;;;;AAEA,MAAME,KAAN,CAAY;EACK,WAAJC,IAAIA,CAAA,EAAG;IAChB,OAAO,WAAP;EACD;EAEDC,WAAWA,CAACC,WAAD,EAAcC,OAAd,EAAuB;IAChC,KAAKC,KAAL,GAAaF,WAAb;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;EAEDE,MAAMA,CAACC,IAAD,EAAOC,QAAP,EAAiB;IACrBD,IAAI,GAAGA,IAAI,IAAI,EAAf;IACA,IAAI,CAACA,IAAI,CAACE,IAAN,IAAc,CAACF,IAAI,CAACG,GAAxB,EAA6B;MAC3B,MAAM,IAAIC,KAAJ,CACJ,0DADI,CAAN;IAGD;IAED,IAAIJ,IAAI,CAACE,IAAT,EAAe;MACbF,IAAI,CAACE,IAAL,GAAYb,GAAA,CAAAgB,OAAA,CAAGC,gBAAH,CAAoBN,IAAI,CAACE,IAAzB,CAAZ;IACD;IACD,OAAO,KAAKL,OAAL,CAAaU,GAAb,CAAiBC,QAAjB,CACLf,KAAK,CAACC,IADD,EAELM,IAFK,EAGL,UAAUS,GAAV,EAAeC,QAAf,EAAyBC,IAAzB,EAA+B;MAC7B,IAAIF,GAAJ,EAAS;QACP,OAAOR,QAAQ,CAACQ,GAAD,CAAf;MACD;MAED,IAAIG,QAAQ,GAAG,EAAf;MACA,IAAIF,QAAQ,IAAIA,QAAQ,CAACG,OAAzB,EAAkC;QAChCD,QAAQ,GAAGF,QAAQ,CAACG,OAAT,CAAiBD,QAA5B;MACD;MAED,OAAOX,QAAQ,CAAC,IAAD,EAAOW,QAAP,CAAf;IACD,CAdI,EAeL,IAfK,CAAP;EAiBD;EAEDE,MAAMA,CAACjB,OAAD,EAAUI,QAAV,EAAoB;IACxB,IAAI,OAAOJ,OAAP,IAAkB,UAAlB,IAAgC,CAACI,QAArC,EAA+C;MAC7CA,QAAQ,GAAGJ,OAAX;MACAA,OAAO,GAAG,EAAV;IACD;IAEDA,OAAO,GAAGA,OAAO,IAAI,EAArB;IAEA,OAAO,KAAKkB,YAAL,CAAkB,KAAlB,EAAyBtB,KAAK,CAACC,IAA/B,EAAqCG,OAArC,EAA8C,EAA9C,EAAkDI,QAAlD,CAAP;EACD,CAjDS,CAmDV;EACA;;EACAe,QAAQA,CAACC,EAAD,EAAKJ,OAAL,EAAcZ,QAAd,EAAwB;IAC9B,IAAI,CAACA,QAAD,IAAa,OAAOY,OAAP,IAAkB,UAAnC,EAA+C;MAC7CZ,QAAQ,GAAGY,OAAX;MACAA,OAAO,GAAG,EAAV;IACD;IAED,OAAO,KAAKE,YAAL,CACL,KADK,KAAAG,MAAA,CAEFzB,KAAK,CAACC,IAFJ,OAAAwB,MAAA,CAEYD,EAFZ,GAGL,EAHK,EAILJ,OAJK,EAKLZ,QALK,EAML,IANK,CAAP;EAQD;EAEDkB,MAAMA,CAACF,EAAD,EAAKhB,QAAL,EAAe;IACnB,OAAO,KAAKc,YAAL,CAAkB,QAAlB,KAAAG,MAAA,CAA+BzB,KAAK,CAACC,IAArC,OAAAwB,MAAA,CAA6CD,EAA7C,GAAmD,EAAnD,EAAuD,EAAvD,EAA2DhB,QAA3D,CAAP;EACD;EAEDmB,GAAGA,CAACH,EAAD,EAAKhB,QAAL,EAAe;IAChB,OAAO,KAAKc,YAAL,CACL,KADK,KAAAG,MAAA,CAEFzB,KAAK,CAACC,IAFJ,OAAAwB,MAAA,CAEYD,EAFZ,YAGL,EAHK,EAIL,EAJK,EAKLhB,QALK,CAAP;EAOD;EAEDoB,MAAMA,CAACJ,EAAD,EAAKjB,IAAL,EAAWC,QAAX,EAAqB;IACzB,OAAO,KAAKc,YAAL,CACL,KADK,KAAAG,MAAA,CAEFzB,KAAK,CAACC,IAFJ,OAAAwB,MAAA,CAEYD,EAFZ,YAGLjB,IAHK,EAIL,EAJK,EAKLC,QALK,CAAP;EAOD;EAEDc,YAAYA,CAACO,IAAD,EAAOC,IAAP,EAAa1B,OAAb,EAAsBgB,OAAtB,EAA+BZ,QAA/B,EAAyCuB,eAAzC,EAA0D;IACpEX,OAAO,GAAGY,MAAM,CAACC,MAAP,CACR;MACE,gBAAgB,kBADlB;MAEEC,aAAa,YAAAT,MAAA,CAAY,KAAKpB,KAAL,CAAW8B,WAAX,EAAZ;IAFf,CADQ,EAKRf,OALQ,CAAV;IAQA,IAAIgB,GAAG,GAAG,EAAV;IACA,IAAIP,IAAI,CAACQ,WAAL,OAAuB,KAA3B,EAAkC;MAChC,IAAIL,MAAM,CAACM,IAAP,CAAYlC,OAAZ,EAAqBmC,MAAzB,EAAiC;QAC/BT,IAAI,GAAGA,IAAI,GAAG,GAAP,GAAa/B,YAAA,CAAAa,OAAA,CAAY4B,SAAZ,CAAsBpC,OAAtB,CAApB;MACD;IACF,CAJD,MAIO;MACLgC,GAAG,CAAC,MAAD,CAAH,GAAcK,IAAI,CAACD,SAAL,CAAepC,OAAf,CAAd;IACD;IAEDgC,GAAG,CAAC,MAAD,CAAH,GAAcN,IAAd;IACAM,GAAG,CAAC,SAAD,CAAH,GAAiBhB,OAAjB;IAEA,OAAO,KAAKhB,OAAL,CAAaU,GAAb,CAAiB4B,OAAjB,CAAyBN,GAAzB,EAA8BP,IAA9B,EAAoCrB,QAApC,EAA8CuB,eAA9C,CAAP;EACD;AAnHS;eAsHG/B,K"},"metadata":{},"sourceType":"script","externalDependencies":[]}