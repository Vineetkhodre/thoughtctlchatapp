{"ast":null,"code":"var _jsxFileName = \"/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/App.js\";\n// import React, { useState, useEffect } from \"react\";\n// import User from \"./User\";\n// import Conversation from \"./Conversation\";\n// import nexmoClient from \"nexmo-client\";\n\n// const App = () => {\n//   const [userLoginInfo, setUserLoginInfo] = useState({});\n\n//   const login = () => {\n//     let nexmo = new nexmoClient();\n//     nexmo.createSession(userLoginInfo.token).then((app) => {\n//       setUserLoginInfo((prevState) => ({\n//         ...prevState,\n//         app: app,\n//       }));\n//     });\n//   };\n\n//   const getJWT = (username) => {\n//     fetch(\"/getJWT\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ name: username }),\n//     })\n//       .then((results) => results.json())\n//       .then((data) => {\n//         setUserLoginInfo((prevState) => ({\n//           ...prevState,\n//           token: data.jwt,\n//         }));\n//         login();\n//       });\n//   };\n\n//   const userUpdated = (user) => {\n//     if (user.username) {\n//       getJWT(user.username);\n//     }\n//   };\n\n//   useEffect(() => {\n//     // componentDidMount logic can go here\n//   }, []);\n\n//   return (\n//     <div className=\"nexmo\">\n//       <User onUpdate={userUpdated} />\n//       <Conversation app={userLoginInfo.app} loggedIn={!!userLoginInfo.token} />\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React from \"react\";\nimport User from \"./User\";\nimport Conversation from \"./Conversation\";\nimport nexmoClient from \"nexmo-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.login = this.login.bind(this);\n    this.getJWT = this.getJWT.bind(this);\n    this.userUpdated = this.userUpdated.bind(this);\n  }\n  login() {}\n  getJWT(username) {\n    fetch(\"/getJWT\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: username\n      })\n    }).then(results => results.json()).then(data => {\n      this.setState({\n        token: data.jwt\n      });\n      this.login();\n    });\n  }\n  userUpdated(user) {\n    if (user.username) {\n      this.getJWT(user.username);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nexmo\",\n      children: [/*#__PURE__*/_jsxDEV(User, {\n        onUpdate: this.userUpdated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Conversation, {\n        app: this.state.app,\n        loggedIn: !!this.state.token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","User","Conversation","nexmoClient","jsxDEV","_jsxDEV","App","Component","constructor","props","state","login","bind","getJWT","userUpdated","username","fetch","method","headers","body","JSON","stringify","name","then","results","json","data","setState","token","jwt","user","render","className","children","onUpdate","fileName","_jsxFileName","lineNumber","columnNumber","app","loggedIn"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import User from \"./User\";\n// import Conversation from \"./Conversation\";\n// import nexmoClient from \"nexmo-client\";\n\n// const App = () => {\n//   const [userLoginInfo, setUserLoginInfo] = useState({});\n\n//   const login = () => {\n//     let nexmo = new nexmoClient();\n//     nexmo.createSession(userLoginInfo.token).then((app) => {\n//       setUserLoginInfo((prevState) => ({\n//         ...prevState,\n//         app: app,\n//       }));\n//     });\n//   };\n\n//   const getJWT = (username) => {\n//     fetch(\"/getJWT\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ name: username }),\n//     })\n//       .then((results) => results.json())\n//       .then((data) => {\n//         setUserLoginInfo((prevState) => ({\n//           ...prevState,\n//           token: data.jwt,\n//         }));\n//         login();\n//       });\n//   };\n\n//   const userUpdated = (user) => {\n//     if (user.username) {\n//       getJWT(user.username);\n//     }\n//   };\n\n//   useEffect(() => {\n//     // componentDidMount logic can go here\n//   }, []);\n\n//   return (\n//     <div className=\"nexmo\">\n//       <User onUpdate={userUpdated} />\n//       <Conversation app={userLoginInfo.app} loggedIn={!!userLoginInfo.token} />\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React from \"react\";\nimport User from \"./User\";\nimport Conversation from \"./Conversation\";\n\nimport nexmoClient from \"nexmo-client\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.login = this.login.bind(this);\n    this.getJWT = this.getJWT.bind(this);\n    this.userUpdated = this.userUpdated.bind(this);\n  }\n\n  login() {}\n  getJWT(username) {\n    fetch(\"/getJWT\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: username }),\n    })\n      .then((results) => results.json())\n      .then((data) => {\n        this.setState({\n          token: data.jwt,\n        });\n        this.login();\n      });\n  }\n\n  userUpdated(user) {\n    if (user.username) {\n      this.getJWT(user.username);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"nexmo\">\n        <User onUpdate={this.userUpdated} />\n        <Conversation app={this.state.app} loggedIn={!!this.state.token} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,SAASN,KAAK,CAACO,SAAS,CAAC;EAChCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IAEf,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACD,IAAI,CAAC,IAAI,CAAC;IACpC,IAAI,CAACE,WAAW,GAAG,IAAI,CAACA,WAAW,CAACF,IAAI,CAAC,IAAI,CAAC;EAChD;EAEAD,KAAKA,CAAA,EAAG,CAAC;EACTE,MAAMA,CAACE,QAAQ,EAAE;IACfC,KAAK,CAAC,SAAS,EAAE;MACfC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAEP;MAAS,CAAC;IACzC,CAAC,CAAC,CACCQ,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAI,CAACC,QAAQ,CAAC;QACZC,KAAK,EAAEF,IAAI,CAACG;MACd,CAAC,CAAC;MACF,IAAI,CAAClB,KAAK,CAAC,CAAC;IACd,CAAC,CAAC;EACN;EAEAG,WAAWA,CAACgB,IAAI,EAAE;IAChB,IAAIA,IAAI,CAACf,QAAQ,EAAE;MACjB,IAAI,CAACF,MAAM,CAACiB,IAAI,CAACf,QAAQ,CAAC;IAC5B;EACF;EAEAgB,MAAMA,CAAA,EAAG;IACP,oBACE1B,OAAA;MAAK2B,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpB5B,OAAA,CAACJ,IAAI;QAACiC,QAAQ,EAAE,IAAI,CAACpB;MAAY;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpCjC,OAAA,CAACH,YAAY;QAACqC,GAAG,EAAE,IAAI,CAAC7B,KAAK,CAAC6B,GAAI;QAACC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC9B,KAAK,CAACkB;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAEV;AACF;AAEA,eAAehC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}