{"ast":null,"code":"const {\n  iterateReports\n} = require(\"./utils\");\nconst {\n  parsers\n} = require(\"./parsers/new-api\");\nconst calculateMos = require(\"./calculate-mos\");\nfunction parse(reports) {\n  const result = {};\n  iterateReports(reports, report => {\n    if (report.type in parsers) {\n      const mappedReport = parsers[report.type](report);\n      Object.assign(result, mappedReport);\n    }\n  });\n  result.networkMos = parseFloat(calculateMos(reports));\n  return result;\n}\nmodule.exports = parse;","map":{"version":3,"names":["iterateReports","require","parsers","calculateMos","parse","reports","result","report","type","mappedReport","Object","assign","networkMos","parseFloat","module","exports"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/node_modules/rtc-stats-adapter/index.js"],"sourcesContent":["const { iterateReports } = require(\"./utils\");\nconst { parsers } = require(\"./parsers/new-api\");\nconst calculateMos = require(\"./calculate-mos\");\n\nfunction parse(reports) {\n  const result = {};\n\n  iterateReports(reports, (report) => {\n    if (report.type in parsers) {\n      const mappedReport = parsers[report.type](report);\n\n      Object.assign(result, mappedReport);\n    }\n  });\n\n  result.networkMos = parseFloat(calculateMos(reports));\n\n  return result;\n}\n\nmodule.exports = parse;\n"],"mappings":"AAAA,MAAM;EAAEA;AAAe,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC7C,MAAM;EAAEC;AAAQ,CAAC,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAChD,MAAME,YAAY,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAE/C,SAASG,KAAKA,CAACC,OAAO,EAAE;EACtB,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjBN,cAAc,CAACK,OAAO,EAAGE,MAAM,IAAK;IAClC,IAAIA,MAAM,CAACC,IAAI,IAAIN,OAAO,EAAE;MAC1B,MAAMO,YAAY,GAAGP,OAAO,CAACK,MAAM,CAACC,IAAI,CAAC,CAACD,MAAM,CAAC;MAEjDG,MAAM,CAACC,MAAM,CAACL,MAAM,EAAEG,YAAY,CAAC;IACrC;EACF,CAAC,CAAC;EAEFH,MAAM,CAACM,UAAU,GAAGC,UAAU,CAACV,YAAY,CAACE,OAAO,CAAC,CAAC;EAErD,OAAOC,MAAM;AACf;AAEAQ,MAAM,CAACC,OAAO,GAAGX,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}