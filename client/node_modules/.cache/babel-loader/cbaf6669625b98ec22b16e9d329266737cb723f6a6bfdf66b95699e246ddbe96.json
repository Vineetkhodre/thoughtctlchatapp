{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _index = require(\"./index\");\nvar _index2 = _interopRequireDefault(_index);\nvar _fs = require(\"fs\");\nvar _fs2 = _interopRequireDefault(_fs);\nvar _querystring = require(\"querystring\");\nvar _querystring2 = _interopRequireDefault(_querystring);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar Media = function () {\n  _createClass(Media, null, [{\n    key: \"PATH\",\n    get: function get() {\n      return \"/v3/media\";\n    }\n  }]);\n  function Media(credentials, options) {\n    _classCallCheck(this, Media);\n    this.creds = credentials;\n    this.options = options;\n\n    // Used to facilitate testing of the call to the underlying object\n    this._nexmo = this.options.nexmoOverride || _index2.default;\n    this._nexmo.initialize(this.creds.apiKey, this.creds.apiSecret, this.options);\n  }\n  _createClass(Media, [{\n    key: \"upload\",\n    value: function upload(opts, callback) {\n      opts = opts || {};\n      if (!opts.file && !opts.url) {\n        throw new Error(\"You must provide either 'file' or 'url' to upload a file\");\n      }\n      if (opts.file) {\n        opts.file = _fs2.default.createReadStream(opts.file);\n      }\n      return this.options.api.postFile(Media.PATH, opts, function (err, response, body) {\n        if (err) {\n          return callback(err);\n        }\n        var location = \"\";\n        if (response && response.headers) {\n          location = response.headers.location;\n        }\n        return callback(null, location);\n      }, true);\n    }\n  }, {\n    key: \"search\",\n    value: function search(options, callback) {\n      if (typeof options == \"function\" && !callback) {\n        callback = options;\n        options = {};\n      }\n      options = options || {};\n      return this._makeRequest(\"GET\", Media.PATH, options, {}, callback);\n    }\n\n    // If If-Modified-Since header is provided and the data hasn't changed, the\n    // user will receive an empty body in the callback, NOT an error\n  }, {\n    key: \"download\",\n    value: function download(id, headers, callback) {\n      if (!callback && typeof headers == \"function\") {\n        callback = headers;\n        headers = {};\n      }\n      return this._makeRequest(\"GET\", Media.PATH + \"/\" + id, {}, headers, callback, true);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id, callback) {\n      return this._makeRequest(\"DELETE\", Media.PATH + \"/\" + id, {}, {}, callback);\n    }\n  }, {\n    key: \"get\",\n    value: function get(id, callback) {\n      return this._makeRequest(\"GET\", Media.PATH + \"/\" + id + \"/info\", {}, {}, callback);\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, opts, callback) {\n      return this._makeRequest(\"PUT\", Media.PATH + \"/\" + id + \"/info\", opts, {}, callback);\n    }\n  }, {\n    key: \"_makeRequest\",\n    value: function _makeRequest(verb, path, options, headers, callback, skipJsonParsing) {\n      headers = Object.assign({\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.creds.generateJwt()\n      }, headers);\n      var req = {};\n      if (verb.toUpperCase() === \"GET\") {\n        if (Object.keys(options).length) {\n          path = path + \"?\" + _querystring2.default.stringify(options);\n        }\n      } else {\n        req[\"body\"] = JSON.stringify(options);\n      }\n      req[\"path\"] = path;\n      req[\"headers\"] = headers;\n      return this.options.api.request(req, verb, callback, skipJsonParsing);\n    }\n  }]);\n  return Media;\n}();\nexports.default = Media;\nmodule.exports = exports[\"default\"];","map":{"version":3,"names":["_index","require","_fs","_querystring","Media","credentials","options","_classCallCheck","creds","_nexmo","nexmoOverride","_index2","default","initialize","apiKey","apiSecret","opts","callback","file","url","Error","_fs2","createReadStream","api","postFile","PATH","err","response","body","location","headers","_makeRequest","id","verb","path","skipJsonParsing","Object","assign","Authorization","generateJwt","req","toUpperCase","keys","length","_querystring2","stringify","JSON","request"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/nexmo/src/Media.js"],"sourcesContent":["\"use strict\";\n\nimport nexmo from \"./index\";\nimport fs from \"fs\";\nimport querystring from \"querystring\";\n\nclass Media {\n  static get PATH() {\n    return \"/v3/media\";\n  }\n\n  constructor(credentials, options) {\n    this.creds = credentials;\n    this.options = options;\n\n    // Used to facilitate testing of the call to the underlying object\n    this._nexmo = this.options.nexmoOverride || nexmo;\n\n    this._nexmo.initialize(\n      this.creds.apiKey,\n      this.creds.apiSecret,\n      this.options\n    );\n  }\n\n  upload(opts, callback) {\n    opts = opts || {};\n    if (!opts.file && !opts.url) {\n      throw new Error(\n        \"You must provide either 'file' or 'url' to upload a file\"\n      );\n    }\n\n    if (opts.file) {\n      opts.file = fs.createReadStream(opts.file);\n    }\n    return this.options.api.postFile(\n      Media.PATH,\n      opts,\n      function(err, response, body) {\n        if (err) {\n          return callback(err);\n        }\n\n        let location = \"\";\n        if (response && response.headers) {\n          location = response.headers.location;\n        }\n\n        return callback(null, location);\n      },\n      true\n    );\n  }\n\n  search(options, callback) {\n    if (typeof options == \"function\" && !callback) {\n      callback = options;\n      options = {};\n    }\n\n    options = options || {};\n\n    return this._makeRequest(\"GET\", Media.PATH, options, {}, callback);\n  }\n\n  // If If-Modified-Since header is provided and the data hasn't changed, the\n  // user will receive an empty body in the callback, NOT an error\n  download(id, headers, callback) {\n    if (!callback && typeof headers == \"function\") {\n      callback = headers;\n      headers = {};\n    }\n\n    return this._makeRequest(\n      \"GET\",\n      `${Media.PATH}/${id}`,\n      {},\n      headers,\n      callback,\n      true\n    );\n  }\n\n  delete(id, callback) {\n    return this._makeRequest(\"DELETE\", `${Media.PATH}/${id}`, {}, {}, callback);\n  }\n\n  get(id, callback) {\n    return this._makeRequest(\n      \"GET\",\n      `${Media.PATH}/${id}/info`,\n      {},\n      {},\n      callback\n    );\n  }\n\n  update(id, opts, callback) {\n    return this._makeRequest(\n      \"PUT\",\n      `${Media.PATH}/${id}/info`,\n      opts,\n      {},\n      callback\n    );\n  }\n\n  _makeRequest(verb, path, options, headers, callback, skipJsonParsing) {\n    headers = Object.assign(\n      {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${this.creds.generateJwt()}`\n      },\n      headers\n    );\n\n    let req = {};\n    if (verb.toUpperCase() === \"GET\") {\n      if (Object.keys(options).length) {\n        path = path + \"?\" + querystring.stringify(options);\n      }\n    } else {\n      req[\"body\"] = JSON.stringify(options);\n    }\n\n    req[\"path\"] = path;\n    req[\"headers\"] = headers;\n\n    return this.options.api.request(req, verb, callback, skipJsonParsing);\n  }\n}\n\nexport default Media;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}