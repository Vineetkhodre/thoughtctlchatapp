{"ast":null,"code":"'use strict';\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Nexmo Client SDK\n *  Message NXMEvent Object Model\n *\n * Copyright (c) Nexmo Inc.\n*/\nconst loglevel_1 = require(\"loglevel\");\nconst utils_1 = __importDefault(require(\"../utils\"));\nconst nxmEvent_1 = __importDefault(require(\"./nxmEvent\"));\nconst nexmoClientError_1 = require(\"../nexmoClientError\");\n/**\n * A message event\n *\n * @class MessageEvent\n * @extends NXMEvent\n*/\nclass MessageEvent extends nxmEvent_1.default {\n  constructor(conversation, params) {\n    super(conversation, params);\n    this.log = loglevel_1.getLogger(this.constructor.name);\n    this.type = 'message';\n    this.conversation = conversation;\n    this.state = {\n      seen_by: {},\n      delivered_to: {},\n      submitted_to: {},\n      rejected_by: {},\n      undeliverable_to: {}\n    };\n    if (params && params.body && params.body.timestamp) {\n      this.timestamp = params.body.timestamp;\n    }\n    Object.assign(this, params);\n  }\n  /**\n   * Set the messageEvent status to 'seen'\n   * @returns {Promise}\n   * @example <caption>Set the messageEvent status to 'seen'</caption>\n   *  messageEvent.seen().then(() => {\n   *    console.log(\"message event status set to seen\");\n   *  }).catch((error)=>{\n   *\t  console.log(\"error setting message event status to seen \", error);\n   *  });\n   */\n  seen() {\n    return super.seen();\n  }\n  /**\n   * Set the messageEvent status to 'delivered'.\n   * handled by the SDK\n   * @returns {Promise}\n   * @example <caption>Set the messageEvent status to 'delivered'</caption>\n   *  messageEvent.delivered().then(() => {\n   *    console.log(\"message event status set to delivered\");\n   *  }).catch((error)=>{\n   *\t  console.log(\"error setting message event status to delivered  \", error);\n   *  });\n   */\n  delivered() {\n    return super.delivered();\n  }\n  /**\n   * Delete the messageEvent\n   * @returns {Promise}\n   * @example <caption>Delete the messageEvent</caption>\n   *  messageEvent.del().then(() => {\n   *    console.log(\"message event deleted\");\n   *  }).catch((error)=>{\n   *\t  console.log(\"error deleting message event  \", error);\n   *  });\n   */\n  del() {\n    return super.del();\n  }\n  /**\n   * Download an Image from Media service\n   * @returns {string} the dataUrl \"data:image/jpeg;base64...\"\n   * @example <caption>Downloading an image from the messageEvent</caption>\n   *  messageEvent.fetchImage().then((imageData) => {\n   *    const img = new Image();\n   *    img.src = imageData;\n   *    document.body.appendChild(img);\n   *  }).catch((error) => {\n   *    console.log(\"error getting image \", error);\n   *  });\n  */\n  async fetchImage() {\n    if (this.body.message_type !== \"image\") {\n      throw new nexmoClientError_1.NexmoClientError('error:message-event:invalid');\n    }\n    try {\n      return utils_1.default._fetchImage(this.body.image.url, this.conversation.application.session.config.token);\n    } catch (error) {\n      this.log.error(error);\n      throw error;\n    }\n  }\n}\nexports.default = MessageEvent;\nmodule.exports = MessageEvent;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","loglevel_1","require","utils_1","nxmEvent_1","nexmoClientError_1","MessageEvent","default","constructor","conversation","params","log","getLogger","name","type","state","seen_by","delivered_to","submitted_to","rejected_by","undeliverable_to","body","timestamp","assign","seen","delivered","del","fetchImage","message_type","NexmoClientError","_fetchImage","image","url","application","session","config","token","error","module"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/node_modules/nexmo-client/dist/events/message_event.js"],"sourcesContent":["'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Nexmo Client SDK\n *  Message NXMEvent Object Model\n *\n * Copyright (c) Nexmo Inc.\n*/\nconst loglevel_1 = require(\"loglevel\");\nconst utils_1 = __importDefault(require(\"../utils\"));\nconst nxmEvent_1 = __importDefault(require(\"./nxmEvent\"));\nconst nexmoClientError_1 = require(\"../nexmoClientError\");\n/**\n * A message event\n *\n * @class MessageEvent\n * @extends NXMEvent\n*/\nclass MessageEvent extends nxmEvent_1.default {\n    constructor(conversation, params) {\n        super(conversation, params);\n        this.log = loglevel_1.getLogger(this.constructor.name);\n        this.type = 'message';\n        this.conversation = conversation;\n        this.state = {\n            seen_by: {},\n            delivered_to: {},\n            submitted_to: {},\n            rejected_by: {},\n            undeliverable_to: {}\n        };\n        if (params && params.body && params.body.timestamp) {\n            this.timestamp = params.body.timestamp;\n        }\n        Object.assign(this, params);\n    }\n    /**\n     * Set the messageEvent status to 'seen'\n     * @returns {Promise}\n     * @example <caption>Set the messageEvent status to 'seen'</caption>\n     *  messageEvent.seen().then(() => {\n     *    console.log(\"message event status set to seen\");\n     *  }).catch((error)=>{\n     *\t  console.log(\"error setting message event status to seen \", error);\n     *  });\n     */\n    seen() {\n        return super.seen();\n    }\n    /**\n     * Set the messageEvent status to 'delivered'.\n     * handled by the SDK\n     * @returns {Promise}\n     * @example <caption>Set the messageEvent status to 'delivered'</caption>\n     *  messageEvent.delivered().then(() => {\n     *    console.log(\"message event status set to delivered\");\n     *  }).catch((error)=>{\n     *\t  console.log(\"error setting message event status to delivered  \", error);\n     *  });\n     */\n    delivered() {\n        return super.delivered();\n    }\n    /**\n     * Delete the messageEvent\n     * @returns {Promise}\n     * @example <caption>Delete the messageEvent</caption>\n     *  messageEvent.del().then(() => {\n     *    console.log(\"message event deleted\");\n     *  }).catch((error)=>{\n     *\t  console.log(\"error deleting message event  \", error);\n     *  });\n     */\n    del() {\n        return super.del();\n    }\n    /**\n     * Download an Image from Media service\n     * @returns {string} the dataUrl \"data:image/jpeg;base64...\"\n     * @example <caption>Downloading an image from the messageEvent</caption>\n     *  messageEvent.fetchImage().then((imageData) => {\n     *    const img = new Image();\n     *    img.src = imageData;\n     *    document.body.appendChild(img);\n     *  }).catch((error) => {\n     *    console.log(\"error getting image \", error);\n     *  });\n    */\n    async fetchImage() {\n        if (this.body.message_type !== \"image\") {\n            throw new nexmoClientError_1.NexmoClientError('error:message-event:invalid');\n        }\n        try {\n            return utils_1.default._fetchImage(this.body.image.url, this.conversation.application.session.config.token);\n        }\n        catch (error) {\n            this.log.error(error);\n            throw error;\n        }\n    }\n}\nexports.default = MessageEvent;\nmodule.exports = MessageEvent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}