{"ast":null,"code":"var _jsxFileName = \"/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/components/Chatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n//import styles from \"./Chatroom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatroom = props => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [conversation, setConversation] = useState(null);\n  const [input, setInput] = useState(null);\n  const joinConversation = evt => {\n    let select = evt.target;\n    props.app.getConversation(select.value).then(conv => {\n      conv.on(\"text\", onMessage);\n      conv.join();\n      setConversation(conv);\n    });\n  };\n  const onMessage = (sender, message) => {\n    let newMessages = messages.concat({\n      key: message.id,\n      sender: sender.display_name,\n      text: message.body.text\n    });\n    setMessages(newMessages);\n  };\n  const sendInput = evt => {\n    conversation.sendText(input).then(() => {\n      setInput(null);\n    });\n    evt.target.previousSibling.value = \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation\",\n    children: conversation && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), msg.text]\n        }, msg.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          onBlur: evt => setInput(evt.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: evt => sendInput(evt),\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatroom, \"jeBd6Q2Sm+FCq2/Z/5YOtrqy+yU=\");\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatroom","props","_s","messages","setMessages","conversation","setConversation","input","setInput","joinConversation","evt","select","target","app","getConversation","value","then","conv","on","onMessage","join","sender","message","newMessages","concat","key","id","display_name","text","body","sendInput","sendText","previousSibling","className","children","map","msg","fileName","_jsxFileName","lineNumber","columnNumber","onBlur","onClick","_c","$RefreshReg$"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/components/Chatroom.js"],"sourcesContent":["import React, { useState } from \"react\";\n//import styles from \"./Chatroom.css\";\n\nconst Chatroom = (props) => {\n  const [messages, setMessages] = useState([]);\n  const [conversation, setConversation] = useState(null);\n  const [input, setInput] = useState(null);\n\n  const joinConversation = (evt) => {\n    let select = evt.target;\n    props.app.getConversation(select.value).then((conv) => {\n      conv.on(\"text\", onMessage);\n      conv.join();\n      setConversation(conv);\n    });\n  };\n\n  const onMessage = (sender, message) => {\n    let newMessages = messages.concat({\n      key: message.id,\n      sender: sender.display_name,\n      text: message.body.text,\n    });\n    setMessages(newMessages);\n  };\n\n  const sendInput = (evt) => {\n    conversation.sendText(input).then(() => {\n      setInput(null);\n    });\n    evt.target.previousSibling.value = \"\";\n  };\n\n  return (\n    <div className=\"conversation\">\n      {conversation && (\n        <>\n          <div className=\"messages\">\n            {messages.map((msg) => (\n              <p key={msg.key} className=\"message\">\n                <b>{msg.sender}:</b>\n                {msg.text}\n              </p>\n            ))}\n          </div>\n          <div className=\"input\">\n            <textarea onBlur={(evt) => setInput(evt.target.value)} />\n            <button onClick={(evt) => sendInput(evt)}>Chat</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Chatroom;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}