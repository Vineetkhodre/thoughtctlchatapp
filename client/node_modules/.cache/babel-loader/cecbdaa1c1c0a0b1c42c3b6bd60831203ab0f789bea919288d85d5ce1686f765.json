{"ast":null,"code":"'use strict';\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Nexmo Client SDK\n *\n * Copyright (c) Nexmo Inc.\n*/\nconst page_1 = __importDefault(require(\"./page\"));\nconst user_session_1 = __importDefault(require(\"../user_session\"));\n/**\n * A UserSessions Page\n *\n * @class UserSessionsPage\n * @param {Map} items map of UserSessions fetched in the paginated query\n * @extends Page\n*/\nclass UserSessionsPage extends page_1.default {\n  constructor(params) {\n    super(params);\n    this.items = new Map();\n    // Iterate through the UserSessions\n    params.items.forEach(userSession => {\n      this.items.set(userSession.id, new user_session_1.default(this.application, userSession));\n    });\n  }\n  /**\n   * Fetch the previous page if exists\n   * @returns {Promise<Page>}\n   * @example <caption>Fetch the previous page if exists</caption>\n   *  currentUserSessionsPage.getPrev().then((prevUserSessionsPage) => {\n   *    console.log(\"previous user sessions page \", prevUserSessionsPage);\n   *  }).catch((error) => {\n   *    console.error(\"error getting previous user sessions page \", error);\n   *  });\n  */\n  getPrev() {\n    if (!this.hasPrev()) return this._getError();\n    return this.application.getUserSessions(this._getConfig(this.cursor.prev));\n  }\n  /**\n   * Fetch the next page if exists\n   * @returns {Promise<Page>}\n   * @example <caption>Fetch the next page if exists</caption>\n   *  currentUserSessionsPage.getNext().then((nextUserSessionsPage) => {\n   *    console.log(\"next user sessions page \", nextUserSessionsPage);\n   *  }).catch((error) => {\n   *    console.error(\"error getting next user sessions page \", error);\n   *  });\n  */\n  getNext() {\n    if (!this.hasNext()) return this._getError();\n    return this.application.getUserSessions(this._getConfig(this.cursor.next));\n  }\n}\nexports.default = UserSessionsPage;\nmodule.exports = UserSessionsPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","page_1","require","user_session_1","UserSessionsPage","default","constructor","params","items","Map","forEach","userSession","set","id","application","getPrev","hasPrev","_getError","getUserSessions","_getConfig","cursor","prev","getNext","hasNext","next","module"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/node_modules/nexmo-client/dist/pages/user_sessions_page.js"],"sourcesContent":["'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Nexmo Client SDK\n *\n * Copyright (c) Nexmo Inc.\n*/\nconst page_1 = __importDefault(require(\"./page\"));\nconst user_session_1 = __importDefault(require(\"../user_session\"));\n/**\n * A UserSessions Page\n *\n * @class UserSessionsPage\n * @param {Map} items map of UserSessions fetched in the paginated query\n * @extends Page\n*/\nclass UserSessionsPage extends page_1.default {\n    constructor(params) {\n        super(params);\n        this.items = new Map();\n        // Iterate through the UserSessions\n        params.items.forEach((userSession) => {\n            this.items.set(userSession.id, new user_session_1.default(this.application, userSession));\n        });\n    }\n    /**\n     * Fetch the previous page if exists\n     * @returns {Promise<Page>}\n     * @example <caption>Fetch the previous page if exists</caption>\n     *  currentUserSessionsPage.getPrev().then((prevUserSessionsPage) => {\n     *    console.log(\"previous user sessions page \", prevUserSessionsPage);\n     *  }).catch((error) => {\n     *    console.error(\"error getting previous user sessions page \", error);\n     *  });\n    */\n    getPrev() {\n        if (!this.hasPrev())\n            return this._getError();\n        return this.application.getUserSessions(this._getConfig(this.cursor.prev));\n    }\n    /**\n     * Fetch the next page if exists\n     * @returns {Promise<Page>}\n     * @example <caption>Fetch the next page if exists</caption>\n     *  currentUserSessionsPage.getNext().then((nextUserSessionsPage) => {\n     *    console.log(\"next user sessions page \", nextUserSessionsPage);\n     *  }).catch((error) => {\n     *    console.error(\"error getting next user sessions page \", error);\n     *  });\n    */\n    getNext() {\n        if (!this.hasNext())\n            return this._getError();\n        return this.application.getUserSessions(this._getConfig(this.cursor.next));\n    }\n}\nexports.default = UserSessionsPage;\nmodule.exports = UserSessionsPage;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGP,eAAe,CAACQ,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjD,MAAMC,cAAc,GAAGT,eAAe,CAACQ,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,gBAAgB,SAASH,MAAM,CAACI,OAAO,CAAC;EAC1CC,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,CAAC;IACb,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;IACtB;IACAF,MAAM,CAACC,KAAK,CAACE,OAAO,CAAEC,WAAW,IAAK;MAClC,IAAI,CAACH,KAAK,CAACI,GAAG,CAACD,WAAW,CAACE,EAAE,EAAE,IAAIV,cAAc,CAACE,OAAO,CAAC,IAAI,CAACS,WAAW,EAAEH,WAAW,CAAC,CAAC;IAC7F,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACII,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC,CAAC,EACf,OAAO,IAAI,CAACC,SAAS,CAAC,CAAC;IAC3B,OAAO,IAAI,CAACH,WAAW,CAACI,eAAe,CAAC,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,CAAC;EAC9E;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC,CAAC,EACf,OAAO,IAAI,CAACN,SAAS,CAAC,CAAC;IAC3B,OAAO,IAAI,CAACH,WAAW,CAACI,eAAe,CAAC,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,MAAM,CAACI,IAAI,CAAC,CAAC;EAC9E;AACJ;AACAzB,OAAO,CAACM,OAAO,GAAGD,gBAAgB;AAClCqB,MAAM,CAAC1B,OAAO,GAAGK,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}