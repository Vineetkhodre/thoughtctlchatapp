{"ast":null,"code":"var _jsxFileName = \"/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/components/Chatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatroom() {\n  _s();\n  const [users, setUsers] = useState();\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await fetch(\"/getUsers\", {\n        method: \"GET\"\n      }).then(results => results.json()).then(data => {\n        setUsers(data.users);\n        console.log(\"users : \" + JSON.stringify(data.users._embedded.data.users));\n      });\n    } catch (error) {\n      console.error(\"Error in :\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftcontainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightcontainer\",\n      children: \"ccghcgcghc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatroom, \"LQkddvx2HtKGflMjzZE1OVCsOUU=\");\n_c = Chatroom;\nconst Card = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"card_info\",\n      children: props.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Card;\nexport default Chatroom;\n\n// import React, { useState } from \"react\";\n// //import styles from \"./Chatroom.css\";\n\n// const Chatroom = (props) => {\n//   const [messages, setMessages] = useState([]);\n//   const [conversation, setConversation] = useState(null);\n//   const [input, setInput] = useState(null);\n\n//   const joinConversation = (evt) => {\n//     let select = evt.target;\n//     props.app.getConversation(select.value).then((conv) => {\n//       conv.on(\"text\", onMessage);\n//       conv.join();\n//       setConversation(conv);\n//     });\n//   };\n\n//   const onMessage = (sender, message) => {\n//     let newMessages = messages.concat({\n//       key: message.id,\n//       sender: sender.display_name,\n//       text: message.body.text,\n//     });\n//     setMessages(newMessages);\n//   };\n\n//   const sendInput = (evt) => {\n//     conversation.sendText(input).then(() => {\n//       setInput(null);\n//     });\n//     evt.target.previousSibling.value = \"\";\n//   };\n\n//   return (\n//     <div className=\"conversation\">\n//       {conversation && (\n//         <>\n//           <div className=\"messages\">\n//             {messages.map((msg) => (\n//               <p key={msg.key} className=\"message\">\n//                 <b>{msg.sender}:</b>\n//                 {msg.text}\n//               </p>\n//             ))}\n//           </div>\n//           <div className=\"input\">\n//             <textarea onBlur={(evt) => setInput(evt.target.value)} />\n//             <button onClick={(evt) => sendInput(evt)}>Chat</button>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Chatroom;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chatroom\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Chatroom","_s","users","setUsers","getUsers","response","fetch","method","then","results","json","data","console","log","JSON","stringify","_embedded","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Card","props","username","_c2","$RefreshReg$"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/components/Chatroom.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Chatroom() {\n  const [users, setUsers] = useState();\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const getUsers = async () => {\n    try {\n      const response = await fetch(\"/getUsers\", {\n        method: \"GET\",\n      })\n        .then((results) => results.json())\n        .then((data) => {\n          setUsers(data.users);\n          console.log(\n            \"users : \" + JSON.stringify(data.users._embedded.data.users)\n          );\n        });\n    } catch (error) {\n      console.error(\"Error in :\", error);\n    }\n  };\n  return (\n    <div className=\"chatroom\">\n      <div className=\"leftcontainer\"></div>\n      <div className=\"rightcontainer\">ccghcgcghc</div>\n    </div>\n  );\n}\n\nconst Card = (props) => {\n  return (\n    <div className=\"Card\">\n      <h3 className=\"card_info\">{props.username}</h3>\n    </div>\n  );\n};\n\nexport default Chatroom;\n\n// import React, { useState } from \"react\";\n// //import styles from \"./Chatroom.css\";\n\n// const Chatroom = (props) => {\n//   const [messages, setMessages] = useState([]);\n//   const [conversation, setConversation] = useState(null);\n//   const [input, setInput] = useState(null);\n\n//   const joinConversation = (evt) => {\n//     let select = evt.target;\n//     props.app.getConversation(select.value).then((conv) => {\n//       conv.on(\"text\", onMessage);\n//       conv.join();\n//       setConversation(conv);\n//     });\n//   };\n\n//   const onMessage = (sender, message) => {\n//     let newMessages = messages.concat({\n//       key: message.id,\n//       sender: sender.display_name,\n//       text: message.body.text,\n//     });\n//     setMessages(newMessages);\n//   };\n\n//   const sendInput = (evt) => {\n//     conversation.sendText(input).then(() => {\n//       setInput(null);\n//     });\n//     evt.target.previousSibling.value = \"\";\n//   };\n\n//   return (\n//     <div className=\"conversation\">\n//       {conversation && (\n//         <>\n//           <div className=\"messages\">\n//             {messages.map((msg) => (\n//               <p key={msg.key} className=\"message\">\n//                 <b>{msg.sender}:</b>\n//                 {msg.text}\n//               </p>\n//             ))}\n//           </div>\n//           <div className=\"input\">\n//             <textarea onBlur={(evt) => setInput(evt.target.value)} />\n//             <button onClick={(evt) => sendInput(evt)}>Chat</button>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Chatroom;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC;EACpCD,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EACN,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;QACxCC,MAAM,EAAE;MACV,CAAC,CAAC,CACCC,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAEG,IAAI,IAAK;QACdR,QAAQ,CAACQ,IAAI,CAACT,KAAK,CAAC;QACpBU,OAAO,CAACC,GAAG,CACT,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAACT,KAAK,CAACc,SAAS,CAACL,IAAI,CAACT,KAAK,CAC7D,CAAC;MACH,CAAC,CAAC;IACN,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC;EACF,CAAC;EACD,oBACElB,OAAA;IAAKmB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBpB,OAAA;MAAKmB,SAAS,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrCxB,OAAA;MAAKmB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAACtB,EAAA,CA3BQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA6BjB,MAAMyB,IAAI,GAAIC,KAAK,IAAK;EACtB,oBACE3B,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBpB,OAAA;MAAImB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEO,KAAK,CAACC;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACK,GAAA,GANIH,IAAI;AAQV,eAAezB,QAAQ;;AAEvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAwB,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}