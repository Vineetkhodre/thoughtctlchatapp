{"ast":null,"code":"var _jsxFileName = \"/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/User.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Vonage } from \"@vonage/server-sdk\";\nimport { tokenGenerate } from \"@vonage/jwt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = ({\n  onUpdate\n}) => {\n  _s();\n  const [user, setUser] = useState({});\n  const vonage = new Vonage({\n    applicationId: process.env.API_APPLICATION_ID,\n    privateKey: process.env.PRIVATE_KEY\n  });\n  async function createUser(username) {\n    try {\n      const userResponse = await vonage.users.createUser({\n        name: username,\n        displayName: username\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  // const createUser = () => {\n  //   fetch(\"/createUser\", {\n  //     method: \"POST\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify({ name: user.username }),\n  //   })\n  //     .then((results) => results.json())\n  //     .then((data) => {\n  //       setUser({ userId: data.id });\n  //       onUpdate(user);\n  //     });\n  // };\n\n  const setUsername = evt => {\n    setUser({\n      username: evt.target.value\n    });\n  };\n  if (user.userId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userinfo userconnected\",\n      children: [\"Connected as \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"username\",\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userinfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: evt => setUsername(evt)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createUser,\n        children: \"Create user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(User, \"cCRtNmj6gRKVA5wOmLEmdl385z4=\");\n_c = User;\nexport default User;\n\n// import React from \"react\";\n\n// class User extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n\n//     this.createUser = this.createUser.bind(this);\n//     this.setUsername = this.setUsername.bind(this);\n//   }\n\n//   createUser() {\n//     fetch(\"/createUser\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ name: this.state.username }),\n//     })\n//       .then((results) => results.json())\n//       .then((data) => {\n//         this.setState(\n//           {\n//             userId: data.id,\n//           },\n//           () => this.props.onUpdate(this.state)\n//         );\n//       });\n//   }\n\n//   setUsername(evt) {\n//     this.setState({\n//       username: evt.target.value,\n//     });\n//   }\n\n//   render() {\n//     if (this.state.userId) {\n//       return (\n//         <div className=\"userinfo userconnected\">\n//           Connected as <span className=\"username\">{this.state.username}</span>\n//         </div>\n//       );\n//     } else {\n//       return (\n//         <div className=\"userinfo\">\n//           <input type=\"text\" onChange={(evt) => this.setUsername(evt)} />\n//           <button onClick={this.createUser}>Create user</button>\n//         </div>\n//       );\n//     }\n//   }\n// }\n\n// export default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","Vonage","tokenGenerate","jsxDEV","_jsxDEV","User","onUpdate","_s","user","setUser","vonage","applicationId","process","env","API_APPLICATION_ID","privateKey","PRIVATE_KEY","createUser","username","userResponse","users","name","displayName","e","console","log","setUsername","evt","target","value","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/User.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Vonage } from \"@vonage/server-sdk\";\nimport { tokenGenerate } from \"@vonage/jwt\";\n\nconst User = ({ onUpdate }) => {\n  const [user, setUser] = useState({});\n  const vonage = new Vonage({\n    applicationId: process.env.API_APPLICATION_ID,\n    privateKey: process.env.PRIVATE_KEY,\n  });\n\n  async function createUser(username) {\n    try {\n      const userResponse = await vonage.users.createUser({\n        name: username,\n        displayName: username,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  // const createUser = () => {\n  //   fetch(\"/createUser\", {\n  //     method: \"POST\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify({ name: user.username }),\n  //   })\n  //     .then((results) => results.json())\n  //     .then((data) => {\n  //       setUser({ userId: data.id });\n  //       onUpdate(user);\n  //     });\n  // };\n\n  const setUsername = (evt) => {\n    setUser({\n      username: evt.target.value,\n    });\n  };\n\n  if (user.userId) {\n    return (\n      <div className=\"userinfo userconnected\">\n        Connected as <span className=\"username\">{user.username}</span>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"userinfo\">\n        <input type=\"text\" onChange={(evt) => setUsername(evt)} />\n        <button onClick={createUser}>Create user</button>\n      </div>\n    );\n  }\n};\n\nexport default User;\n\n// import React from \"react\";\n\n// class User extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n\n//     this.createUser = this.createUser.bind(this);\n//     this.setUsername = this.setUsername.bind(this);\n//   }\n\n//   createUser() {\n//     fetch(\"/createUser\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ name: this.state.username }),\n//     })\n//       .then((results) => results.json())\n//       .then((data) => {\n//         this.setState(\n//           {\n//             userId: data.id,\n//           },\n//           () => this.props.onUpdate(this.state)\n//         );\n//       });\n//   }\n\n//   setUsername(evt) {\n//     this.setState({\n//       username: evt.target.value,\n//     });\n//   }\n\n//   render() {\n//     if (this.state.userId) {\n//       return (\n//         <div className=\"userinfo userconnected\">\n//           Connected as <span className=\"username\">{this.state.username}</span>\n//         </div>\n//       );\n//     } else {\n//       return (\n//         <div className=\"userinfo\">\n//           <input type=\"text\" onChange={(evt) => this.setUsername(evt)} />\n//           <button onClick={this.createUser}>Create user</button>\n//         </div>\n//       );\n//     }\n//   }\n// }\n\n// export default User;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,aAAa,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAMU,MAAM,GAAG,IAAIT,MAAM,CAAC;IACxBU,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC,kBAAkB;IAC7CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG;EAC1B,CAAC,CAAC;EAEF,eAAeC,UAAUA,CAACC,QAAQ,EAAE;IAClC,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMT,MAAM,CAACU,KAAK,CAACH,UAAU,CAAC;QACjDI,IAAI,EAAEH,QAAQ;QACdI,WAAW,EAAEJ;MACf,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOK,CAAC,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMG,WAAW,GAAIC,GAAG,IAAK;IAC3BlB,OAAO,CAAC;MACNS,QAAQ,EAAES,GAAG,CAACC,MAAM,CAACC;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,IAAIrB,IAAI,CAACsB,MAAM,EAAE;IACf,oBACE1B,OAAA;MAAK2B,SAAS,EAAC,wBAAwB;MAAAC,QAAA,GAAC,eACzB,eAAA5B,OAAA;QAAM2B,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAExB,IAAI,CAACU;MAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAEV,CAAC,MAAM;IACL,oBACEhC,OAAA;MAAK2B,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvB5B,OAAA;QAAOiC,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAGX,GAAG,IAAKD,WAAW,CAACC,GAAG;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DhC,OAAA;QAAQmC,OAAO,EAAEtB,UAAW;QAAAe,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAEV;AACF,CAAC;AAAC7B,EAAA,CAlDIF,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAoDV,eAAeA,IAAI;;AAEnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}