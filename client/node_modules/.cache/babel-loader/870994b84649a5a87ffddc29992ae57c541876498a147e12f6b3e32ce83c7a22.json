{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nclass Account {\n  /**\n   * @param {Credentials} credentials\n   *    credentials to be used when interacting with the API.\n   * @param {Object} options\n   *    Addition Account options.\n   */\n  constructor(credentials) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.creds = credentials;\n    this.options = options;\n  }\n  /**\n   * TODO: document\n   */\n\n  checkBalance(callback) {\n    return this.options.rest.get(\"/account/get-balance\", callback);\n  }\n  updatePassword(newSecret, callback) {\n    return this.options.rest.postUseQueryString(\"/account/settings\", {\n      newSecret\n    }, callback);\n  }\n  updateSMSCallback(moCallBackUrl, callback) {\n    return this.options.rest.postUseQueryString(\"/account/settings\", {\n      moCallBackUrl\n    }, callback);\n  }\n  updateDeliveryReceiptCallback(drCallBackUrl, callback) {\n    return this.options.rest.postUseQueryString(\"/account/settings\", {\n      drCallBackUrl\n    }, callback);\n  }\n  topUp(trx, callback) {\n    return this.options.rest.postUseQueryString(\"/account/top-up\", {\n      trx\n    }, callback);\n  }\n  listSecrets(apiKey, callback) {\n    return this.options.api.get(\"/accounts/\" + apiKey + \"/secrets\", {}, callback, false, true);\n  }\n  getSecret(apiKey, id, callback) {\n    return this.options.api.get(\"/accounts/\" + apiKey + \"/secrets/\" + id, {}, callback, false, true);\n  }\n  createSecret(apiKey, secret, callback) {\n    return this.options.api.postJson(\"/accounts/\" + apiKey + \"/secrets/\", {\n      secret: secret\n    }, callback, false, true);\n  }\n  deleteSecret(apiKey, id, callback) {\n    return this.options.api.delete(\"/accounts/\" + apiKey + \"/secrets/\" + id, callback, false, true);\n  }\n}\nvar _default = Account;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Account","constructor","credentials","options","arguments","length","undefined","creds","checkBalance","callback","rest","get","updatePassword","newSecret","postUseQueryString","updateSMSCallback","moCallBackUrl","updateDeliveryReceiptCallback","drCallBackUrl","topUp","trx","listSecrets","apiKey","api","getSecret","id","createSecret","secret","postJson","deleteSecret","delete"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/@vonage/server-sdk/src/Account.js"],"sourcesContent":["\"use strict\";\n\nclass Account {\n  /**\n   * @param {Credentials} credentials\n   *    credentials to be used when interacting with the API.\n   * @param {Object} options\n   *    Addition Account options.\n   */\n  constructor(credentials, options = {}) {\n    this.creds = credentials;\n    this.options = options;\n  }\n\n  /**\n   * TODO: document\n   */\n  checkBalance(callback) {\n    return this.options.rest.get(\"/account/get-balance\", callback);\n  }\n\n  updatePassword(newSecret, callback) {\n    return this.options.rest.postUseQueryString(\n      \"/account/settings\",\n      { newSecret },\n      callback\n    );\n  }\n\n  updateSMSCallback(moCallBackUrl, callback) {\n    return this.options.rest.postUseQueryString(\n      \"/account/settings\",\n      { moCallBackUrl },\n      callback\n    );\n  }\n\n  updateDeliveryReceiptCallback(drCallBackUrl, callback) {\n    return this.options.rest.postUseQueryString(\n      \"/account/settings\",\n      { drCallBackUrl },\n      callback\n    );\n  }\n\n  topUp(trx, callback) {\n    return this.options.rest.postUseQueryString(\n      \"/account/top-up\",\n      { trx },\n      callback\n    );\n  }\n\n  listSecrets(apiKey, callback) {\n    return this.options.api.get(\n      \"/accounts/\" + apiKey + \"/secrets\",\n      {},\n      callback,\n      false,\n      true\n    );\n  }\n\n  getSecret(apiKey, id, callback) {\n    return this.options.api.get(\n      \"/accounts/\" + apiKey + \"/secrets/\" + id,\n      {},\n      callback,\n      false,\n      true\n    );\n  }\n\n  createSecret(apiKey, secret, callback) {\n    return this.options.api.postJson(\n      \"/accounts/\" + apiKey + \"/secrets/\",\n      { secret: secret },\n      callback,\n      false,\n      true\n    );\n  }\n\n  deleteSecret(apiKey, id, callback) {\n    return this.options.api.delete(\n      \"/accounts/\" + apiKey + \"/secrets/\" + id,\n      callback,\n      false,\n      true\n    );\n  }\n}\n\nexport default Account;\n"],"mappings":"AAAA;;;;;;AAEA,MAAMA,OAAN,CAAc;EACZ;AACF;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAACC,WAAD,EAA4B;IAAA,IAAdC,OAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAJ,EAAI;IACrC,KAAKG,KAAL,GAAaL,WAAb;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;EAED;AACF;AACA;;EACEK,YAAYA,CAACC,QAAD,EAAW;IACrB,OAAO,KAAKN,OAAL,CAAaO,IAAb,CAAkBC,GAAlB,CAAsB,sBAAtB,EAA8CF,QAA9C,CAAP;EACD;EAEDG,cAAcA,CAACC,SAAD,EAAYJ,QAAZ,EAAsB;IAClC,OAAO,KAAKN,OAAL,CAAaO,IAAb,CAAkBI,kBAAlB,CACL,mBADK,EAEL;MAAED;IAAF,CAFK,EAGLJ,QAHK,CAAP;EAKD;EAEDM,iBAAiBA,CAACC,aAAD,EAAgBP,QAAhB,EAA0B;IACzC,OAAO,KAAKN,OAAL,CAAaO,IAAb,CAAkBI,kBAAlB,CACL,mBADK,EAEL;MAAEE;IAAF,CAFK,EAGLP,QAHK,CAAP;EAKD;EAEDQ,6BAA6BA,CAACC,aAAD,EAAgBT,QAAhB,EAA0B;IACrD,OAAO,KAAKN,OAAL,CAAaO,IAAb,CAAkBI,kBAAlB,CACL,mBADK,EAEL;MAAEI;IAAF,CAFK,EAGLT,QAHK,CAAP;EAKD;EAEDU,KAAKA,CAACC,GAAD,EAAMX,QAAN,EAAgB;IACnB,OAAO,KAAKN,OAAL,CAAaO,IAAb,CAAkBI,kBAAlB,CACL,iBADK,EAEL;MAAEM;IAAF,CAFK,EAGLX,QAHK,CAAP;EAKD;EAEDY,WAAWA,CAACC,MAAD,EAASb,QAAT,EAAmB;IAC5B,OAAO,KAAKN,OAAL,CAAaoB,GAAb,CAAiBZ,GAAjB,CACL,eAAeW,MAAf,GAAwB,UADnB,EAEL,EAFK,EAGLb,QAHK,EAIL,KAJK,EAKL,IALK,CAAP;EAOD;EAEDe,SAASA,CAACF,MAAD,EAASG,EAAT,EAAahB,QAAb,EAAuB;IAC9B,OAAO,KAAKN,OAAL,CAAaoB,GAAb,CAAiBZ,GAAjB,CACL,eAAeW,MAAf,GAAwB,WAAxB,GAAsCG,EADjC,EAEL,EAFK,EAGLhB,QAHK,EAIL,KAJK,EAKL,IALK,CAAP;EAOD;EAEDiB,YAAYA,CAACJ,MAAD,EAASK,MAAT,EAAiBlB,QAAjB,EAA2B;IACrC,OAAO,KAAKN,OAAL,CAAaoB,GAAb,CAAiBK,QAAjB,CACL,eAAeN,MAAf,GAAwB,WADnB,EAEL;MAAEK,MAAM,EAAEA;IAAV,CAFK,EAGLlB,QAHK,EAIL,KAJK,EAKL,IALK,CAAP;EAOD;EAEDoB,YAAYA,CAACP,MAAD,EAASG,EAAT,EAAahB,QAAb,EAAuB;IACjC,OAAO,KAAKN,OAAL,CAAaoB,GAAb,CAAiBO,MAAjB,CACL,eAAeR,MAAf,GAAwB,WAAxB,GAAsCG,EADjC,EAELhB,QAFK,EAGL,KAHK,EAIL,IAJK,CAAP;EAMD;AAxFW;eA2FCT,O"},"metadata":{},"sourceType":"script","externalDependencies":[]}