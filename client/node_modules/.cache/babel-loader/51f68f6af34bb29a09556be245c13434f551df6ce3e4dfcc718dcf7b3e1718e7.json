{"ast":null,"code":"var _jsxFileName = \"/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport nexmoClient from \"nexmo-client\";\nimport \"./App.scss\";\nimport User from \"./components/User\";\nimport Chatroom from \"./components/Chatroom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State to manage the visibility of login/signup forms and the chatroom\n  const [show, setShow] = useState(false);\n  const [openConv, setOpenConv] = useState(false);\n  const [userLoginInfo, setUserLoginInfo] = useState({\n    token: \"\",\n    sessionData: null // Provide an appropriate default value\n  });\n\n  // Function to create a session for the user\n  const login = async () => {\n    try {\n      // Create a Nexmo client instance and initialize a session\n      let nexmo = new nexmoClient({\n        debug: true,\n        log_reporter: {\n          enabled: true\n        }\n      });\n      const sessionData = await nexmo.createSession(userLoginInfo.token);\n\n      // Update userLoginInfo with the sessionData\n      setUserLoginInfo(prevState => ({\n        ...prevState,\n        sessionData: sessionData\n      }));\n    } catch (error) {\n      console.error(\"Error in login:\", error);\n    }\n  };\n\n  // Function to get a JWT token\n  const getJWT = async user => {\n    try {\n      const response = await fetch(\"/getJWT\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: user.username\n        })\n      });\n      const data = await response.json();\n\n      // Update userLoginInfo with the JWT token\n      setUserLoginInfo(prevState => ({\n        ...prevState,\n        token: data.jwt\n      }));\n    } catch (error) {\n      console.error(\"Error in getJWT:\", error);\n    }\n  };\n\n  // Function to open the chat when a user is selected\n  const openChat = user => {\n    setUserLoginInfo(prevState => ({\n      ...prevState,\n      user: user\n    }));\n    getJWT(user);\n    setOpenConv(true);\n  };\n\n  // Event handlers for login and signup buttons\n  const handleLoginClick = () => {\n    setShow(\"login\");\n  };\n  const handleSignupClick = () => {\n    setShow(\"signup\");\n  };\n\n  // Effect to trigger the login function when a token is available\n  useEffect(() => {\n    if (userLoginInfo.token) {\n      login();\n    }\n  }, [userLoginInfo.token]);\n\n  // Render the Chatroom or Login/Signup form based on the state\n  if (openConv) {\n    return /*#__PURE__*/_jsxDEV(Chatroom, {\n      userLoginInfo: userLoginInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nexmoapplication flexcolcenteralign\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nexmocontainer flexcol\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexrow btncontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleLoginClick,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleSignupClick,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), show === \"signup\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup flexcolcenteralign\",\n          children: /*#__PURE__*/_jsxDEV(User, {\n            openChatUpdate: openChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Coming soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Login Component\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(App, \"7X/uQjssS4CmGGW0fULyz66inEI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","nexmoClient","User","Chatroom","jsxDEV","_jsxDEV","App","_s","show","setShow","openConv","setOpenConv","userLoginInfo","setUserLoginInfo","token","sessionData","login","nexmo","debug","log_reporter","enabled","createSession","prevState","error","console","getJWT","user","response","fetch","method","headers","body","JSON","stringify","name","username","data","json","jwt","openChat","handleLoginClick","handleSignupClick","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","openChatUpdate","_c","$RefreshReg$"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport nexmoClient from \"nexmo-client\";\nimport \"./App.scss\";\nimport User from \"./components/User\";\nimport Chatroom from \"./components/Chatroom\";\n\ninterface UserInfo {\n  token?: String;\n  sessionData: any; // Adjust the type according to the actual structure\n  user?: any; // Adjust the type according to the actual structure\n}\n\nconst App: React.FC = () => {\n  // State to manage the visibility of login/signup forms and the chatroom\n  const [show, setShow] = useState<string | boolean>(false);\n  const [openConv, setOpenConv] = useState<boolean>(false);\n  const [userLoginInfo, setUserLoginInfo] = useState<UserInfo>({\n    token: \"\",\n    sessionData: null, // Provide an appropriate default value\n  });\n\n  // Function to create a session for the user\n  const login = async () => {\n    try {\n      // Create a Nexmo client instance and initialize a session\n      let nexmo: any = new nexmoClient({\n        debug: true,\n        log_reporter: { enabled: true },\n      });\n      \n      const sessionData = await nexmo.createSession(userLoginInfo.token);\n\n      // Update userLoginInfo with the sessionData\n      setUserLoginInfo((prevState) => ({\n        ...prevState,\n        sessionData: sessionData,\n      }));\n    } catch (error) {\n      console.error(\"Error in login:\", error);\n    }\n  };\n\n  // Function to get a JWT token\n  const getJWT = async (user: { username: string }) => {\n    try {\n      const response = await fetch(\"/getJWT\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: user.username }),\n      });\n      const data = await response.json();\n\n      // Update userLoginInfo with the JWT token\n      setUserLoginInfo((prevState) => ({\n        ...prevState,\n        token: data.jwt,\n      }));\n    } catch (error) {\n      console.error(\"Error in getJWT:\", error);\n    }\n  };\n\n  // Function to open the chat when a user is selected\n  const openChat = (user: any) => {\n    setUserLoginInfo((prevState) => ({\n      ...prevState,\n      user: user,\n    }));\n    getJWT(user);\n    setOpenConv(true);\n  };\n\n  // Event handlers for login and signup buttons\n  const handleLoginClick = () => {\n    setShow(\"login\");\n  };\n  const handleSignupClick = () => {\n    setShow(\"signup\");\n  };\n\n  // Effect to trigger the login function when a token is available\n  useEffect(() => {\n    if (userLoginInfo.token) {\n      login();\n    }\n  }, [userLoginInfo.token]);\n\n  // Render the Chatroom or Login/Signup form based on the state\n  if (openConv) {\n    return <Chatroom userLoginInfo={userLoginInfo} />;\n  } else {\n    return (\n      <div className=\"nexmoapplication flexcolcenteralign\">\n        <div className=\"nexmocontainer flexcol\">\n          <div className=\"flexrow btncontainer\">\n            <button className=\"button\" onClick={handleLoginClick}>\n              Login\n            </button>\n            <button className=\"button\" onClick={handleSignupClick}>\n              Signup\n            </button>\n          </div>\n          {show === \"signup\" ? (\n            <div className=\"signup flexcolcenteralign\">\n              <User openChatUpdate={openChat} />\n            </div>\n          ) : (\n            <div className=\"login\">\n              <h2>Coming soon</h2>\n              <p>Login Component</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}