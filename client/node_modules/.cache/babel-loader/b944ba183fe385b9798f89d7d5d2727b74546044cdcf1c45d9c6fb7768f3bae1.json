{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/**\n * Provides access to the `dtmf` resource.\n */\nvar DtmfResource = function () {\n  _createClass(DtmfResource, null, [{\n    key: \"PATH\",\n    /**\n     * The path to the `dtmf` resource.\n     */\n    get: function get() {\n      return \"/v1/calls/{call_uuid}/dtmf\";\n    }\n\n    /**\n     * Creates a new DtmfResource.\n     *\n     * @param {Credentials} creds - Credentials used when interacting with the Nexmo API.\n     * @param {Object} options - additional options for the class.\n     */\n  }]);\n  function DtmfResource(creds, options) {\n    _classCallCheck(this, DtmfResource);\n    this.creds = creds;\n    this.options = options;\n  }\n\n  /**\n   * Sends DTMF to a call.\n   *\n   * @param {Object} params - Parameters used when sending the dtmf to the call. See https://developer.nexmo.com/api/voice#dtmf for more information.\n   * @param {function} callback - function to be called when the request completes.\n   */\n\n  _createClass(DtmfResource, [{\n    key: \"send\",\n    value: function send(callId, params, callback) {\n      params = JSON.stringify(params);\n      var config = {\n        host: this.options.apiHost || \"api.nexmo.com\",\n        path: DtmfResource.PATH.replace(\"{call_uuid}\", callId),\n        method: \"PUT\",\n        body: params,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Content-Length\": Buffer.byteLength(params),\n          Authorization: \"Bearer \" + this.creds.generateJwt()\n        }\n      };\n      this.options.httpClient.request(config, callback);\n    }\n  }]);\n  return DtmfResource;\n}();\nexports.default = DtmfResource;\nmodule.exports = exports[\"default\"];","map":{"version":3,"names":["DtmfResource","creds","options","_classCallCheck","callId","params","callback","JSON","stringify","config","host","apiHost","path","PATH","replace","method","body","headers","Buffer","byteLength","Authorization","generateJwt","httpClient","request"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/node_modules/nexmo/src/DtmfResource.js"],"sourcesContent":["/**\n * Provides access to the `dtmf` resource.\n */\nclass DtmfResource {\n  /**\n   * The path to the `dtmf` resource.\n   */\n  static get PATH() {\n    return \"/v1/calls/{call_uuid}/dtmf\";\n  }\n\n  /**\n   * Creates a new DtmfResource.\n   *\n   * @param {Credentials} creds - Credentials used when interacting with the Nexmo API.\n   * @param {Object} options - additional options for the class.\n   */\n  constructor(creds, options) {\n    this.creds = creds;\n    this.options = options;\n  }\n\n  /**\n   * Sends DTMF to a call.\n   *\n   * @param {Object} params - Parameters used when sending the dtmf to the call. See https://developer.nexmo.com/api/voice#dtmf for more information.\n   * @param {function} callback - function to be called when the request completes.\n   */\n  send(callId, params, callback) {\n    params = JSON.stringify(params);\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: DtmfResource.PATH.replace(\"{call_uuid}\", callId),\n      method: \"PUT\",\n      body: params,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Content-Length\": Buffer.byteLength(params),\n        Authorization: `Bearer ${this.creds.generateJwt()}`\n      }\n    };\n    this.options.httpClient.request(config, callback);\n  }\n}\n\nexport default DtmfResource;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;IAGMA,Y;;;IACJ;;;wBAGkB;MAChB,OAAO,4BAAP;IACD;;IAED;;;;;;;EAMA,SAAAA,aAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;IAAAC,eAAA,OAAAH,YAAA;IAC1B,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;;EAED;;;;;;;;;yBAMKE,M,EAAQC,M,EAAQC,Q,EAAU;MAC7BD,MAAA,GAASE,IAAA,CAAKC,SAAL,CAAeH,MAAf,CAAT;MAEA,IAAII,MAAA,GAAS;QACXC,IAAA,EAAM,KAAKR,OAAL,CAAaS,OAAb,IAAwB,eADnB;QAEXC,IAAA,EAAMZ,YAAA,CAAaa,IAAb,CAAkBC,OAAlB,CAA0B,aAA1B,EAAyCV,MAAzC,CAFK;QAGXW,MAAA,EAAQ,KAHG;QAIXC,IAAA,EAAMX,MAJK;QAKXY,OAAA,EAAS;UACP,gBAAgB,kBADT;UAEP,kBAAkBC,MAAA,CAAOC,UAAP,CAAkBd,MAAlB,CAFX;UAGPe,aAAA,cAAyB,KAAKnB,KAAL,CAAWoB,WAAX;QAHlB;MALE,CAAb;MAWA,KAAKnB,OAAL,CAAaoB,UAAb,CAAwBC,OAAxB,CAAgCd,MAAhC,EAAwCH,QAAxC;IACD;;;;kBAGYN,Y"},"metadata":{},"sourceType":"script","externalDependencies":[]}