{"ast":null,"code":"var _jsxFileName = \"/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/components/Conversation.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Conversation() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"open chat fcfgcfgcfgc\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = Conversation;\nexport default Conversation;\n\n// import React, { useState, useEffect } from \"react\";\n\n// const Conversation = ({ sessionData, loggedIn }) => {\n//   const [conversationData, setConversationData] = useState({});\n//   const [messages, setMessages] = useState([]);\n//   const [input, setInput] = useState(null);\n\n//   const createConversation = () => {\n//     sessionData.newConversation().then((conv) => {\n//       conv.on(\"text\", onMessage);\n//       conv.join().then((member) => {\n//         setConversationData({\n//           conversation: conv,\n//         });\n//       });\n//     });\n//   };\n\n//   const onMessage = (sender, message) => {\n//     let newMessages = messages.concat({\n//       key: message.id,\n//       sender: sender.display_name,\n//       text: message.body.text,\n//     });\n//     setMessages((prevmessage) => ({\n//       ...prevmessage,\n//       newMessages,\n//     }));\n//   };\n\n//   const sendInput = (evt) => {\n//     conversationData.conversation.sendText(input).then(() => {\n//       setInput(null);\n//     });\n//     evt.target.previousSibling.value = \"\";\n//   };\n\n//   useEffect(() => {\n//     // componentDidMount logic can go here\n//   }, []);\n\n//   if (conversationData.conversation) {\n//     return (\n//       <>\n//         <div className=\"conversation\">Joined conversation!</div>\n//         <div className=\"chatroom\">\n//           <div className=\"messages\">\n//             {messages.map((msg) => (\n//               <p key={msg.key} className=\"message\">\n//                 <b>{msg.sender}:</b>\n//                 {msg.text}\n//               </p>\n//             ))}\n//           </div>\n//           <div className=\"userinfo\">\n//             <textarea\n//               className=\"userinput\"\n//               onBlur={(evt) => setInput(evt.target.value)}\n//             />\n//             <button className=\"userbutton\" onClick={(evt) => sendInput(evt)}>\n//               Chat\n//             </button>\n//           </div>\n//         </div>\n//       </>\n//     );\n//   } else {\n//     return (\n//       <div className=\"btncontainer\">\n//         <button\n//           id=\"btn2\"\n//           className=\"button\"\n//           onClick={createConversation}\n//           disabled={!loggedIn}\n//         >\n//           Start conversation\n//         </button>\n//       </div>\n//     );\n//   }\n// };\n\n// export default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Conversation","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vineetkhodre/react-workspace/thoughtctlchatapp/client/src/components/Conversation.js"],"sourcesContent":["import React from \"react\";\n\nfunction Conversation() {\n  return <div>open chat fcfgcfgcfgc</div>;\n}\n\nexport default Conversation;\n\n// import React, { useState, useEffect } from \"react\";\n\n// const Conversation = ({ sessionData, loggedIn }) => {\n//   const [conversationData, setConversationData] = useState({});\n//   const [messages, setMessages] = useState([]);\n//   const [input, setInput] = useState(null);\n\n//   const createConversation = () => {\n//     sessionData.newConversation().then((conv) => {\n//       conv.on(\"text\", onMessage);\n//       conv.join().then((member) => {\n//         setConversationData({\n//           conversation: conv,\n//         });\n//       });\n//     });\n//   };\n\n//   const onMessage = (sender, message) => {\n//     let newMessages = messages.concat({\n//       key: message.id,\n//       sender: sender.display_name,\n//       text: message.body.text,\n//     });\n//     setMessages((prevmessage) => ({\n//       ...prevmessage,\n//       newMessages,\n//     }));\n//   };\n\n//   const sendInput = (evt) => {\n//     conversationData.conversation.sendText(input).then(() => {\n//       setInput(null);\n//     });\n//     evt.target.previousSibling.value = \"\";\n//   };\n\n//   useEffect(() => {\n//     // componentDidMount logic can go here\n//   }, []);\n\n//   if (conversationData.conversation) {\n//     return (\n//       <>\n//         <div className=\"conversation\">Joined conversation!</div>\n//         <div className=\"chatroom\">\n//           <div className=\"messages\">\n//             {messages.map((msg) => (\n//               <p key={msg.key} className=\"message\">\n//                 <b>{msg.sender}:</b>\n//                 {msg.text}\n//               </p>\n//             ))}\n//           </div>\n//           <div className=\"userinfo\">\n//             <textarea\n//               className=\"userinput\"\n//               onBlur={(evt) => setInput(evt.target.value)}\n//             />\n//             <button className=\"userbutton\" onClick={(evt) => sendInput(evt)}>\n//               Chat\n//             </button>\n//           </div>\n//         </div>\n//       </>\n//     );\n//   } else {\n//     return (\n//       <div className=\"btncontainer\">\n//         <button\n//           id=\"btn2\"\n//           className=\"button\"\n//           onClick={createConversation}\n//           disabled={!loggedIn}\n//         >\n//           Start conversation\n//         </button>\n//       </div>\n//     );\n//   }\n// };\n\n// export default Conversation;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EACtB,oBAAOD,OAAA;IAAAE,QAAA,EAAK;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACzC;AAACC,EAAA,GAFQN,YAAY;AAIrB,eAAeA,YAAY;;AAE3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}